(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
	typeof define === 'function' && define.amd ? define(['exports'], factory) :
	(factory((global.jsonx = {})));
}(this, (function (exports) { 'use strict';

	var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

	function unwrapExports (x) {
		return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
	}

	function createCommonjsModule(fn, module) {
		return module = { exports: {} }, fn(module, module.exports), module.exports;
	}

	var _typeof_1 = createCommonjsModule(function (module) {
	function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

	function _typeof(obj) {
	  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
	    module.exports = _typeof = function _typeof(obj) {
	      return _typeof2(obj);
	    };
	  } else {
	    module.exports = _typeof = function _typeof(obj) {
	      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
	    };
	  }

	  return _typeof(obj);
	}

	module.exports = _typeof;
	});

	/*
	object-assign
	(c) Sindre Sorhus
	@license MIT
	*/
	/* eslint-disable no-unused-vars */

	var getOwnPropertySymbols = Object.getOwnPropertySymbols;
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;

	function toObject(val) {
	  if (val === null || val === undefined) {
	    throw new TypeError('Object.assign cannot be called with null or undefined');
	  }

	  return Object(val);
	}

	function shouldUseNative() {
	  try {
	    if (!Object.assign) {
	      return false;
	    } // Detect buggy property enumeration order in older V8 versions.
	    // https://bugs.chromium.org/p/v8/issues/detail?id=4118


	    var test1 = new String('abc'); // eslint-disable-line no-new-wrappers

	    test1[5] = 'de';

	    if (Object.getOwnPropertyNames(test1)[0] === '5') {
	      return false;
	    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056


	    var test2 = {};

	    for (var i = 0; i < 10; i++) {
	      test2['_' + String.fromCharCode(i)] = i;
	    }

	    var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
	      return test2[n];
	    });

	    if (order2.join('') !== '0123456789') {
	      return false;
	    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056


	    var test3 = {};
	    'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
	      test3[letter] = letter;
	    });

	    if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {
	      return false;
	    }

	    return true;
	  } catch (err) {
	    // We don't expect any of the above to throw, but better to be safe.
	    return false;
	  }
	}

	var objectAssign = shouldUseNative() ? Object.assign : function (target, source) {
	  var from;
	  var to = toObject(target);
	  var symbols;

	  for (var s = 1; s < arguments.length; s++) {
	    from = Object(arguments[s]);

	    for (var key in from) {
	      if (hasOwnProperty.call(from, key)) {
	        to[key] = from[key];
	      }
	    }

	    if (getOwnPropertySymbols) {
	      symbols = getOwnPropertySymbols(from);

	      for (var i = 0; i < symbols.length; i++) {
	        if (propIsEnumerable.call(from, symbols[i])) {
	          to[symbols[i]] = from[symbols[i]];
	        }
	      }
	    }
	  }

	  return to;
	};

	var n = "function" === typeof Symbol && Symbol["for"],
	    p = n ? Symbol["for"]("react.element") : 60103,
	    q = n ? Symbol["for"]("react.portal") : 60106,
	    r = n ? Symbol["for"]("react.fragment") : 60107,
	    t = n ? Symbol["for"]("react.strict_mode") : 60108,
	    u = n ? Symbol["for"]("react.profiler") : 60114,
	    v = n ? Symbol["for"]("react.provider") : 60109,
	    w = n ? Symbol["for"]("react.context") : 60110,
	    x = n ? Symbol["for"]("react.forward_ref") : 60112,
	    y = n ? Symbol["for"]("react.suspense") : 60113,
	    aa = n ? Symbol["for"]("react.suspense_list") : 60120,
	    ba = n ? Symbol["for"]("react.memo") : 60115,
	    ca = n ? Symbol["for"]("react.lazy") : 60116;
	var z = "function" === typeof Symbol && Symbol.iterator;

	function A(a) {
	  for (var b = a.message, c = "https://reactjs.org/docs/error-decoder.html?invariant=" + b, d = 1; d < arguments.length; d++) {
	    c += "&args[]=" + encodeURIComponent(arguments[d]);
	  }

	  a.message = "Minified React error #" + b + "; visit " + c + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ";
	  return a;
	}

	var B = {
	  isMounted: function isMounted() {
	    return !1;
	  },
	  enqueueForceUpdate: function enqueueForceUpdate() {},
	  enqueueReplaceState: function enqueueReplaceState() {},
	  enqueueSetState: function enqueueSetState() {}
	},
	    C = {};

	function D(a, b, c) {
	  this.props = a;
	  this.context = b;
	  this.refs = C;
	  this.updater = c || B;
	}

	D.prototype.isReactComponent = {};

	D.prototype.setState = function (a, b) {
	  if ("object" !== _typeof_1(a) && "function" !== typeof a && null != a) throw A(Error(85));
	  this.updater.enqueueSetState(this, a, b, "setState");
	};

	D.prototype.forceUpdate = function (a) {
	  this.updater.enqueueForceUpdate(this, a, "forceUpdate");
	};

	function E() {}

	E.prototype = D.prototype;

	function F(a, b, c) {
	  this.props = a;
	  this.context = b;
	  this.refs = C;
	  this.updater = c || B;
	}

	var G = F.prototype = new E();
	G.constructor = F;
	objectAssign(G, D.prototype);
	G.isPureReactComponent = !0;
	var H = {
	  current: null
	},
	    I = {
	  suspense: null
	},
	    J = {
	  current: null
	},
	    K = Object.prototype.hasOwnProperty,
	    L = {
	  key: !0,
	  ref: !0,
	  __self: !0,
	  __source: !0
	};

	function M(a, b, c) {
	  var d,
	      e = {},
	      g = null,
	      l = null;
	  if (null != b) for (d in void 0 !== b.ref && (l = b.ref), void 0 !== b.key && (g = "" + b.key), b) {
	    K.call(b, d) && !L.hasOwnProperty(d) && (e[d] = b[d]);
	  }
	  var f = arguments.length - 2;
	  if (1 === f) e.children = c;else if (1 < f) {
	    for (var k = Array(f), m = 0; m < f; m++) {
	      k[m] = arguments[m + 2];
	    }

	    e.children = k;
	  }
	  if (a && a.defaultProps) for (d in f = a.defaultProps, f) {
	    void 0 === e[d] && (e[d] = f[d]);
	  }
	  return {
	    $$typeof: p,
	    type: a,
	    key: g,
	    ref: l,
	    props: e,
	    _owner: J.current
	  };
	}

	function da(a, b) {
	  return {
	    $$typeof: p,
	    type: a.type,
	    key: b,
	    ref: a.ref,
	    props: a.props,
	    _owner: a._owner
	  };
	}

	function N(a) {
	  return "object" === _typeof_1(a) && null !== a && a.$$typeof === p;
	}

	function escape(a) {
	  var b = {
	    "=": "=0",
	    ":": "=2"
	  };
	  return "$" + ("" + a).replace(/[=:]/g, function (a) {
	    return b[a];
	  });
	}

	var O = /\/+/g,
	    P = [];

	function Q(a, b, c, d) {
	  if (P.length) {
	    var e = P.pop();
	    e.result = a;
	    e.keyPrefix = b;
	    e.func = c;
	    e.context = d;
	    e.count = 0;
	    return e;
	  }

	  return {
	    result: a,
	    keyPrefix: b,
	    func: c,
	    context: d,
	    count: 0
	  };
	}

	function R(a) {
	  a.result = null;
	  a.keyPrefix = null;
	  a.func = null;
	  a.context = null;
	  a.count = 0;
	  10 > P.length && P.push(a);
	}

	function S(a, b, c, d) {
	  var e = _typeof_1(a);

	  if ("undefined" === e || "boolean" === e) a = null;
	  var g = !1;
	  if (null === a) g = !0;else switch (e) {
	    case "string":
	    case "number":
	      g = !0;
	      break;

	    case "object":
	      switch (a.$$typeof) {
	        case p:
	        case q:
	          g = !0;
	      }

	  }
	  if (g) return c(d, a, "" === b ? "." + T(a, 0) : b), 1;
	  g = 0;
	  b = "" === b ? "." : b + ":";
	  if (Array.isArray(a)) for (var l = 0; l < a.length; l++) {
	    e = a[l];
	    var f = b + T(e, l);
	    g += S(e, f, c, d);
	  } else if (null === a || "object" !== _typeof_1(a) ? f = null : (f = z && a[z] || a["@@iterator"], f = "function" === typeof f ? f : null), "function" === typeof f) for (a = f.call(a), l = 0; !(e = a.next()).done;) {
	    e = e.value, f = b + T(e, l++), g += S(e, f, c, d);
	  } else if ("object" === e) throw c = "" + a, A(Error(31), "[object Object]" === c ? "object with keys {" + Object.keys(a).join(", ") + "}" : c, "");
	  return g;
	}

	function U(a, b, c) {
	  return null == a ? 0 : S(a, "", b, c);
	}

	function T(a, b) {
	  return "object" === _typeof_1(a) && null !== a && null != a.key ? escape(a.key) : b.toString(36);
	}

	function ea(a, b) {
	  a.func.call(a.context, b, a.count++);
	}

	function fa(a, b, c) {
	  var d = a.result,
	      e = a.keyPrefix;
	  a = a.func.call(a.context, b, a.count++);
	  Array.isArray(a) ? V(a, d, c, function (a) {
	    return a;
	  }) : null != a && (N(a) && (a = da(a, e + (!a.key || b && b.key === a.key ? "" : ("" + a.key).replace(O, "$&/") + "/") + c)), d.push(a));
	}

	function V(a, b, c, d, e) {
	  var g = "";
	  null != c && (g = ("" + c).replace(O, "$&/") + "/");
	  b = Q(b, g, d, e);
	  U(a, fa, b);
	  R(b);
	}

	function W() {
	  var a = H.current;
	  if (null === a) throw A(Error(321));
	  return a;
	}

	var X = {
	  Children: {
	    map: function map(a, b, c) {
	      if (null == a) return a;
	      var d = [];
	      V(a, d, null, b, c);
	      return d;
	    },
	    forEach: function forEach(a, b, c) {
	      if (null == a) return a;
	      b = Q(null, null, b, c);
	      U(a, ea, b);
	      R(b);
	    },
	    count: function count(a) {
	      return U(a, function () {
	        return null;
	      }, null);
	    },
	    toArray: function toArray(a) {
	      var b = [];
	      V(a, b, null, function (a) {
	        return a;
	      });
	      return b;
	    },
	    only: function only(a) {
	      if (!N(a)) throw A(Error(143));
	      return a;
	    }
	  },
	  createRef: function createRef() {
	    return {
	      current: null
	    };
	  },
	  Component: D,
	  PureComponent: F,
	  createContext: function createContext(a, b) {
	    void 0 === b && (b = null);
	    a = {
	      $$typeof: w,
	      _calculateChangedBits: b,
	      _currentValue: a,
	      _currentValue2: a,
	      _threadCount: 0,
	      Provider: null,
	      Consumer: null
	    };
	    a.Provider = {
	      $$typeof: v,
	      _context: a
	    };
	    return a.Consumer = a;
	  },
	  forwardRef: function forwardRef(a) {
	    return {
	      $$typeof: x,
	      render: a
	    };
	  },
	  lazy: function lazy(a) {
	    return {
	      $$typeof: ca,
	      _ctor: a,
	      _status: -1,
	      _result: null
	    };
	  },
	  memo: function memo(a, b) {
	    return {
	      $$typeof: ba,
	      type: a,
	      compare: void 0 === b ? null : b
	    };
	  },
	  useCallback: function useCallback(a, b) {
	    return W().useCallback(a, b);
	  },
	  useContext: function useContext(a, b) {
	    return W().useContext(a, b);
	  },
	  useEffect: function useEffect(a, b) {
	    return W().useEffect(a, b);
	  },
	  useImperativeHandle: function useImperativeHandle(a, b, c) {
	    return W().useImperativeHandle(a, b, c);
	  },
	  useDebugValue: function useDebugValue() {},
	  useLayoutEffect: function useLayoutEffect(a, b) {
	    return W().useLayoutEffect(a, b);
	  },
	  useMemo: function useMemo(a, b) {
	    return W().useMemo(a, b);
	  },
	  useReducer: function useReducer(a, b, c) {
	    return W().useReducer(a, b, c);
	  },
	  useRef: function useRef(a) {
	    return W().useRef(a);
	  },
	  useState: function useState(a) {
	    return W().useState(a);
	  },
	  Fragment: r,
	  Profiler: u,
	  StrictMode: t,
	  Suspense: y,
	  unstable_SuspenseList: aa,
	  createElement: M,
	  cloneElement: function cloneElement(a, b, c) {
	    if (null === a || void 0 === a) throw A(Error(267), a);
	    var d = objectAssign({}, a.props),
	        e = a.key,
	        g = a.ref,
	        l = a._owner;

	    if (null != b) {
	      void 0 !== b.ref && (g = b.ref, l = J.current);
	      void 0 !== b.key && (e = "" + b.key);
	      if (a.type && a.type.defaultProps) var f = a.type.defaultProps;

	      for (k in b) {
	        K.call(b, k) && !L.hasOwnProperty(k) && (d[k] = void 0 === b[k] && void 0 !== f ? f[k] : b[k]);
	      }
	    }

	    var k = arguments.length - 2;
	    if (1 === k) d.children = c;else if (1 < k) {
	      f = Array(k);

	      for (var m = 0; m < k; m++) {
	        f[m] = arguments[m + 2];
	      }

	      d.children = f;
	    }
	    return {
	      $$typeof: p,
	      type: a.type,
	      key: e,
	      ref: g,
	      props: d,
	      _owner: l
	    };
	  },
	  createFactory: function createFactory(a) {
	    var b = M.bind(null, a);
	    b.type = a;
	    return b;
	  },
	  isValidElement: N,
	  version: "16.10.2",
	  unstable_withSuspenseConfig: function unstable_withSuspenseConfig(a, b) {
	    var c = I.suspense;
	    I.suspense = void 0 === b ? null : b;

	    try {
	      a();
	    } finally {
	      I.suspense = c;
	    }
	  },
	  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
	    ReactCurrentDispatcher: H,
	    ReactCurrentBatchConfig: I,
	    ReactCurrentOwner: J,
	    IsSomeRendererActing: {
	      current: !1
	    },
	    assign: objectAssign
	  }
	},
	    Y = {
	  "default": X
	},
	    Z = Y && X || Y;
	var react_production_min = Z["default"] || Z;

	var react = createCommonjsModule(function (module) {

	  {
	    module.exports = react_production_min;
	  }
	});
	var react_1 = react.Children;
	var react_2 = react.Component;
	var react_3 = react.PropTypes;
	var react_4 = react.createContext;
	var react_5 = react.Fragment;
	var react_6 = react.Suspense;
	var react_7 = react.lazy;
	var react_8 = react.createElement;
	var react_9 = react.useState;
	var react_10 = react.useEffect;
	var react_11 = react.useContext;
	var react_12 = react.useReducer;
	var react_13 = react.useCallback;
	var react_14 = react.useMemo;
	var react_15 = react.useRef;
	var react_16 = react.useImperativeHandle;
	var react_17 = react.useLayoutEffect;
	var react_18 = react.useDebugValue;

	var scheduler_production_min = createCommonjsModule(function (module, exports) {

	  Object.defineProperty(exports, "__esModule", {
	    value: !0
	  });

	  var _f, g, h, k, l;

	  if ("undefined" === typeof window || "function" !== typeof MessageChannel) {
	    var p = null,
	        q = null,
	        t = function t() {
	      if (null !== p) try {
	        var a = exports.unstable_now();
	        p(!0, a);
	        p = null;
	      } catch (b) {
	        throw setTimeout(t, 0), b;
	      }
	    },
	        u = Date.now();

	    exports.unstable_now = function () {
	      return Date.now() - u;
	    };

	    _f = function f(a) {
	      null !== p ? setTimeout(_f, 0, a) : (p = a, setTimeout(t, 0));
	    };

	    g = function g(a, b) {
	      q = setTimeout(a, b);
	    };

	    h = function h() {
	      clearTimeout(q);
	    };

	    k = function k() {
	      return !1;
	    };

	    l = exports.unstable_forceFrameRate = function () {};
	  } else {
	    var w = window.performance,
	        x = window.Date,
	        y = window.setTimeout,
	        z = window.clearTimeout,
	        A = window.requestAnimationFrame,
	        B = window.cancelAnimationFrame;
	    "undefined" !== typeof console && ("function" !== typeof A && console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"), "function" !== typeof B && console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"));
	    if ("object" === _typeof_1(w) && "function" === typeof w.now) exports.unstable_now = function () {
	      return w.now();
	    };else {
	      var C = x.now();

	      exports.unstable_now = function () {
	        return x.now() - C;
	      };
	    }
	    var D = !1,
	        E = null,
	        F = -1,
	        G = 5,
	        H = 0;

	    k = function k() {
	      return exports.unstable_now() >= H;
	    };

	    l = function l() {};

	    exports.unstable_forceFrameRate = function (a) {
	      0 > a || 125 < a ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported") : G = 0 < a ? Math.floor(1E3 / a) : 33.33;
	    };

	    var I = new MessageChannel(),
	        J = I.port2;

	    I.port1.onmessage = function () {
	      if (null !== E) {
	        var a = exports.unstable_now();
	        H = a + G;

	        try {
	          E(!0, a) ? J.postMessage(null) : (D = !1, E = null);
	        } catch (b) {
	          throw J.postMessage(null), b;
	        }
	      } else D = !1;
	    };

	    _f = function _f(a) {
	      E = a;
	      D || (D = !0, J.postMessage(null));
	    };

	    g = function g(a, b) {
	      F = y(function () {
	        a(exports.unstable_now());
	      }, b);
	    };

	    h = function h() {
	      z(F);
	      F = -1;
	    };
	  }

	  function K(a, b) {
	    var c = a.length;
	    a.push(b);

	    a: for (;;) {
	      var d = Math.floor((c - 1) / 2),
	          e = a[d];
	      if (void 0 !== e && 0 < L(e, b)) a[d] = b, a[c] = e, c = d;else break a;
	    }
	  }

	  function M(a) {
	    a = a[0];
	    return void 0 === a ? null : a;
	  }

	  function N(a) {
	    var b = a[0];

	    if (void 0 !== b) {
	      var c = a.pop();

	      if (c !== b) {
	        a[0] = c;

	        a: for (var d = 0, e = a.length; d < e;) {
	          var m = 2 * (d + 1) - 1,
	              n = a[m],
	              v = m + 1,
	              r = a[v];
	          if (void 0 !== n && 0 > L(n, c)) void 0 !== r && 0 > L(r, n) ? (a[d] = r, a[v] = c, d = v) : (a[d] = n, a[m] = c, d = m);else if (void 0 !== r && 0 > L(r, c)) a[d] = r, a[v] = c, d = v;else break a;
	        }
	      }

	      return b;
	    }

	    return null;
	  }

	  function L(a, b) {
	    var c = a.sortIndex - b.sortIndex;
	    return 0 !== c ? c : a.id - b.id;
	  }

	  var O = [],
	      P = [],
	      Q = 1,
	      R = null,
	      S = 3,
	      T = !1,
	      U = !1,
	      V = !1;

	  function W(a) {
	    for (var b = M(P); null !== b;) {
	      if (null === b.callback) N(P);else if (b.startTime <= a) N(P), b.sortIndex = b.expirationTime, K(O, b);else break;
	      b = M(P);
	    }
	  }

	  function X(a) {
	    V = !1;
	    W(a);
	    if (!U) if (null !== M(O)) U = !0, _f(Y);else {
	      var b = M(P);
	      null !== b && g(X, b.startTime - a);
	    }
	  }

	  function Y(a, b) {
	    U = !1;
	    V && (V = !1, h());
	    T = !0;
	    var c = S;

	    try {
	      W(b);

	      for (R = M(O); null !== R && (!(R.expirationTime > b) || a && !k());) {
	        var d = R.callback;

	        if (null !== d) {
	          R.callback = null;
	          S = R.priorityLevel;
	          var e = d(R.expirationTime <= b);
	          b = exports.unstable_now();
	          "function" === typeof e ? R.callback = e : R === M(O) && N(O);
	          W(b);
	        } else N(O);

	        R = M(O);
	      }

	      if (null !== R) var m = !0;else {
	        var n = M(P);
	        null !== n && g(X, n.startTime - b);
	        m = !1;
	      }
	      return m;
	    } finally {
	      R = null, S = c, T = !1;
	    }
	  }

	  function Z(a) {
	    switch (a) {
	      case 1:
	        return -1;

	      case 2:
	        return 250;

	      case 5:
	        return 1073741823;

	      case 4:
	        return 1E4;

	      default:
	        return 5E3;
	    }
	  }

	  var aa = l;
	  exports.unstable_ImmediatePriority = 1;
	  exports.unstable_UserBlockingPriority = 2;
	  exports.unstable_NormalPriority = 3;
	  exports.unstable_IdlePriority = 5;
	  exports.unstable_LowPriority = 4;

	  exports.unstable_runWithPriority = function (a, b) {
	    switch (a) {
	      case 1:
	      case 2:
	      case 3:
	      case 4:
	      case 5:
	        break;

	      default:
	        a = 3;
	    }

	    var c = S;
	    S = a;

	    try {
	      return b();
	    } finally {
	      S = c;
	    }
	  };

	  exports.unstable_next = function (a) {
	    switch (S) {
	      case 1:
	      case 2:
	      case 3:
	        var b = 3;
	        break;

	      default:
	        b = S;
	    }

	    var c = S;
	    S = b;

	    try {
	      return a();
	    } finally {
	      S = c;
	    }
	  };

	  exports.unstable_scheduleCallback = function (a, b, c) {
	    var d = exports.unstable_now();

	    if ("object" === _typeof_1(c) && null !== c) {
	      var e = c.delay;
	      e = "number" === typeof e && 0 < e ? d + e : d;
	      c = "number" === typeof c.timeout ? c.timeout : Z(a);
	    } else c = Z(a), e = d;

	    c = e + c;
	    a = {
	      id: Q++,
	      callback: b,
	      priorityLevel: a,
	      startTime: e,
	      expirationTime: c,
	      sortIndex: -1
	    };
	    e > d ? (a.sortIndex = e, K(P, a), null === M(O) && a === M(P) && (V ? h() : V = !0, g(X, e - d))) : (a.sortIndex = c, K(O, a), U || T || (U = !0, _f(Y)));
	    return a;
	  };

	  exports.unstable_cancelCallback = function (a) {
	    a.callback = null;
	  };

	  exports.unstable_wrapCallback = function (a) {
	    var b = S;
	    return function () {
	      var c = S;
	      S = b;

	      try {
	        return a.apply(this, arguments);
	      } finally {
	        S = c;
	      }
	    };
	  };

	  exports.unstable_getCurrentPriorityLevel = function () {
	    return S;
	  };

	  exports.unstable_shouldYield = function () {
	    var a = exports.unstable_now();
	    W(a);
	    var b = M(O);
	    return b !== R && null !== R && null !== b && null !== b.callback && b.startTime <= a && b.expirationTime < R.expirationTime || k();
	  };

	  exports.unstable_requestPaint = aa;

	  exports.unstable_continueExecution = function () {
	    U || T || (U = !0, _f(Y));
	  };

	  exports.unstable_pauseExecution = function () {};

	  exports.unstable_getFirstCallbackNode = function () {
	    return M(O);
	  };

	  exports.unstable_Profiling = null;
	});
	unwrapExports(scheduler_production_min);
	var scheduler_production_min_1 = scheduler_production_min.unstable_now;
	var scheduler_production_min_2 = scheduler_production_min.unstable_forceFrameRate;
	var scheduler_production_min_3 = scheduler_production_min.unstable_ImmediatePriority;
	var scheduler_production_min_4 = scheduler_production_min.unstable_UserBlockingPriority;
	var scheduler_production_min_5 = scheduler_production_min.unstable_NormalPriority;
	var scheduler_production_min_6 = scheduler_production_min.unstable_IdlePriority;
	var scheduler_production_min_7 = scheduler_production_min.unstable_LowPriority;
	var scheduler_production_min_8 = scheduler_production_min.unstable_runWithPriority;
	var scheduler_production_min_9 = scheduler_production_min.unstable_next;
	var scheduler_production_min_10 = scheduler_production_min.unstable_scheduleCallback;
	var scheduler_production_min_11 = scheduler_production_min.unstable_cancelCallback;
	var scheduler_production_min_12 = scheduler_production_min.unstable_wrapCallback;
	var scheduler_production_min_13 = scheduler_production_min.unstable_getCurrentPriorityLevel;
	var scheduler_production_min_14 = scheduler_production_min.unstable_shouldYield;
	var scheduler_production_min_15 = scheduler_production_min.unstable_requestPaint;
	var scheduler_production_min_16 = scheduler_production_min.unstable_continueExecution;
	var scheduler_production_min_17 = scheduler_production_min.unstable_pauseExecution;
	var scheduler_production_min_18 = scheduler_production_min.unstable_getFirstCallbackNode;
	var scheduler_production_min_19 = scheduler_production_min.unstable_Profiling;

	var scheduler = createCommonjsModule(function (module) {

	  {
	    module.exports = scheduler_production_min;
	  }
	});

	function t$1(a) {
	  for (var b = a.message, c = "https://reactjs.org/docs/error-decoder.html?invariant=" + b, d = 1; d < arguments.length; d++) {
	    c += "&args[]=" + encodeURIComponent(arguments[d]);
	  }

	  a.message = "Minified React error #" + b + "; visit " + c + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ";
	  return a;
	}

	if (!react) throw t$1(Error(227));
	var ba$1 = null,
	    ca$1 = {};

	function da$1() {
	  if (ba$1) for (var a in ca$1) {
	    var b = ca$1[a],
	        c = ba$1.indexOf(a);
	    if (!(-1 < c)) throw t$1(Error(96), a);

	    if (!ea$1[c]) {
	      if (!b.extractEvents) throw t$1(Error(97), a);
	      ea$1[c] = b;
	      c = b.eventTypes;

	      for (var d in c) {
	        var e = void 0;
	        var f = c[d],
	            g = b,
	            h = d;
	        if (fa$1.hasOwnProperty(h)) throw t$1(Error(99), h);
	        fa$1[h] = f;
	        var k = f.phasedRegistrationNames;

	        if (k) {
	          for (e in k) {
	            k.hasOwnProperty(e) && ha(k[e], g, h);
	          }

	          e = !0;
	        } else f.registrationName ? (ha(f.registrationName, g, h), e = !0) : e = !1;

	        if (!e) throw t$1(Error(98), d, a);
	      }
	    }
	  }
	}

	function ha(a, b, c) {
	  if (ia[a]) throw t$1(Error(100), a);
	  ia[a] = b;
	  ja[a] = b.eventTypes[c].dependencies;
	}

	var ea$1 = [],
	    fa$1 = {},
	    ia = {},
	    ja = {};

	function ka(a, b, c, d, e, f, g, h, k) {
	  var l = Array.prototype.slice.call(arguments, 3);

	  try {
	    b.apply(c, l);
	  } catch (m) {
	    this.onError(m);
	  }
	}

	var la = !1,
	    ma = null,
	    na = !1,
	    oa = null,
	    pa = {
	  onError: function onError(a) {
	    la = !0;
	    ma = a;
	  }
	};

	function qa(a, b, c, d, e, f, g, h, k) {
	  la = !1;
	  ma = null;
	  ka.apply(pa, arguments);
	}

	function ra(a, b, c, d, e, f, g, h, k) {
	  qa.apply(this, arguments);

	  if (la) {
	    if (la) {
	      var l = ma;
	      la = !1;
	      ma = null;
	    } else throw t$1(Error(198));

	    na || (na = !0, oa = l);
	  }
	}

	var sa = null,
	    ta = null,
	    ua = null;

	function va(a, b, c) {
	  var d = a.type || "unknown-event";
	  a.currentTarget = ua(c);
	  ra(d, b, void 0, a);
	  a.currentTarget = null;
	}

	function wa(a, b) {
	  if (null == b) throw t$1(Error(30));
	  if (null == a) return b;

	  if (Array.isArray(a)) {
	    if (Array.isArray(b)) return a.push.apply(a, b), a;
	    a.push(b);
	    return a;
	  }

	  return Array.isArray(b) ? [a].concat(b) : [a, b];
	}

	function xa(a, b, c) {
	  Array.isArray(a) ? a.forEach(b, c) : a && b.call(c, a);
	}

	var ya = null;

	function za(a) {
	  if (a) {
	    var b = a._dispatchListeners,
	        c = a._dispatchInstances;
	    if (Array.isArray(b)) for (var d = 0; d < b.length && !a.isPropagationStopped(); d++) {
	      va(a, b[d], c[d]);
	    } else b && va(a, b, c);
	    a._dispatchListeners = null;
	    a._dispatchInstances = null;
	    a.isPersistent() || a.constructor.release(a);
	  }
	}

	function Aa(a) {
	  null !== a && (ya = wa(ya, a));
	  a = ya;
	  ya = null;

	  if (a) {
	    xa(a, za);
	    if (ya) throw t$1(Error(95));
	    if (na) throw a = oa, na = !1, oa = null, a;
	  }
	}

	var Ba = {
	  injectEventPluginOrder: function injectEventPluginOrder(a) {
	    if (ba$1) throw t$1(Error(101));
	    ba$1 = Array.prototype.slice.call(a);
	    da$1();
	  },
	  injectEventPluginsByName: function injectEventPluginsByName(a) {
	    var b = !1,
	        c;

	    for (c in a) {
	      if (a.hasOwnProperty(c)) {
	        var d = a[c];

	        if (!ca$1.hasOwnProperty(c) || ca$1[c] !== d) {
	          if (ca$1[c]) throw t$1(Error(102), c);
	          ca$1[c] = d;
	          b = !0;
	        }
	      }
	    }

	    b && da$1();
	  }
	};

	function Ca(a, b) {
	  var c = a.stateNode;
	  if (!c) return null;
	  var d = sa(c);
	  if (!d) return null;
	  c = d[b];

	  a: switch (b) {
	    case "onClick":
	    case "onClickCapture":
	    case "onDoubleClick":
	    case "onDoubleClickCapture":
	    case "onMouseDown":
	    case "onMouseDownCapture":
	    case "onMouseMove":
	    case "onMouseMoveCapture":
	    case "onMouseUp":
	    case "onMouseUpCapture":
	      (d = !d.disabled) || (a = a.type, d = !("button" === a || "input" === a || "select" === a || "textarea" === a));
	      a = !d;
	      break a;

	    default:
	      a = !1;
	  }

	  if (a) return null;
	  if (c && "function" !== typeof c) throw t$1(Error(231), b, _typeof_1(c));
	  return c;
	}

	var Da = react.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
	Da.hasOwnProperty("ReactCurrentDispatcher") || (Da.ReactCurrentDispatcher = {
	  current: null
	});
	Da.hasOwnProperty("ReactCurrentBatchConfig") || (Da.ReactCurrentBatchConfig = {
	  suspense: null
	});
	var Ea = /^(.*)[\\\/]/,
	    x$1 = "function" === typeof Symbol && Symbol["for"],
	    Fa = x$1 ? Symbol["for"]("react.element") : 60103,
	    Ga = x$1 ? Symbol["for"]("react.portal") : 60106,
	    Ha = x$1 ? Symbol["for"]("react.fragment") : 60107,
	    Ia = x$1 ? Symbol["for"]("react.strict_mode") : 60108,
	    Ja = x$1 ? Symbol["for"]("react.profiler") : 60114,
	    Ka = x$1 ? Symbol["for"]("react.provider") : 60109,
	    La = x$1 ? Symbol["for"]("react.context") : 60110,
	    Ma = x$1 ? Symbol["for"]("react.concurrent_mode") : 60111,
	    Na = x$1 ? Symbol["for"]("react.forward_ref") : 60112,
	    Oa = x$1 ? Symbol["for"]("react.suspense") : 60113,
	    Pa = x$1 ? Symbol["for"]("react.suspense_list") : 60120,
	    Qa = x$1 ? Symbol["for"]("react.memo") : 60115,
	    Ra = x$1 ? Symbol["for"]("react.lazy") : 60116;
	var Sa = "function" === typeof Symbol && Symbol.iterator;

	function Ta(a) {
	  if (null === a || "object" !== _typeof_1(a)) return null;
	  a = Sa && a[Sa] || a["@@iterator"];
	  return "function" === typeof a ? a : null;
	}

	function Ua(a) {
	  if (-1 === a._status) {
	    a._status = 0;
	    var b = a._ctor;
	    b = b();
	    a._result = b;
	    b.then(function (b) {
	      0 === a._status && (b = b["default"], a._status = 1, a._result = b);
	    }, function (b) {
	      0 === a._status && (a._status = 2, a._result = b);
	    });
	  }
	}

	function Va(a) {
	  if (null == a) return null;
	  if ("function" === typeof a) return a.displayName || a.name || null;
	  if ("string" === typeof a) return a;

	  switch (a) {
	    case Ha:
	      return "Fragment";

	    case Ga:
	      return "Portal";

	    case Ja:
	      return "Profiler";

	    case Ia:
	      return "StrictMode";

	    case Oa:
	      return "Suspense";

	    case Pa:
	      return "SuspenseList";
	  }

	  if ("object" === _typeof_1(a)) switch (a.$$typeof) {
	    case La:
	      return "Context.Consumer";

	    case Ka:
	      return "Context.Provider";

	    case Na:
	      var b = a.render;
	      b = b.displayName || b.name || "";
	      return a.displayName || ("" !== b ? "ForwardRef(" + b + ")" : "ForwardRef");

	    case Qa:
	      return Va(a.type);

	    case Ra:
	      if (a = 1 === a._status ? a._result : null) return Va(a);
	  }
	  return null;
	}

	function Wa(a) {
	  var b = "";

	  do {
	    a: switch (a.tag) {
	      case 3:
	      case 4:
	      case 6:
	      case 7:
	      case 10:
	      case 9:
	        var c = "";
	        break a;

	      default:
	        var d = a._debugOwner,
	            e = a._debugSource,
	            f = Va(a.type);
	        c = null;
	        d && (c = Va(d.type));
	        d = f;
	        f = "";
	        e ? f = " (at " + e.fileName.replace(Ea, "") + ":" + e.lineNumber + ")" : c && (f = " (created by " + c + ")");
	        c = "\n    in " + (d || "Unknown") + f;
	    }

	    b += c;
	    a = a["return"];
	  } while (a);

	  return b;
	}

	var Xa = !("undefined" === typeof window || "undefined" === typeof window.document || "undefined" === typeof window.document.createElement),
	    Ya = null,
	    Za = null,
	    $a = null;

	function ab(a) {
	  if (a = ta(a)) {
	    if ("function" !== typeof Ya) throw t$1(Error(280));
	    var b = sa(a.stateNode);
	    Ya(a.stateNode, a.type, b);
	  }
	}

	function bb(a) {
	  Za ? $a ? $a.push(a) : $a = [a] : Za = a;
	}

	function cb() {
	  if (Za) {
	    var a = Za,
	        b = $a;
	    $a = Za = null;
	    ab(a);
	    if (b) for (a = 0; a < b.length; a++) {
	      ab(b[a]);
	    }
	  }
	}

	function db(a, b) {
	  return a(b);
	}

	function eb(a, b, c, d) {
	  return a(b, c, d);
	}

	function fb() {}

	var gb = db,
	    hb = !1,
	    ib = !1;

	function jb() {
	  if (null !== Za || null !== $a) fb(), cb();
	}
	var kb = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
	    lb = Object.prototype.hasOwnProperty,
	    mb = {},
	    nb = {};

	function ob(a) {
	  if (lb.call(nb, a)) return !0;
	  if (lb.call(mb, a)) return !1;
	  if (kb.test(a)) return nb[a] = !0;
	  mb[a] = !0;
	  return !1;
	}

	function pb(a, b, c, d) {
	  if (null !== c && 0 === c.type) return !1;

	  switch (_typeof_1(b)) {
	    case "function":
	    case "symbol":
	      return !0;

	    case "boolean":
	      if (d) return !1;
	      if (null !== c) return !c.acceptsBooleans;
	      a = a.toLowerCase().slice(0, 5);
	      return "data-" !== a && "aria-" !== a;

	    default:
	      return !1;
	  }
	}

	function qb(a, b, c, d) {
	  if (null === b || "undefined" === typeof b || pb(a, b, c, d)) return !0;
	  if (d) return !1;
	  if (null !== c) switch (c.type) {
	    case 3:
	      return !b;

	    case 4:
	      return !1 === b;

	    case 5:
	      return isNaN(b);

	    case 6:
	      return isNaN(b) || 1 > b;
	  }
	  return !1;
	}

	function B$1(a, b, c, d, e, f) {
	  this.acceptsBooleans = 2 === b || 3 === b || 4 === b;
	  this.attributeName = d;
	  this.attributeNamespace = e;
	  this.mustUseProperty = c;
	  this.propertyName = a;
	  this.type = b;
	  this.sanitizeURL = f;
	}

	var C$1 = {};
	"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function (a) {
	  C$1[a] = new B$1(a, 0, !1, a, null, !1);
	});
	[["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function (a) {
	  var b = a[0];
	  C$1[b] = new B$1(b, 1, !1, a[1], null, !1);
	});
	["contentEditable", "draggable", "spellCheck", "value"].forEach(function (a) {
	  C$1[a] = new B$1(a, 2, !1, a.toLowerCase(), null, !1);
	});
	["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function (a) {
	  C$1[a] = new B$1(a, 2, !1, a, null, !1);
	});
	"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function (a) {
	  C$1[a] = new B$1(a, 3, !1, a.toLowerCase(), null, !1);
	});
	["checked", "multiple", "muted", "selected"].forEach(function (a) {
	  C$1[a] = new B$1(a, 3, !0, a, null, !1);
	});
	["capture", "download"].forEach(function (a) {
	  C$1[a] = new B$1(a, 4, !1, a, null, !1);
	});
	["cols", "rows", "size", "span"].forEach(function (a) {
	  C$1[a] = new B$1(a, 6, !1, a, null, !1);
	});
	["rowSpan", "start"].forEach(function (a) {
	  C$1[a] = new B$1(a, 5, !1, a.toLowerCase(), null, !1);
	});
	var rb = /[\-:]([a-z])/g;

	function sb(a) {
	  return a[1].toUpperCase();
	}

	"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function (a) {
	  var b = a.replace(rb, sb);
	  C$1[b] = new B$1(b, 1, !1, a, null, !1);
	});
	"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function (a) {
	  var b = a.replace(rb, sb);
	  C$1[b] = new B$1(b, 1, !1, a, "http://www.w3.org/1999/xlink", !1);
	});
	["xml:base", "xml:lang", "xml:space"].forEach(function (a) {
	  var b = a.replace(rb, sb);
	  C$1[b] = new B$1(b, 1, !1, a, "http://www.w3.org/XML/1998/namespace", !1);
	});
	["tabIndex", "crossOrigin"].forEach(function (a) {
	  C$1[a] = new B$1(a, 1, !1, a.toLowerCase(), null, !1);
	});
	C$1.xlinkHref = new B$1("xlinkHref", 1, !1, "xlink:href", "http://www.w3.org/1999/xlink", !0);
	["src", "href", "action", "formAction"].forEach(function (a) {
	  C$1[a] = new B$1(a, 1, !1, a.toLowerCase(), null, !0);
	});

	function tb(a) {
	  switch (_typeof_1(a)) {
	    case "boolean":
	    case "number":
	    case "object":
	    case "string":
	    case "undefined":
	      return a;

	    default:
	      return "";
	  }
	}

	function ub(a, b, c, d) {
	  var e = C$1.hasOwnProperty(b) ? C$1[b] : null;
	  var f = null !== e ? 0 === e.type : d ? !1 : !(2 < b.length) || "o" !== b[0] && "O" !== b[0] || "n" !== b[1] && "N" !== b[1] ? !1 : !0;
	  f || (qb(b, c, e, d) && (c = null), d || null === e ? ob(b) && (null === c ? a.removeAttribute(b) : a.setAttribute(b, "" + c)) : e.mustUseProperty ? a[e.propertyName] = null === c ? 3 === e.type ? !1 : "" : c : (b = e.attributeName, d = e.attributeNamespace, null === c ? a.removeAttribute(b) : (e = e.type, c = 3 === e || 4 === e && !0 === c ? "" : "" + c, d ? a.setAttributeNS(d, b, c) : a.setAttribute(b, c))));
	}

	function vb(a) {
	  var b = a.type;
	  return (a = a.nodeName) && "input" === a.toLowerCase() && ("checkbox" === b || "radio" === b);
	}

	function xb(a) {
	  var b = vb(a) ? "checked" : "value",
	      c = Object.getOwnPropertyDescriptor(a.constructor.prototype, b),
	      d = "" + a[b];

	  if (!a.hasOwnProperty(b) && "undefined" !== typeof c && "function" === typeof c.get && "function" === typeof c.set) {
	    var e = c.get,
	        f = c.set;
	    Object.defineProperty(a, b, {
	      configurable: !0,
	      get: function get() {
	        return e.call(this);
	      },
	      set: function set(a) {
	        d = "" + a;
	        f.call(this, a);
	      }
	    });
	    Object.defineProperty(a, b, {
	      enumerable: c.enumerable
	    });
	    return {
	      getValue: function getValue() {
	        return d;
	      },
	      setValue: function setValue(a) {
	        d = "" + a;
	      },
	      stopTracking: function stopTracking() {
	        a._valueTracker = null;
	        delete a[b];
	      }
	    };
	  }
	}

	function yb(a) {
	  a._valueTracker || (a._valueTracker = xb(a));
	}

	function zb(a) {
	  if (!a) return !1;
	  var b = a._valueTracker;
	  if (!b) return !0;
	  var c = b.getValue();
	  var d = "";
	  a && (d = vb(a) ? a.checked ? "true" : "false" : a.value);
	  a = d;
	  return a !== c ? (b.setValue(a), !0) : !1;
	}

	function Ab(a, b) {
	  var c = b.checked;
	  return objectAssign({}, b, {
	    defaultChecked: void 0,
	    defaultValue: void 0,
	    value: void 0,
	    checked: null != c ? c : a._wrapperState.initialChecked
	  });
	}

	function Bb(a, b) {
	  var c = null == b.defaultValue ? "" : b.defaultValue,
	      d = null != b.checked ? b.checked : b.defaultChecked;
	  c = tb(null != b.value ? b.value : c);
	  a._wrapperState = {
	    initialChecked: d,
	    initialValue: c,
	    controlled: "checkbox" === b.type || "radio" === b.type ? null != b.checked : null != b.value
	  };
	}

	function Cb(a, b) {
	  b = b.checked;
	  null != b && ub(a, "checked", b, !1);
	}

	function Db(a, b) {
	  Cb(a, b);
	  var c = tb(b.value),
	      d = b.type;
	  if (null != c) {
	    if ("number" === d) {
	      if (0 === c && "" === a.value || a.value != c) a.value = "" + c;
	    } else a.value !== "" + c && (a.value = "" + c);
	  } else if ("submit" === d || "reset" === d) {
	    a.removeAttribute("value");
	    return;
	  }
	  b.hasOwnProperty("value") ? Eb(a, b.type, c) : b.hasOwnProperty("defaultValue") && Eb(a, b.type, tb(b.defaultValue));
	  null == b.checked && null != b.defaultChecked && (a.defaultChecked = !!b.defaultChecked);
	}

	function Gb(a, b, c) {
	  if (b.hasOwnProperty("value") || b.hasOwnProperty("defaultValue")) {
	    var d = b.type;
	    if (!("submit" !== d && "reset" !== d || void 0 !== b.value && null !== b.value)) return;
	    b = "" + a._wrapperState.initialValue;
	    c || b === a.value || (a.value = b);
	    a.defaultValue = b;
	  }

	  c = a.name;
	  "" !== c && (a.name = "");
	  a.defaultChecked = !a.defaultChecked;
	  a.defaultChecked = !!a._wrapperState.initialChecked;
	  "" !== c && (a.name = c);
	}

	function Eb(a, b, c) {
	  if ("number" !== b || a.ownerDocument.activeElement !== a) null == c ? a.defaultValue = "" + a._wrapperState.initialValue : a.defaultValue !== "" + c && (a.defaultValue = "" + c);
	}

	function Hb(a) {
	  var b = "";
	  react.Children.forEach(a, function (a) {
	    null != a && (b += a);
	  });
	  return b;
	}

	function Ib(a, b) {
	  a = objectAssign({
	    children: void 0
	  }, b);
	  if (b = Hb(b.children)) a.children = b;
	  return a;
	}

	function Jb(a, b, c, d) {
	  a = a.options;

	  if (b) {
	    b = {};

	    for (var e = 0; e < c.length; e++) {
	      b["$" + c[e]] = !0;
	    }

	    for (c = 0; c < a.length; c++) {
	      e = b.hasOwnProperty("$" + a[c].value), a[c].selected !== e && (a[c].selected = e), e && d && (a[c].defaultSelected = !0);
	    }
	  } else {
	    c = "" + tb(c);
	    b = null;

	    for (e = 0; e < a.length; e++) {
	      if (a[e].value === c) {
	        a[e].selected = !0;
	        d && (a[e].defaultSelected = !0);
	        return;
	      }

	      null !== b || a[e].disabled || (b = a[e]);
	    }

	    null !== b && (b.selected = !0);
	  }
	}

	function Kb(a, b) {
	  if (null != b.dangerouslySetInnerHTML) throw t$1(Error(91));
	  return objectAssign({}, b, {
	    value: void 0,
	    defaultValue: void 0,
	    children: "" + a._wrapperState.initialValue
	  });
	}

	function Lb(a, b) {
	  var c = b.value;

	  if (null == c) {
	    c = b.defaultValue;
	    b = b.children;

	    if (null != b) {
	      if (null != c) throw t$1(Error(92));

	      if (Array.isArray(b)) {
	        if (!(1 >= b.length)) throw t$1(Error(93));
	        b = b[0];
	      }

	      c = b;
	    }

	    null == c && (c = "");
	  }

	  a._wrapperState = {
	    initialValue: tb(c)
	  };
	}

	function Mb(a, b) {
	  var c = tb(b.value),
	      d = tb(b.defaultValue);
	  null != c && (c = "" + c, c !== a.value && (a.value = c), null == b.defaultValue && a.defaultValue !== c && (a.defaultValue = c));
	  null != d && (a.defaultValue = "" + d);
	}

	function Nb(a) {
	  var b = a.textContent;
	  b === a._wrapperState.initialValue && "" !== b && null !== b && (a.value = b);
	}

	var Ob = {
	  html: "http://www.w3.org/1999/xhtml",
	  mathml: "http://www.w3.org/1998/Math/MathML",
	  svg: "http://www.w3.org/2000/svg"
	};

	function Pb(a) {
	  switch (a) {
	    case "svg":
	      return "http://www.w3.org/2000/svg";

	    case "math":
	      return "http://www.w3.org/1998/Math/MathML";

	    default:
	      return "http://www.w3.org/1999/xhtml";
	  }
	}

	function Qb(a, b) {
	  return null == a || "http://www.w3.org/1999/xhtml" === a ? Pb(b) : "http://www.w3.org/2000/svg" === a && "foreignObject" === b ? "http://www.w3.org/1999/xhtml" : a;
	}

	var Rb,
	    Sb = function (a) {
	  return "undefined" !== typeof MSApp && MSApp.execUnsafeLocalFunction ? function (b, c, d, e) {
	    MSApp.execUnsafeLocalFunction(function () {
	      return a(b, c, d, e);
	    });
	  } : a;
	}(function (a, b) {
	  if (a.namespaceURI !== Ob.svg || "innerHTML" in a) a.innerHTML = b;else {
	    Rb = Rb || document.createElement("div");
	    Rb.innerHTML = "<svg>" + b.valueOf().toString() + "</svg>";

	    for (b = Rb.firstChild; a.firstChild;) {
	      a.removeChild(a.firstChild);
	    }

	    for (; b.firstChild;) {
	      a.appendChild(b.firstChild);
	    }
	  }
	});

	function Tb(a, b) {
	  if (b) {
	    var c = a.firstChild;

	    if (c && c === a.lastChild && 3 === c.nodeType) {
	      c.nodeValue = b;
	      return;
	    }
	  }

	  a.textContent = b;
	}

	function Ub(a, b) {
	  var c = {};
	  c[a.toLowerCase()] = b.toLowerCase();
	  c["Webkit" + a] = "webkit" + b;
	  c["Moz" + a] = "moz" + b;
	  return c;
	}

	var Vb = {
	  animationend: Ub("Animation", "AnimationEnd"),
	  animationiteration: Ub("Animation", "AnimationIteration"),
	  animationstart: Ub("Animation", "AnimationStart"),
	  transitionend: Ub("Transition", "TransitionEnd")
	},
	    Wb = {},
	    Xb = {};
	Xa && (Xb = document.createElement("div").style, "AnimationEvent" in window || (delete Vb.animationend.animation, delete Vb.animationiteration.animation, delete Vb.animationstart.animation), "TransitionEvent" in window || delete Vb.transitionend.transition);

	function Yb(a) {
	  if (Wb[a]) return Wb[a];
	  if (!Vb[a]) return a;
	  var b = Vb[a],
	      c;

	  for (c in b) {
	    if (b.hasOwnProperty(c) && c in Xb) return Wb[a] = b[c];
	  }

	  return a;
	}

	var Zb = Yb("animationend"),
	    $b = Yb("animationiteration"),
	    ac = Yb("animationstart"),
	    bc = Yb("transitionend"),
	    dc = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),
	    ec = !1,
	    fc = [],
	    gc = null,
	    hc = null,
	    ic = null,
	    jc = new Map(),
	    kc = new Map(),
	    lc = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),
	    mc = "focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");

	function nc(a) {
	  var b = oc(a);
	  lc.forEach(function (c) {
	    pc(c, a, b);
	  });
	  mc.forEach(function (c) {
	    pc(c, a, b);
	  });
	}

	function qc(a, b, c, d) {
	  return {
	    blockedOn: a,
	    topLevelType: b,
	    eventSystemFlags: c | 32,
	    nativeEvent: d
	  };
	}

	function rc(a, b) {
	  switch (a) {
	    case "focus":
	    case "blur":
	      gc = null;
	      break;

	    case "dragenter":
	    case "dragleave":
	      hc = null;
	      break;

	    case "mouseover":
	    case "mouseout":
	      ic = null;
	      break;

	    case "pointerover":
	    case "pointerout":
	      jc["delete"](b.pointerId);
	      break;

	    case "gotpointercapture":
	    case "lostpointercapture":
	      kc["delete"](b.pointerId);
	  }
	}

	function sc(a, b, c, d, e) {
	  if (null === a || a.nativeEvent !== e) return qc(b, c, d, e);
	  a.eventSystemFlags |= d;
	  return a;
	}

	function tc(a, b, c, d) {
	  switch (b) {
	    case "focus":
	      return gc = sc(gc, a, b, c, d), !0;

	    case "dragenter":
	      return hc = sc(hc, a, b, c, d), !0;

	    case "mouseover":
	      return ic = sc(ic, a, b, c, d), !0;

	    case "pointerover":
	      var e = d.pointerId;
	      jc.set(e, sc(jc.get(e) || null, a, b, c, d));
	      return !0;

	    case "gotpointercapture":
	      return e = d.pointerId, kc.set(e, sc(kc.get(e) || null, a, b, c, d)), !0;
	  }

	  return !1;
	}

	function uc(a) {
	  if (null !== a.blockedOn) return !1;
	  var b = vc(a.topLevelType, a.eventSystemFlags, a.nativeEvent);
	  return null !== b ? (a.blockedOn = b, !1) : !0;
	}

	function wc(a, b, c) {
	  uc(a) && c["delete"](b);
	}

	function xc() {
	  for (ec = !1; 0 < fc.length;) {
	    var a = fc[0];
	    if (null !== a.blockedOn) break;
	    var b = vc(a.topLevelType, a.eventSystemFlags, a.nativeEvent);
	    null !== b ? a.blockedOn = b : fc.shift();
	  }

	  null !== gc && uc(gc) && (gc = null);
	  null !== hc && uc(hc) && (hc = null);
	  null !== ic && uc(ic) && (ic = null);
	  jc.forEach(wc);
	  kc.forEach(wc);
	}

	function yc(a, b) {
	  a.blockedOn === b && (a.blockedOn = null, ec || (ec = !0, scheduler.unstable_scheduleCallback(scheduler.unstable_NormalPriority, xc)));
	}

	function zc(a) {
	  function b(b) {
	    return yc(b, a);
	  }

	  if (0 < fc.length) {
	    yc(fc[0], a);

	    for (var c = 1; c < fc.length; c++) {
	      var d = fc[c];
	      d.blockedOn === a && (d.blockedOn = null);
	    }
	  }

	  null !== gc && yc(gc, a);
	  null !== hc && yc(hc, a);
	  null !== ic && yc(ic, a);
	  jc.forEach(b);
	  kc.forEach(b);
	}

	var D$1 = 0,
	    E$1 = 2,
	    Ac = 1024;

	function Bc(a) {
	  var b = a,
	      c = a;
	  if (a.alternate) for (; b["return"];) {
	    b = b["return"];
	  } else {
	    a = b;

	    do {
	      b = a, (b.effectTag & (E$1 | Ac)) !== D$1 && (c = b["return"]), a = b["return"];
	    } while (a);
	  }
	  return 3 === b.tag ? c : null;
	}

	function Cc(a) {
	  if (Bc(a) !== a) throw t$1(Error(188));
	}

	function Dc(a) {
	  var b = a.alternate;

	  if (!b) {
	    b = Bc(a);
	    if (null === b) throw t$1(Error(188));
	    return b !== a ? null : a;
	  }

	  for (var c = a, d = b;;) {
	    var e = c["return"];
	    if (null === e) break;
	    var f = e.alternate;

	    if (null === f) {
	      d = e["return"];

	      if (null !== d) {
	        c = d;
	        continue;
	      }

	      break;
	    }

	    if (e.child === f.child) {
	      for (f = e.child; f;) {
	        if (f === c) return Cc(e), a;
	        if (f === d) return Cc(e), b;
	        f = f.sibling;
	      }

	      throw t$1(Error(188));
	    }

	    if (c["return"] !== d["return"]) c = e, d = f;else {
	      for (var g = !1, h = e.child; h;) {
	        if (h === c) {
	          g = !0;
	          c = e;
	          d = f;
	          break;
	        }

	        if (h === d) {
	          g = !0;
	          d = e;
	          c = f;
	          break;
	        }

	        h = h.sibling;
	      }

	      if (!g) {
	        for (h = f.child; h;) {
	          if (h === c) {
	            g = !0;
	            c = f;
	            d = e;
	            break;
	          }

	          if (h === d) {
	            g = !0;
	            d = f;
	            c = e;
	            break;
	          }

	          h = h.sibling;
	        }

	        if (!g) throw t$1(Error(189));
	      }
	    }
	    if (c.alternate !== d) throw t$1(Error(190));
	  }

	  if (3 !== c.tag) throw t$1(Error(188));
	  return c.stateNode.current === c ? a : b;
	}

	function Ec(a) {
	  a = Dc(a);
	  if (!a) return null;

	  for (var b = a;;) {
	    if (5 === b.tag || 6 === b.tag) return b;
	    if (b.child) b.child["return"] = b, b = b.child;else {
	      if (b === a) break;

	      for (; !b.sibling;) {
	        if (!b["return"] || b["return"] === a) return null;
	        b = b["return"];
	      }

	      b.sibling["return"] = b["return"];
	      b = b.sibling;
	    }
	  }

	  return null;
	}

	function Fc(a) {
	  a = a.target || a.srcElement || window;
	  a.correspondingUseElement && (a = a.correspondingUseElement);
	  return 3 === a.nodeType ? a.parentNode : a;
	}

	function Gc(a) {
	  do {
	    a = a["return"];
	  } while (a && 5 !== a.tag);

	  return a ? a : null;
	}

	function Hc(a, b, c) {
	  if (b = Ca(a, c.dispatchConfig.phasedRegistrationNames[b])) c._dispatchListeners = wa(c._dispatchListeners, b), c._dispatchInstances = wa(c._dispatchInstances, a);
	}

	function Ic(a) {
	  if (a && a.dispatchConfig.phasedRegistrationNames) {
	    for (var b = a._targetInst, c = []; b;) {
	      c.push(b), b = Gc(b);
	    }

	    for (b = c.length; 0 < b--;) {
	      Hc(c[b], "captured", a);
	    }

	    for (b = 0; b < c.length; b++) {
	      Hc(c[b], "bubbled", a);
	    }
	  }
	}

	function Jc(a, b, c) {
	  a && c && c.dispatchConfig.registrationName && (b = Ca(a, c.dispatchConfig.registrationName)) && (c._dispatchListeners = wa(c._dispatchListeners, b), c._dispatchInstances = wa(c._dispatchInstances, a));
	}

	function Kc(a) {
	  a && a.dispatchConfig.registrationName && Jc(a._targetInst, null, a);
	}

	function Lc(a) {
	  xa(a, Ic);
	}

	function Mc() {
	  return !0;
	}

	function Nc() {
	  return !1;
	}

	function F$1(a, b, c, d) {
	  this.dispatchConfig = a;
	  this._targetInst = b;
	  this.nativeEvent = c;
	  a = this.constructor.Interface;

	  for (var e in a) {
	    a.hasOwnProperty(e) && ((b = a[e]) ? this[e] = b(c) : "target" === e ? this.target = d : this[e] = c[e]);
	  }

	  this.isDefaultPrevented = (null != c.defaultPrevented ? c.defaultPrevented : !1 === c.returnValue) ? Mc : Nc;
	  this.isPropagationStopped = Nc;
	  return this;
	}

	objectAssign(F$1.prototype, {
	  preventDefault: function preventDefault() {
	    this.defaultPrevented = !0;
	    var a = this.nativeEvent;
	    a && (a.preventDefault ? a.preventDefault() : "unknown" !== typeof a.returnValue && (a.returnValue = !1), this.isDefaultPrevented = Mc);
	  },
	  stopPropagation: function stopPropagation() {
	    var a = this.nativeEvent;
	    a && (a.stopPropagation ? a.stopPropagation() : "unknown" !== typeof a.cancelBubble && (a.cancelBubble = !0), this.isPropagationStopped = Mc);
	  },
	  persist: function persist() {
	    this.isPersistent = Mc;
	  },
	  isPersistent: Nc,
	  destructor: function destructor() {
	    var a = this.constructor.Interface,
	        b;

	    for (b in a) {
	      this[b] = null;
	    }

	    this.nativeEvent = this._targetInst = this.dispatchConfig = null;
	    this.isPropagationStopped = this.isDefaultPrevented = Nc;
	    this._dispatchInstances = this._dispatchListeners = null;
	  }
	});
	F$1.Interface = {
	  type: null,
	  target: null,
	  currentTarget: function currentTarget() {
	    return null;
	  },
	  eventPhase: null,
	  bubbles: null,
	  cancelable: null,
	  timeStamp: function timeStamp(a) {
	    return a.timeStamp || Date.now();
	  },
	  defaultPrevented: null,
	  isTrusted: null
	};

	F$1.extend = function (a) {
	  function b() {}

	  function c() {
	    return d.apply(this, arguments);
	  }

	  var d = this;
	  b.prototype = d.prototype;
	  var e = new b();
	  objectAssign(e, c.prototype);
	  c.prototype = e;
	  c.prototype.constructor = c;
	  c.Interface = objectAssign({}, d.Interface, a);
	  c.extend = d.extend;
	  Oc(c);
	  return c;
	};

	Oc(F$1);

	function Pc(a, b, c, d) {
	  if (this.eventPool.length) {
	    var e = this.eventPool.pop();
	    this.call(e, a, b, c, d);
	    return e;
	  }

	  return new this(a, b, c, d);
	}

	function Qc(a) {
	  if (!(a instanceof this)) throw t$1(Error(279));
	  a.destructor();
	  10 > this.eventPool.length && this.eventPool.push(a);
	}

	function Oc(a) {
	  a.eventPool = [];
	  a.getPooled = Pc;
	  a.release = Qc;
	}

	var Rc = F$1.extend({
	  animationName: null,
	  elapsedTime: null,
	  pseudoElement: null
	}),
	    Sc = F$1.extend({
	  clipboardData: function clipboardData(a) {
	    return "clipboardData" in a ? a.clipboardData : window.clipboardData;
	  }
	}),
	    Tc = F$1.extend({
	  view: null,
	  detail: null
	}),
	    Uc = Tc.extend({
	  relatedTarget: null
	});

	function Vc(a) {
	  var b = a.keyCode;
	  "charCode" in a ? (a = a.charCode, 0 === a && 13 === b && (a = 13)) : a = b;
	  10 === a && (a = 13);
	  return 32 <= a || 13 === a ? a : 0;
	}

	var Wc = {
	  Esc: "Escape",
	  Spacebar: " ",
	  Left: "ArrowLeft",
	  Up: "ArrowUp",
	  Right: "ArrowRight",
	  Down: "ArrowDown",
	  Del: "Delete",
	  Win: "OS",
	  Menu: "ContextMenu",
	  Apps: "ContextMenu",
	  Scroll: "ScrollLock",
	  MozPrintableKey: "Unidentified"
	},
	    Xc = {
	  8: "Backspace",
	  9: "Tab",
	  12: "Clear",
	  13: "Enter",
	  16: "Shift",
	  17: "Control",
	  18: "Alt",
	  19: "Pause",
	  20: "CapsLock",
	  27: "Escape",
	  32: " ",
	  33: "PageUp",
	  34: "PageDown",
	  35: "End",
	  36: "Home",
	  37: "ArrowLeft",
	  38: "ArrowUp",
	  39: "ArrowRight",
	  40: "ArrowDown",
	  45: "Insert",
	  46: "Delete",
	  112: "F1",
	  113: "F2",
	  114: "F3",
	  115: "F4",
	  116: "F5",
	  117: "F6",
	  118: "F7",
	  119: "F8",
	  120: "F9",
	  121: "F10",
	  122: "F11",
	  123: "F12",
	  144: "NumLock",
	  145: "ScrollLock",
	  224: "Meta"
	},
	    Yc = {
	  Alt: "altKey",
	  Control: "ctrlKey",
	  Meta: "metaKey",
	  Shift: "shiftKey"
	};

	function Zc(a) {
	  var b = this.nativeEvent;
	  return b.getModifierState ? b.getModifierState(a) : (a = Yc[a]) ? !!b[a] : !1;
	}

	function $c() {
	  return Zc;
	}

	var ad = Tc.extend({
	  key: function key(a) {
	    if (a.key) {
	      var b = Wc[a.key] || a.key;
	      if ("Unidentified" !== b) return b;
	    }

	    return "keypress" === a.type ? (a = Vc(a), 13 === a ? "Enter" : String.fromCharCode(a)) : "keydown" === a.type || "keyup" === a.type ? Xc[a.keyCode] || "Unidentified" : "";
	  },
	  location: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  repeat: null,
	  locale: null,
	  getModifierState: $c,
	  charCode: function charCode(a) {
	    return "keypress" === a.type ? Vc(a) : 0;
	  },
	  keyCode: function keyCode(a) {
	    return "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0;
	  },
	  which: function which(a) {
	    return "keypress" === a.type ? Vc(a) : "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0;
	  }
	}),
	    bd = 0,
	    cd = 0,
	    dd = !1,
	    fd = !1,
	    gd = Tc.extend({
	  screenX: null,
	  screenY: null,
	  clientX: null,
	  clientY: null,
	  pageX: null,
	  pageY: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  getModifierState: $c,
	  button: null,
	  buttons: null,
	  relatedTarget: function relatedTarget(a) {
	    return a.relatedTarget || (a.fromElement === a.srcElement ? a.toElement : a.fromElement);
	  },
	  movementX: function movementX(a) {
	    if ("movementX" in a) return a.movementX;
	    var b = bd;
	    bd = a.screenX;
	    return dd ? "mousemove" === a.type ? a.screenX - b : 0 : (dd = !0, 0);
	  },
	  movementY: function movementY(a) {
	    if ("movementY" in a) return a.movementY;
	    var b = cd;
	    cd = a.screenY;
	    return fd ? "mousemove" === a.type ? a.screenY - b : 0 : (fd = !0, 0);
	  }
	}),
	    hd = gd.extend({
	  pointerId: null,
	  width: null,
	  height: null,
	  pressure: null,
	  tangentialPressure: null,
	  tiltX: null,
	  tiltY: null,
	  twist: null,
	  pointerType: null,
	  isPrimary: null
	}),
	    id = gd.extend({
	  dataTransfer: null
	}),
	    jd = Tc.extend({
	  touches: null,
	  targetTouches: null,
	  changedTouches: null,
	  altKey: null,
	  metaKey: null,
	  ctrlKey: null,
	  shiftKey: null,
	  getModifierState: $c
	}),
	    kd = F$1.extend({
	  propertyName: null,
	  elapsedTime: null,
	  pseudoElement: null
	}),
	    ld = gd.extend({
	  deltaX: function deltaX(a) {
	    return "deltaX" in a ? a.deltaX : "wheelDeltaX" in a ? -a.wheelDeltaX : 0;
	  },
	  deltaY: function deltaY(a) {
	    return "deltaY" in a ? a.deltaY : "wheelDeltaY" in a ? -a.wheelDeltaY : "wheelDelta" in a ? -a.wheelDelta : 0;
	  },
	  deltaZ: null,
	  deltaMode: null
	}),
	    md = [["blur", "blur", 0], ["cancel", "cancel", 0], ["click", "click", 0], ["close", "close", 0], ["contextmenu", "contextMenu", 0], ["copy", "copy", 0], ["cut", "cut", 0], ["auxclick", "auxClick", 0], ["dblclick", "doubleClick", 0], ["dragend", "dragEnd", 0], ["dragstart", "dragStart", 0], ["drop", "drop", 0], ["focus", "focus", 0], ["input", "input", 0], ["invalid", "invalid", 0], ["keydown", "keyDown", 0], ["keypress", "keyPress", 0], ["keyup", "keyUp", 0], ["mousedown", "mouseDown", 0], ["mouseup", "mouseUp", 0], ["paste", "paste", 0], ["pause", "pause", 0], ["play", "play", 0], ["pointercancel", "pointerCancel", 0], ["pointerdown", "pointerDown", 0], ["pointerup", "pointerUp", 0], ["ratechange", "rateChange", 0], ["reset", "reset", 0], ["seeked", "seeked", 0], ["submit", "submit", 0], ["touchcancel", "touchCancel", 0], ["touchend", "touchEnd", 0], ["touchstart", "touchStart", 0], ["volumechange", "volumeChange", 0], ["drag", "drag", 1], ["dragenter", "dragEnter", 1], ["dragexit", "dragExit", 1], ["dragleave", "dragLeave", 1], ["dragover", "dragOver", 1], ["mousemove", "mouseMove", 1], ["mouseout", "mouseOut", 1], ["mouseover", "mouseOver", 1], ["pointermove", "pointerMove", 1], ["pointerout", "pointerOut", 1], ["pointerover", "pointerOver", 1], ["scroll", "scroll", 1], ["toggle", "toggle", 1], ["touchmove", "touchMove", 1], ["wheel", "wheel", 1], ["abort", "abort", 2], [Zb, "animationEnd", 2], [$b, "animationIteration", 2], [ac, "animationStart", 2], ["canplay", "canPlay", 2], ["canplaythrough", "canPlayThrough", 2], ["durationchange", "durationChange", 2], ["emptied", "emptied", 2], ["encrypted", "encrypted", 2], ["ended", "ended", 2], ["error", "error", 2], ["gotpointercapture", "gotPointerCapture", 2], ["load", "load", 2], ["loadeddata", "loadedData", 2], ["loadedmetadata", "loadedMetadata", 2], ["loadstart", "loadStart", 2], ["lostpointercapture", "lostPointerCapture", 2], ["playing", "playing", 2], ["progress", "progress", 2], ["seeking", "seeking", 2], ["stalled", "stalled", 2], ["suspend", "suspend", 2], ["timeupdate", "timeUpdate", 2], [bc, "transitionEnd", 2], ["waiting", "waiting", 2]],
	    nd = {},
	    od = {},
	    pd = 0;

	for (; pd < md.length; pd++) {
	  var qd = md[pd],
	      rd = qd[0],
	      sd = qd[1],
	      td = qd[2],
	      ud = "on" + (sd[0].toUpperCase() + sd.slice(1)),
	      vd = {
	    phasedRegistrationNames: {
	      bubbled: ud,
	      captured: ud + "Capture"
	    },
	    dependencies: [rd],
	    eventPriority: td
	  };
	  nd[sd] = vd;
	  od[rd] = vd;
	}

	var wd = {
	  eventTypes: nd,
	  getEventPriority: function getEventPriority(a) {
	    a = od[a];
	    return void 0 !== a ? a.eventPriority : 2;
	  },
	  extractEvents: function extractEvents(a, b, c, d) {
	    var e = od[a];
	    if (!e) return null;

	    switch (a) {
	      case "keypress":
	        if (0 === Vc(c)) return null;

	      case "keydown":
	      case "keyup":
	        a = ad;
	        break;

	      case "blur":
	      case "focus":
	        a = Uc;
	        break;

	      case "click":
	        if (2 === c.button) return null;

	      case "auxclick":
	      case "dblclick":
	      case "mousedown":
	      case "mousemove":
	      case "mouseup":
	      case "mouseout":
	      case "mouseover":
	      case "contextmenu":
	        a = gd;
	        break;

	      case "drag":
	      case "dragend":
	      case "dragenter":
	      case "dragexit":
	      case "dragleave":
	      case "dragover":
	      case "dragstart":
	      case "drop":
	        a = id;
	        break;

	      case "touchcancel":
	      case "touchend":
	      case "touchmove":
	      case "touchstart":
	        a = jd;
	        break;

	      case Zb:
	      case $b:
	      case ac:
	        a = Rc;
	        break;

	      case bc:
	        a = kd;
	        break;

	      case "scroll":
	        a = Tc;
	        break;

	      case "wheel":
	        a = ld;
	        break;

	      case "copy":
	      case "cut":
	      case "paste":
	        a = Sc;
	        break;

	      case "gotpointercapture":
	      case "lostpointercapture":
	      case "pointercancel":
	      case "pointerdown":
	      case "pointermove":
	      case "pointerout":
	      case "pointerover":
	      case "pointerup":
	        a = hd;
	        break;

	      default:
	        a = F$1;
	    }

	    b = a.getPooled(e, b, c, d);
	    Lc(b);
	    return b;
	  }
	},
	    xd = wd.getEventPriority,
	    zd = 10,
	    Ad = [];

	function Bd(a) {
	  var b = a.targetInst,
	      c = b;

	  do {
	    if (!c) {
	      a.ancestors.push(c);
	      break;
	    }

	    var d = c;
	    if (3 === d.tag) d = d.stateNode.containerInfo;else {
	      for (; d["return"];) {
	        d = d["return"];
	      }

	      d = 3 !== d.tag ? null : d.stateNode.containerInfo;
	    }
	    if (!d) break;
	    b = c.tag;
	    5 !== b && 6 !== b || a.ancestors.push(c);
	    c = Cd(d);
	  } while (c);

	  for (c = 0; c < a.ancestors.length; c++) {
	    b = a.ancestors[c];
	    var e = Fc(a.nativeEvent);
	    d = a.topLevelType;

	    for (var f = a.nativeEvent, g = a.eventSystemFlags, h = null, k = 0; k < ea$1.length; k++) {
	      var l = ea$1[k];
	      l && (l = l.extractEvents(d, b, f, e, g)) && (h = wa(h, l));
	    }

	    Aa(h);
	  }
	}

	var Dd = !0;

	function G$1(a, b) {
	  Ed(b, a, !1);
	}

	function Ed(a, b, c) {
	  switch (xd(b)) {
	    case 0:
	      var d = Fd.bind(null, b, 1);
	      break;

	    case 1:
	      d = Gd.bind(null, b, 1);
	      break;

	    default:
	      d = Hd.bind(null, b, 1);
	  }

	  c ? a.addEventListener(b, d, !0) : a.addEventListener(b, d, !1);
	}

	function Fd(a, b, c) {
	  hb || fb();
	  var d = Hd,
	      e = hb;
	  hb = !0;

	  try {
	    eb(d, a, b, c);
	  } finally {
	    (hb = e) || jb();
	  }
	}

	function Gd(a, b, c) {
	  Hd(a, b, c);
	}

	function Id(a, b, c, d) {
	  if (Ad.length) {
	    var e = Ad.pop();
	    e.topLevelType = a;
	    e.eventSystemFlags = b;
	    e.nativeEvent = c;
	    e.targetInst = d;
	    a = e;
	  } else a = {
	    topLevelType: a,
	    eventSystemFlags: b,
	    nativeEvent: c,
	    targetInst: d,
	    ancestors: []
	  };

	  try {
	    if (b = Bd, c = a, ib) b(c, void 0);else {
	      ib = !0;

	      try {
	        gb(b, c, void 0);
	      } finally {
	        ib = !1, jb();
	      }
	    }
	  } finally {
	    a.topLevelType = null, a.nativeEvent = null, a.targetInst = null, a.ancestors.length = 0, Ad.length < zd && Ad.push(a);
	  }
	}

	function Hd(a, b, c) {
	  if (Dd) if (0 < fc.length && -1 < lc.indexOf(a)) a = qc(null, a, b, c), fc.push(a);else {
	    var d = vc(a, b, c);
	    null === d ? rc(a, c) : -1 < lc.indexOf(a) ? (a = qc(d, a, b, c), fc.push(a)) : tc(d, a, b, c) || (rc(a, c), Id(a, b, c, null));
	  }
	}

	function vc(a, b, c) {
	  var d = Fc(c),
	      e = Cd(d);
	  if (null !== e) if (d = Bc(e), null === d) e = null;else {
	    var f = d.tag;

	    if (13 === f) {
	      a: {
	        if (13 === d.tag && (e = d.memoizedState, null === e && (d = d.alternate, null !== d && (e = d.memoizedState)), null !== e)) {
	          d = e.dehydrated;
	          break a;
	        }

	        d = null;
	      }

	      if (null !== d) return d;
	      e = null;
	    } else if (3 === f) {
	      if (d.stateNode.hydrate) return 3 === d.tag ? d.stateNode.containerInfo : null;
	      e = null;
	    } else d !== e && (e = null);
	  }
	  Id(a, b, c, e);
	  return null;
	}

	function Jd(a) {
	  if (!Xa) return !1;
	  a = "on" + a;
	  var b = a in document;
	  b || (b = document.createElement("div"), b.setAttribute(a, "return;"), b = "function" === typeof b[a]);
	  return b;
	}

	var Kd = new ("function" === typeof WeakMap ? WeakMap : Map)();

	function oc(a) {
	  var b = Kd.get(a);
	  void 0 === b && (b = new Set(), Kd.set(a, b));
	  return b;
	}

	function pc(a, b, c) {
	  if (!c.has(a)) {
	    switch (a) {
	      case "scroll":
	        Ed(b, "scroll", !0);
	        break;

	      case "focus":
	      case "blur":
	        Ed(b, "focus", !0);
	        Ed(b, "blur", !0);
	        c.add("blur");
	        c.add("focus");
	        break;

	      case "cancel":
	      case "close":
	        Jd(a) && Ed(b, a, !0);
	        break;

	      case "invalid":
	      case "submit":
	      case "reset":
	        break;

	      default:
	        -1 === dc.indexOf(a) && G$1(a, b);
	    }

	    c.add(a);
	  }
	}

	var Ld = {
	  animationIterationCount: !0,
	  borderImageOutset: !0,
	  borderImageSlice: !0,
	  borderImageWidth: !0,
	  boxFlex: !0,
	  boxFlexGroup: !0,
	  boxOrdinalGroup: !0,
	  columnCount: !0,
	  columns: !0,
	  flex: !0,
	  flexGrow: !0,
	  flexPositive: !0,
	  flexShrink: !0,
	  flexNegative: !0,
	  flexOrder: !0,
	  gridArea: !0,
	  gridRow: !0,
	  gridRowEnd: !0,
	  gridRowSpan: !0,
	  gridRowStart: !0,
	  gridColumn: !0,
	  gridColumnEnd: !0,
	  gridColumnSpan: !0,
	  gridColumnStart: !0,
	  fontWeight: !0,
	  lineClamp: !0,
	  lineHeight: !0,
	  opacity: !0,
	  order: !0,
	  orphans: !0,
	  tabSize: !0,
	  widows: !0,
	  zIndex: !0,
	  zoom: !0,
	  fillOpacity: !0,
	  floodOpacity: !0,
	  stopOpacity: !0,
	  strokeDasharray: !0,
	  strokeDashoffset: !0,
	  strokeMiterlimit: !0,
	  strokeOpacity: !0,
	  strokeWidth: !0
	},
	    Md = ["Webkit", "ms", "Moz", "O"];
	Object.keys(Ld).forEach(function (a) {
	  Md.forEach(function (b) {
	    b = b + a.charAt(0).toUpperCase() + a.substring(1);
	    Ld[b] = Ld[a];
	  });
	});

	function Nd(a, b, c) {
	  return null == b || "boolean" === typeof b || "" === b ? "" : c || "number" !== typeof b || 0 === b || Ld.hasOwnProperty(a) && Ld[a] ? ("" + b).trim() : b + "px";
	}

	function Od(a, b) {
	  a = a.style;

	  for (var c in b) {
	    if (b.hasOwnProperty(c)) {
	      var d = 0 === c.indexOf("--"),
	          e = Nd(c, b[c], d);
	      "float" === c && (c = "cssFloat");
	      d ? a.setProperty(c, e) : a[c] = e;
	    }
	  }
	}

	var Pd = objectAssign({
	  menuitem: !0
	}, {
	  area: !0,
	  base: !0,
	  br: !0,
	  col: !0,
	  embed: !0,
	  hr: !0,
	  img: !0,
	  input: !0,
	  keygen: !0,
	  link: !0,
	  meta: !0,
	  param: !0,
	  source: !0,
	  track: !0,
	  wbr: !0
	});

	function Qd(a, b) {
	  if (b) {
	    if (Pd[a] && (null != b.children || null != b.dangerouslySetInnerHTML)) throw t$1(Error(137), a, "");

	    if (null != b.dangerouslySetInnerHTML) {
	      if (null != b.children) throw t$1(Error(60));
	      if (!("object" === _typeof_1(b.dangerouslySetInnerHTML) && "__html" in b.dangerouslySetInnerHTML)) throw t$1(Error(61));
	    }

	    if (null != b.style && "object" !== _typeof_1(b.style)) throw t$1(Error(62), "");
	  }
	}

	function Rd(a, b) {
	  if (-1 === a.indexOf("-")) return "string" === typeof b.is;

	  switch (a) {
	    case "annotation-xml":
	    case "color-profile":
	    case "font-face":
	    case "font-face-src":
	    case "font-face-uri":
	    case "font-face-format":
	    case "font-face-name":
	    case "missing-glyph":
	      return !1;

	    default:
	      return !0;
	  }
	}

	function Sd(a, b) {
	  a = 9 === a.nodeType || 11 === a.nodeType ? a : a.ownerDocument;
	  var c = oc(a);
	  b = ja[b];

	  for (var d = 0; d < b.length; d++) {
	    pc(b[d], a, c);
	  }
	}

	function Td() {}

	function Ud(a) {
	  a = a || ("undefined" !== typeof document ? document : void 0);
	  if ("undefined" === typeof a) return null;

	  try {
	    return a.activeElement || a.body;
	  } catch (b) {
	    return a.body;
	  }
	}

	function Vd(a) {
	  for (; a && a.firstChild;) {
	    a = a.firstChild;
	  }

	  return a;
	}

	function Wd(a, b) {
	  var c = Vd(a);
	  a = 0;

	  for (var d; c;) {
	    if (3 === c.nodeType) {
	      d = a + c.textContent.length;
	      if (a <= b && d >= b) return {
	        node: c,
	        offset: b - a
	      };
	      a = d;
	    }

	    a: {
	      for (; c;) {
	        if (c.nextSibling) {
	          c = c.nextSibling;
	          break a;
	        }

	        c = c.parentNode;
	      }

	      c = void 0;
	    }

	    c = Vd(c);
	  }
	}

	function Xd(a, b) {
	  return a && b ? a === b ? !0 : a && 3 === a.nodeType ? !1 : b && 3 === b.nodeType ? Xd(a, b.parentNode) : "contains" in a ? a.contains(b) : a.compareDocumentPosition ? !!(a.compareDocumentPosition(b) & 16) : !1 : !1;
	}

	function Yd() {
	  for (var a = window, b = Ud(); b instanceof a.HTMLIFrameElement;) {
	    try {
	      var c = "string" === typeof b.contentWindow.location.href;
	    } catch (d) {
	      c = !1;
	    }

	    if (c) a = b.contentWindow;else break;
	    b = Ud(a.document);
	  }

	  return b;
	}

	function Zd(a) {
	  var b = a && a.nodeName && a.nodeName.toLowerCase();
	  return b && ("input" === b && ("text" === a.type || "search" === a.type || "tel" === a.type || "url" === a.type || "password" === a.type) || "textarea" === b || "true" === a.contentEditable);
	}

	var $d = "$",
	    ae = "/$",
	    be = "$?",
	    ce = "$!",
	    de = null,
	    ee = null;

	function fe(a, b) {
	  switch (a) {
	    case "button":
	    case "input":
	    case "select":
	    case "textarea":
	      return !!b.autoFocus;
	  }

	  return !1;
	}

	function ge(a, b) {
	  return "textarea" === a || "option" === a || "noscript" === a || "string" === typeof b.children || "number" === typeof b.children || "object" === _typeof_1(b.dangerouslySetInnerHTML) && null !== b.dangerouslySetInnerHTML && null != b.dangerouslySetInnerHTML.__html;
	}

	var he = "function" === typeof setTimeout ? setTimeout : void 0,
	    ie = "function" === typeof clearTimeout ? clearTimeout : void 0;

	function je(a) {
	  for (; null != a; a = a.nextSibling) {
	    var b = a.nodeType;
	    if (1 === b || 3 === b) break;
	  }

	  return a;
	}

	function ke(a) {
	  a = a.previousSibling;

	  for (var b = 0; a;) {
	    if (8 === a.nodeType) {
	      var c = a.data;

	      if (c === $d || c === ce || c === be) {
	        if (0 === b) return a;
	        b--;
	      } else c === ae && b++;
	    }

	    a = a.previousSibling;
	  }

	  return null;
	}

	var le = Math.random().toString(36).slice(2),
	    me = "__reactInternalInstance$" + le,
	    ne = "__reactEventHandlers$" + le,
	    oe = "__reactContainere$" + le;

	function Cd(a) {
	  var b = a[me];
	  if (b) return b;

	  for (var c = a.parentNode; c;) {
	    if (b = c[oe] || c[me]) {
	      c = b.alternate;
	      if (null !== b.child || null !== c && null !== c.child) for (a = ke(a); null !== a;) {
	        if (c = a[me]) return c;
	        a = ke(a);
	      }
	      return b;
	    }

	    a = c;
	    c = a.parentNode;
	  }

	  return null;
	}

	function pe(a) {
	  a = a[me] || a[oe];
	  return !a || 5 !== a.tag && 6 !== a.tag && 13 !== a.tag && 3 !== a.tag ? null : a;
	}

	function qe(a) {
	  if (5 === a.tag || 6 === a.tag) return a.stateNode;
	  throw t$1(Error(33));
	}

	function re(a) {
	  return a[ne] || null;
	}

	var se = null,
	    te = null,
	    ue = null;

	function ve() {
	  if (ue) return ue;
	  var a,
	      b = te,
	      c = b.length,
	      d,
	      e = "value" in se ? se.value : se.textContent,
	      f = e.length;

	  for (a = 0; a < c && b[a] === e[a]; a++) {
	  }

	  var g = c - a;

	  for (d = 1; d <= g && b[c - d] === e[f - d]; d++) {
	  }

	  return ue = e.slice(a, 1 < d ? 1 - d : void 0);
	}

	var we = F$1.extend({
	  data: null
	}),
	    xe = F$1.extend({
	  data: null
	}),
	    ye = [9, 13, 27, 32],
	    ze = Xa && "CompositionEvent" in window,
	    Ae = null;
	Xa && "documentMode" in document && (Ae = document.documentMode);
	var Be = Xa && "TextEvent" in window && !Ae,
	    Ce = Xa && (!ze || Ae && 8 < Ae && 11 >= Ae),
	    De = String.fromCharCode(32),
	    Ee = {
	  beforeInput: {
	    phasedRegistrationNames: {
	      bubbled: "onBeforeInput",
	      captured: "onBeforeInputCapture"
	    },
	    dependencies: ["compositionend", "keypress", "textInput", "paste"]
	  },
	  compositionEnd: {
	    phasedRegistrationNames: {
	      bubbled: "onCompositionEnd",
	      captured: "onCompositionEndCapture"
	    },
	    dependencies: "blur compositionend keydown keypress keyup mousedown".split(" ")
	  },
	  compositionStart: {
	    phasedRegistrationNames: {
	      bubbled: "onCompositionStart",
	      captured: "onCompositionStartCapture"
	    },
	    dependencies: "blur compositionstart keydown keypress keyup mousedown".split(" ")
	  },
	  compositionUpdate: {
	    phasedRegistrationNames: {
	      bubbled: "onCompositionUpdate",
	      captured: "onCompositionUpdateCapture"
	    },
	    dependencies: "blur compositionupdate keydown keypress keyup mousedown".split(" ")
	  }
	},
	    Fe = !1;

	function Ge(a, b) {
	  switch (a) {
	    case "keyup":
	      return -1 !== ye.indexOf(b.keyCode);

	    case "keydown":
	      return 229 !== b.keyCode;

	    case "keypress":
	    case "mousedown":
	    case "blur":
	      return !0;

	    default:
	      return !1;
	  }
	}

	function He(a) {
	  a = a.detail;
	  return "object" === _typeof_1(a) && "data" in a ? a.data : null;
	}

	var Ie = !1;

	function Je(a, b) {
	  switch (a) {
	    case "compositionend":
	      return He(b);

	    case "keypress":
	      if (32 !== b.which) return null;
	      Fe = !0;
	      return De;

	    case "textInput":
	      return a = b.data, a === De && Fe ? null : a;

	    default:
	      return null;
	  }
	}

	function Ke(a, b) {
	  if (Ie) return "compositionend" === a || !ze && Ge(a, b) ? (a = ve(), ue = te = se = null, Ie = !1, a) : null;

	  switch (a) {
	    case "paste":
	      return null;

	    case "keypress":
	      if (!(b.ctrlKey || b.altKey || b.metaKey) || b.ctrlKey && b.altKey) {
	        if (b["char"] && 1 < b["char"].length) return b["char"];
	        if (b.which) return String.fromCharCode(b.which);
	      }

	      return null;

	    case "compositionend":
	      return Ce && "ko" !== b.locale ? null : b.data;

	    default:
	      return null;
	  }
	}

	var Le = {
	  eventTypes: Ee,
	  extractEvents: function extractEvents(a, b, c, d) {
	    var e;
	    if (ze) b: {
	      switch (a) {
	        case "compositionstart":
	          var f = Ee.compositionStart;
	          break b;

	        case "compositionend":
	          f = Ee.compositionEnd;
	          break b;

	        case "compositionupdate":
	          f = Ee.compositionUpdate;
	          break b;
	      }

	      f = void 0;
	    } else Ie ? Ge(a, c) && (f = Ee.compositionEnd) : "keydown" === a && 229 === c.keyCode && (f = Ee.compositionStart);
	    f ? (Ce && "ko" !== c.locale && (Ie || f !== Ee.compositionStart ? f === Ee.compositionEnd && Ie && (e = ve()) : (se = d, te = "value" in se ? se.value : se.textContent, Ie = !0)), f = we.getPooled(f, b, c, d), e ? f.data = e : (e = He(c), null !== e && (f.data = e)), Lc(f), e = f) : e = null;
	    (a = Be ? Je(a, c) : Ke(a, c)) ? (b = xe.getPooled(Ee.beforeInput, b, c, d), b.data = a, Lc(b)) : b = null;
	    return null === e ? b : null === b ? e : [e, b];
	  }
	},
	    Me = {
	  color: !0,
	  date: !0,
	  datetime: !0,
	  "datetime-local": !0,
	  email: !0,
	  month: !0,
	  number: !0,
	  password: !0,
	  range: !0,
	  search: !0,
	  tel: !0,
	  text: !0,
	  time: !0,
	  url: !0,
	  week: !0
	};

	function Ne(a) {
	  var b = a && a.nodeName && a.nodeName.toLowerCase();
	  return "input" === b ? !!Me[a.type] : "textarea" === b ? !0 : !1;
	}

	var Oe = {
	  change: {
	    phasedRegistrationNames: {
	      bubbled: "onChange",
	      captured: "onChangeCapture"
	    },
	    dependencies: "blur change click focus input keydown keyup selectionchange".split(" ")
	  }
	};

	function Pe(a, b, c) {
	  a = F$1.getPooled(Oe.change, a, b, c);
	  a.type = "change";
	  bb(c);
	  Lc(a);
	  return a;
	}

	var Qe = null,
	    Re = null;

	function Se(a) {
	  Aa(a);
	}

	function Te(a) {
	  var b = qe(a);
	  if (zb(b)) return a;
	}

	function Ue(a, b) {
	  if ("change" === a) return b;
	}

	var Ve = !1;
	Xa && (Ve = Jd("input") && (!document.documentMode || 9 < document.documentMode));

	function We() {
	  Qe && (Qe.detachEvent("onpropertychange", Xe), Re = Qe = null);
	}

	function Xe(a) {
	  if ("value" === a.propertyName && Te(Re)) if (a = Pe(Re, a, Fc(a)), hb) Aa(a);else {
	    hb = !0;

	    try {
	      db(Se, a);
	    } finally {
	      hb = !1, jb();
	    }
	  }
	}

	function Ye(a, b, c) {
	  "focus" === a ? (We(), Qe = b, Re = c, Qe.attachEvent("onpropertychange", Xe)) : "blur" === a && We();
	}

	function Ze(a) {
	  if ("selectionchange" === a || "keyup" === a || "keydown" === a) return Te(Re);
	}

	function $e(a, b) {
	  if ("click" === a) return Te(b);
	}

	function af(a, b) {
	  if ("input" === a || "change" === a) return Te(b);
	}

	var bf = {
	  eventTypes: Oe,
	  _isInputEventSupported: Ve,
	  extractEvents: function extractEvents(a, b, c, d) {
	    var e = b ? qe(b) : window,
	        f = e.nodeName && e.nodeName.toLowerCase();
	    if ("select" === f || "input" === f && "file" === e.type) var g = Ue;else if (Ne(e)) {
	      if (Ve) g = af;else {
	        g = Ze;
	        var h = Ye;
	      }
	    } else (f = e.nodeName) && "input" === f.toLowerCase() && ("checkbox" === e.type || "radio" === e.type) && (g = $e);
	    if (g && (g = g(a, b))) return Pe(g, c, d);
	    h && h(a, e, b);
	    "blur" === a && (a = e._wrapperState) && a.controlled && "number" === e.type && Eb(e, "number", e.value);
	  }
	},
	    cf = {
	  mouseEnter: {
	    registrationName: "onMouseEnter",
	    dependencies: ["mouseout", "mouseover"]
	  },
	  mouseLeave: {
	    registrationName: "onMouseLeave",
	    dependencies: ["mouseout", "mouseover"]
	  },
	  pointerEnter: {
	    registrationName: "onPointerEnter",
	    dependencies: ["pointerout", "pointerover"]
	  },
	  pointerLeave: {
	    registrationName: "onPointerLeave",
	    dependencies: ["pointerout", "pointerover"]
	  }
	},
	    df = {
	  eventTypes: cf,
	  extractEvents: function extractEvents(a, b, c, d, e) {
	    var f = "mouseover" === a || "pointerover" === a,
	        g = "mouseout" === a || "pointerout" === a;
	    if (f && 0 === (e & 32) && (c.relatedTarget || c.fromElement) || !g && !f) return null;
	    e = d.window === d ? d : (e = d.ownerDocument) ? e.defaultView || e.parentWindow : window;

	    if (g) {
	      if (g = b, b = (b = c.relatedTarget || c.toElement) ? Cd(b) : null, null !== b && (f = Bc(b), b !== f || 5 !== b.tag && 6 !== b.tag)) b = null;
	    } else g = null;

	    if (g === b) return null;

	    if ("mouseout" === a || "mouseover" === a) {
	      var h = gd;
	      var k = cf.mouseLeave;
	      var l = cf.mouseEnter;
	      var m = "mouse";
	    } else if ("pointerout" === a || "pointerover" === a) h = hd, k = cf.pointerLeave, l = cf.pointerEnter, m = "pointer";

	    a = null == g ? e : qe(g);
	    e = null == b ? e : qe(b);
	    k = h.getPooled(k, g, c, d);
	    k.type = m + "leave";
	    k.target = a;
	    k.relatedTarget = e;
	    c = h.getPooled(l, b, c, d);
	    c.type = m + "enter";
	    c.target = e;
	    c.relatedTarget = a;
	    d = g;
	    m = b;
	    if (d && m) a: {
	      h = d;
	      l = m;
	      a = 0;

	      for (g = h; g; g = Gc(g)) {
	        a++;
	      }

	      g = 0;

	      for (b = l; b; b = Gc(b)) {
	        g++;
	      }

	      for (; 0 < a - g;) {
	        h = Gc(h), a--;
	      }

	      for (; 0 < g - a;) {
	        l = Gc(l), g--;
	      }

	      for (; a--;) {
	        if (h === l || h === l.alternate) break a;
	        h = Gc(h);
	        l = Gc(l);
	      }

	      h = null;
	    } else h = null;
	    l = h;

	    for (h = []; d && d !== l;) {
	      a = d.alternate;
	      if (null !== a && a === l) break;
	      h.push(d);
	      d = Gc(d);
	    }

	    for (d = []; m && m !== l;) {
	      a = m.alternate;
	      if (null !== a && a === l) break;
	      d.push(m);
	      m = Gc(m);
	    }

	    for (m = 0; m < h.length; m++) {
	      Jc(h[m], "bubbled", k);
	    }

	    for (m = d.length; 0 < m--;) {
	      Jc(d[m], "captured", c);
	    }

	    return [k, c];
	  }
	};

	function ef(a, b) {
	  return a === b && (0 !== a || 1 / a === 1 / b) || a !== a && b !== b;
	}

	var ff = "function" === typeof Object.is ? Object.is : ef,
	    gf = Object.prototype.hasOwnProperty;

	function hf(a, b) {
	  if (ff(a, b)) return !0;
	  if ("object" !== _typeof_1(a) || null === a || "object" !== _typeof_1(b) || null === b) return !1;
	  var c = Object.keys(a),
	      d = Object.keys(b);
	  if (c.length !== d.length) return !1;

	  for (d = 0; d < c.length; d++) {
	    if (!gf.call(b, c[d]) || !ff(a[c[d]], b[c[d]])) return !1;
	  }

	  return !0;
	}

	var jf = Xa && "documentMode" in document && 11 >= document.documentMode,
	    kf = {
	  select: {
	    phasedRegistrationNames: {
	      bubbled: "onSelect",
	      captured: "onSelectCapture"
	    },
	    dependencies: "blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")
	  }
	},
	    lf = null,
	    mf = null,
	    nf = null,
	    of = !1;

	function pf(a, b) {
	  var c = b.window === b ? b.document : 9 === b.nodeType ? b : b.ownerDocument;
	  if (of || null == lf || lf !== Ud(c)) return null;
	  c = lf;
	  "selectionStart" in c && Zd(c) ? c = {
	    start: c.selectionStart,
	    end: c.selectionEnd
	  } : (c = (c.ownerDocument && c.ownerDocument.defaultView || window).getSelection(), c = {
	    anchorNode: c.anchorNode,
	    anchorOffset: c.anchorOffset,
	    focusNode: c.focusNode,
	    focusOffset: c.focusOffset
	  });
	  return nf && hf(nf, c) ? null : (nf = c, a = F$1.getPooled(kf.select, mf, a, b), a.type = "select", a.target = lf, Lc(a), a);
	}

	var qf = {
	  eventTypes: kf,
	  extractEvents: function extractEvents(a, b, c, d) {
	    var e = d.window === d ? d.document : 9 === d.nodeType ? d : d.ownerDocument,
	        f;

	    if (!(f = !e)) {
	      a: {
	        e = oc(e);
	        f = ja.onSelect;

	        for (var g = 0; g < f.length; g++) {
	          if (!e.has(f[g])) {
	            e = !1;
	            break a;
	          }
	        }

	        e = !0;
	      }

	      f = !e;
	    }

	    if (f) return null;
	    e = b ? qe(b) : window;

	    switch (a) {
	      case "focus":
	        if (Ne(e) || "true" === e.contentEditable) lf = e, mf = b, nf = null;
	        break;

	      case "blur":
	        nf = mf = lf = null;
	        break;

	      case "mousedown":
	        of = !0;
	        break;

	      case "contextmenu":
	      case "mouseup":
	      case "dragend":
	        return of = !1, pf(c, d);

	      case "selectionchange":
	        if (jf) break;

	      case "keydown":
	      case "keyup":
	        return pf(c, d);
	    }

	    return null;
	  }
	};
	Ba.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" "));
	sa = re;
	ta = pe;
	ua = qe;
	Ba.injectEventPluginsByName({
	  SimpleEventPlugin: wd,
	  EnterLeaveEventPlugin: df,
	  ChangeEventPlugin: bf,
	  SelectEventPlugin: qf,
	  BeforeInputEventPlugin: Le
	});
	var rf = [],
	    sf = -1;

	function H$1(a) {
	  0 > sf || (a.current = rf[sf], rf[sf] = null, sf--);
	}

	function I$1(a, b) {
	  sf++;
	  rf[sf] = a.current;
	  a.current = b;
	}

	var tf = {},
	    J$1 = {
	  current: tf
	},
	    K$1 = {
	  current: !1
	},
	    uf = tf;

	function vf(a, b) {
	  var c = a.type.contextTypes;
	  if (!c) return tf;
	  var d = a.stateNode;
	  if (d && d.__reactInternalMemoizedUnmaskedChildContext === b) return d.__reactInternalMemoizedMaskedChildContext;
	  var e = {},
	      f;

	  for (f in c) {
	    e[f] = b[f];
	  }

	  d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = b, a.__reactInternalMemoizedMaskedChildContext = e);
	  return e;
	}

	function N$1(a) {
	  a = a.childContextTypes;
	  return null !== a && void 0 !== a;
	}

	function wf(a) {
	  H$1(K$1, a);
	  H$1(J$1, a);
	}

	function xf(a) {
	  H$1(K$1, a);
	  H$1(J$1, a);
	}

	function zf(a, b, c) {
	  if (J$1.current !== tf) throw t$1(Error(168));
	  I$1(J$1, b, a);
	  I$1(K$1, c, a);
	}

	function Af(a, b, c) {
	  var d = a.stateNode;
	  a = b.childContextTypes;
	  if ("function" !== typeof d.getChildContext) return c;
	  d = d.getChildContext();

	  for (var e in d) {
	    if (!(e in a)) throw t$1(Error(108), Va(b) || "Unknown", e);
	  }

	  return objectAssign({}, c, {}, d);
	}

	function Bf(a) {
	  var b = a.stateNode;
	  b = b && b.__reactInternalMemoizedMergedChildContext || tf;
	  uf = J$1.current;
	  I$1(J$1, b, a);
	  I$1(K$1, K$1.current, a);
	  return !0;
	}

	function Cf(a, b, c) {
	  var d = a.stateNode;
	  if (!d) throw t$1(Error(169));
	  c ? (b = Af(a, b, uf), d.__reactInternalMemoizedMergedChildContext = b, H$1(K$1, a), H$1(J$1, a), I$1(J$1, b, a)) : H$1(K$1, a);
	  I$1(K$1, c, a);
	}

	var Df = scheduler.unstable_runWithPriority,
	    Ef = scheduler.unstable_scheduleCallback,
	    Ff = scheduler.unstable_cancelCallback,
	    Gf = scheduler.unstable_shouldYield,
	    Hf = scheduler.unstable_requestPaint,
	    If = scheduler.unstable_now,
	    Jf = scheduler.unstable_getCurrentPriorityLevel,
	    Kf = scheduler.unstable_ImmediatePriority,
	    Lf = scheduler.unstable_UserBlockingPriority,
	    Mf = scheduler.unstable_NormalPriority,
	    Nf = scheduler.unstable_LowPriority,
	    Of = scheduler.unstable_IdlePriority,
	    Pf = {},
	    Qf = void 0 !== Hf ? Hf : function () {},
	    Rf = null,
	    Sf = null,
	    Tf = !1,
	    Uf = If(),
	    Vf = 1E4 > Uf ? If : function () {
	  return If() - Uf;
	};

	function Wf() {
	  switch (Jf()) {
	    case Kf:
	      return 99;

	    case Lf:
	      return 98;

	    case Mf:
	      return 97;

	    case Nf:
	      return 96;

	    case Of:
	      return 95;

	    default:
	      throw t$1(Error(332));
	  }
	}

	function Xf(a) {
	  switch (a) {
	    case 99:
	      return Kf;

	    case 98:
	      return Lf;

	    case 97:
	      return Mf;

	    case 96:
	      return Nf;

	    case 95:
	      return Of;

	    default:
	      throw t$1(Error(332));
	  }
	}

	function Yf(a, b) {
	  a = Xf(a);
	  return Df(a, b);
	}

	function Zf(a, b, c) {
	  a = Xf(a);
	  return Ef(a, b, c);
	}

	function $f(a) {
	  null === Rf ? (Rf = [a], Sf = Ef(Kf, ag)) : Rf.push(a);
	  return Pf;
	}

	function bg() {
	  if (null !== Sf) {
	    var a = Sf;
	    Sf = null;
	    Ff(a);
	  }

	  ag();
	}

	function ag() {
	  if (!Tf && null !== Rf) {
	    Tf = !0;
	    var a = 0;

	    try {
	      var b = Rf;
	      Yf(99, function () {
	        for (; a < b.length; a++) {
	          var c = b[a];

	          do {
	            c = c(!0);
	          } while (null !== c);
	        }
	      });
	      Rf = null;
	    } catch (c) {
	      throw null !== Rf && (Rf = Rf.slice(a + 1)), Ef(Kf, bg), c;
	    } finally {
	      Tf = !1;
	    }
	  }
	}

	function cg(a, b) {
	  if (a && a.defaultProps) {
	    b = objectAssign({}, b);
	    a = a.defaultProps;

	    for (var c in a) {
	      void 0 === b[c] && (b[c] = a[c]);
	    }
	  }

	  return b;
	}

	var dg = {
	  current: null
	},
	    eg = null,
	    fg = null,
	    gg = null;

	function hg() {
	  gg = fg = eg = null;
	}

	function ig(a, b) {
	  var c = a.type._context;
	  I$1(dg, c._currentValue, a);
	  c._currentValue = b;
	}

	function jg(a) {
	  var b = dg.current;
	  H$1(dg, a);
	  a.type._context._currentValue = b;
	}

	function kg(a, b) {
	  for (; null !== a;) {
	    var c = a.alternate;
	    if (a.childExpirationTime < b) a.childExpirationTime = b, null !== c && c.childExpirationTime < b && (c.childExpirationTime = b);else if (null !== c && c.childExpirationTime < b) c.childExpirationTime = b;else break;
	    a = a["return"];
	  }
	}

	function lg(a, b) {
	  eg = a;
	  gg = fg = null;
	  a = a.dependencies;
	  null !== a && null !== a.firstContext && (a.expirationTime >= b && (mg = !0), a.firstContext = null);
	}

	function ng(a, b) {
	  if (gg !== a && !1 !== b && 0 !== b) {
	    if ("number" !== typeof b || 1073741823 === b) gg = a, b = 1073741823;
	    b = {
	      context: a,
	      observedBits: b,
	      next: null
	    };

	    if (null === fg) {
	      if (null === eg) throw t$1(Error(308));
	      fg = b;
	      eg.dependencies = {
	        expirationTime: 0,
	        firstContext: b,
	        responders: null
	      };
	    } else fg = fg.next = b;
	  }

	  return a._currentValue;
	}

	var og = !1;

	function pg(a) {
	  return {
	    baseState: a,
	    firstUpdate: null,
	    lastUpdate: null,
	    firstCapturedUpdate: null,
	    lastCapturedUpdate: null,
	    firstEffect: null,
	    lastEffect: null,
	    firstCapturedEffect: null,
	    lastCapturedEffect: null
	  };
	}

	function qg(a) {
	  return {
	    baseState: a.baseState,
	    firstUpdate: a.firstUpdate,
	    lastUpdate: a.lastUpdate,
	    firstCapturedUpdate: null,
	    lastCapturedUpdate: null,
	    firstEffect: null,
	    lastEffect: null,
	    firstCapturedEffect: null,
	    lastCapturedEffect: null
	  };
	}

	function rg(a, b) {
	  return {
	    expirationTime: a,
	    suspenseConfig: b,
	    tag: 0,
	    payload: null,
	    callback: null,
	    next: null,
	    nextEffect: null
	  };
	}

	function sg(a, b) {
	  null === a.lastUpdate ? a.firstUpdate = a.lastUpdate = b : (a.lastUpdate.next = b, a.lastUpdate = b);
	}

	function tg(a, b) {
	  var c = a.alternate;

	  if (null === c) {
	    var d = a.updateQueue;
	    var e = null;
	    null === d && (d = a.updateQueue = pg(a.memoizedState));
	  } else d = a.updateQueue, e = c.updateQueue, null === d ? null === e ? (d = a.updateQueue = pg(a.memoizedState), e = c.updateQueue = pg(c.memoizedState)) : d = a.updateQueue = qg(e) : null === e && (e = c.updateQueue = qg(d));

	  null === e || d === e ? sg(d, b) : null === d.lastUpdate || null === e.lastUpdate ? (sg(d, b), sg(e, b)) : (sg(d, b), e.lastUpdate = b);
	}

	function ug(a, b) {
	  var c = a.updateQueue;
	  c = null === c ? a.updateQueue = pg(a.memoizedState) : vg(a, c);
	  null === c.lastCapturedUpdate ? c.firstCapturedUpdate = c.lastCapturedUpdate = b : (c.lastCapturedUpdate.next = b, c.lastCapturedUpdate = b);
	}

	function vg(a, b) {
	  var c = a.alternate;
	  null !== c && b === c.updateQueue && (b = a.updateQueue = qg(b));
	  return b;
	}

	function wg(a, b, c, d, e, f) {
	  switch (c.tag) {
	    case 1:
	      return a = c.payload, "function" === typeof a ? a.call(f, d, e) : a;

	    case 3:
	      a.effectTag = a.effectTag & -4097 | 64;

	    case 0:
	      a = c.payload;
	      e = "function" === typeof a ? a.call(f, d, e) : a;
	      if (null === e || void 0 === e) break;
	      return objectAssign({}, d, e);

	    case 2:
	      og = !0;
	  }

	  return d;
	}

	function xg(a, b, c, d, e) {
	  og = !1;
	  b = vg(a, b);

	  for (var f = b.baseState, g = null, h = 0, k = b.firstUpdate, l = f; null !== k;) {
	    var m = k.expirationTime;
	    m < e ? (null === g && (g = k, f = l), h < m && (h = m)) : (yg(m, k.suspenseConfig), l = wg(a, b, k, l, c, d), null !== k.callback && (a.effectTag |= 32, k.nextEffect = null, null === b.lastEffect ? b.firstEffect = b.lastEffect = k : (b.lastEffect.nextEffect = k, b.lastEffect = k)));
	    k = k.next;
	  }

	  m = null;

	  for (k = b.firstCapturedUpdate; null !== k;) {
	    var A = k.expirationTime;
	    A < e ? (null === m && (m = k, null === g && (f = l)), h < A && (h = A)) : (l = wg(a, b, k, l, c, d), null !== k.callback && (a.effectTag |= 32, k.nextEffect = null, null === b.lastCapturedEffect ? b.firstCapturedEffect = b.lastCapturedEffect = k : (b.lastCapturedEffect.nextEffect = k, b.lastCapturedEffect = k)));
	    k = k.next;
	  }

	  null === g && (b.lastUpdate = null);
	  null === m ? b.lastCapturedUpdate = null : a.effectTag |= 32;
	  null === g && null === m && (f = l);
	  b.baseState = f;
	  b.firstUpdate = g;
	  b.firstCapturedUpdate = m;
	  zg(h);
	  a.expirationTime = h;
	  a.memoizedState = l;
	}

	function Ag(a, b, c) {
	  null !== b.firstCapturedUpdate && (null !== b.lastUpdate && (b.lastUpdate.next = b.firstCapturedUpdate, b.lastUpdate = b.lastCapturedUpdate), b.firstCapturedUpdate = b.lastCapturedUpdate = null);
	  Bg(b.firstEffect, c);
	  b.firstEffect = b.lastEffect = null;
	  Bg(b.firstCapturedEffect, c);
	  b.firstCapturedEffect = b.lastCapturedEffect = null;
	}

	function Bg(a, b) {
	  for (; null !== a;) {
	    var c = a.callback;

	    if (null !== c) {
	      a.callback = null;
	      var d = b;
	      if ("function" !== typeof c) throw t$1(Error(191), c);
	      c.call(d);
	    }

	    a = a.nextEffect;
	  }
	}

	var Cg = Da.ReactCurrentBatchConfig,
	    Dg = new react.Component().refs;

	function Eg(a, b, c, d) {
	  b = a.memoizedState;
	  c = c(d, b);
	  c = null === c || void 0 === c ? b : objectAssign({}, b, c);
	  a.memoizedState = c;
	  d = a.updateQueue;
	  null !== d && 0 === a.expirationTime && (d.baseState = c);
	}

	var Ig = {
	  isMounted: function isMounted(a) {
	    return (a = a._reactInternalFiber) ? Bc(a) === a : !1;
	  },
	  enqueueSetState: function enqueueSetState(a, b, c) {
	    a = a._reactInternalFiber;
	    var d = Fg(),
	        e = Cg.suspense;
	    d = Gg(d, a, e);
	    e = rg(d, e);
	    e.payload = b;
	    void 0 !== c && null !== c && (e.callback = c);
	    tg(a, e);
	    Hg(a, d);
	  },
	  enqueueReplaceState: function enqueueReplaceState(a, b, c) {
	    a = a._reactInternalFiber;
	    var d = Fg(),
	        e = Cg.suspense;
	    d = Gg(d, a, e);
	    e = rg(d, e);
	    e.tag = 1;
	    e.payload = b;
	    void 0 !== c && null !== c && (e.callback = c);
	    tg(a, e);
	    Hg(a, d);
	  },
	  enqueueForceUpdate: function enqueueForceUpdate(a, b) {
	    a = a._reactInternalFiber;
	    var c = Fg(),
	        d = Cg.suspense;
	    c = Gg(c, a, d);
	    d = rg(c, d);
	    d.tag = 2;
	    void 0 !== b && null !== b && (d.callback = b);
	    tg(a, d);
	    Hg(a, c);
	  }
	};

	function Jg(a, b, c, d, e, f, g) {
	  a = a.stateNode;
	  return "function" === typeof a.shouldComponentUpdate ? a.shouldComponentUpdate(d, f, g) : b.prototype && b.prototype.isPureReactComponent ? !hf(c, d) || !hf(e, f) : !0;
	}

	function Kg(a, b, c) {
	  var d = !1,
	      e = tf;
	  var f = b.contextType;
	  "object" === _typeof_1(f) && null !== f ? f = ng(f) : (e = N$1(b) ? uf : J$1.current, d = b.contextTypes, f = (d = null !== d && void 0 !== d) ? vf(a, e) : tf);
	  b = new b(c, f);
	  a.memoizedState = null !== b.state && void 0 !== b.state ? b.state : null;
	  b.updater = Ig;
	  a.stateNode = b;
	  b._reactInternalFiber = a;
	  d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = e, a.__reactInternalMemoizedMaskedChildContext = f);
	  return b;
	}

	function Lg(a, b, c, d) {
	  a = b.state;
	  "function" === typeof b.componentWillReceiveProps && b.componentWillReceiveProps(c, d);
	  "function" === typeof b.UNSAFE_componentWillReceiveProps && b.UNSAFE_componentWillReceiveProps(c, d);
	  b.state !== a && Ig.enqueueReplaceState(b, b.state, null);
	}

	function Mg(a, b, c, d) {
	  var e = a.stateNode;
	  e.props = c;
	  e.state = a.memoizedState;
	  e.refs = Dg;
	  var f = b.contextType;
	  "object" === _typeof_1(f) && null !== f ? e.context = ng(f) : (f = N$1(b) ? uf : J$1.current, e.context = vf(a, f));
	  f = a.updateQueue;
	  null !== f && (xg(a, f, c, e, d), e.state = a.memoizedState);
	  f = b.getDerivedStateFromProps;
	  "function" === typeof f && (Eg(a, b, f, c), e.state = a.memoizedState);
	  "function" === typeof b.getDerivedStateFromProps || "function" === typeof e.getSnapshotBeforeUpdate || "function" !== typeof e.UNSAFE_componentWillMount && "function" !== typeof e.componentWillMount || (b = e.state, "function" === typeof e.componentWillMount && e.componentWillMount(), "function" === typeof e.UNSAFE_componentWillMount && e.UNSAFE_componentWillMount(), b !== e.state && Ig.enqueueReplaceState(e, e.state, null), f = a.updateQueue, null !== f && (xg(a, f, c, e, d), e.state = a.memoizedState));
	  "function" === typeof e.componentDidMount && (a.effectTag |= 4);
	}

	var Ng = Array.isArray;

	function Og(a, b, c) {
	  a = c.ref;

	  if (null !== a && "function" !== typeof a && "object" !== _typeof_1(a)) {
	    if (c._owner) {
	      c = c._owner;

	      if (c) {
	        if (1 !== c.tag) throw t$1(Error(309));
	        var d = c.stateNode;
	      }

	      if (!d) throw t$1(Error(147), a);
	      var e = "" + a;
	      if (null !== b && null !== b.ref && "function" === typeof b.ref && b.ref._stringRef === e) return b.ref;

	      b = function b(a) {
	        var b = d.refs;
	        b === Dg && (b = d.refs = {});
	        null === a ? delete b[e] : b[e] = a;
	      };

	      b._stringRef = e;
	      return b;
	    }

	    if ("string" !== typeof a) throw t$1(Error(284));
	    if (!c._owner) throw t$1(Error(290), a);
	  }

	  return a;
	}

	function Pg(a, b) {
	  if ("textarea" !== a.type) throw t$1(Error(31), "[object Object]" === Object.prototype.toString.call(b) ? "object with keys {" + Object.keys(b).join(", ") + "}" : b, "");
	}

	function Qg(a) {
	  function b(b, c) {
	    if (a) {
	      var d = b.lastEffect;
	      null !== d ? (d.nextEffect = c, b.lastEffect = c) : b.firstEffect = b.lastEffect = c;
	      c.nextEffect = null;
	      c.effectTag = 8;
	    }
	  }

	  function c(c, d) {
	    if (!a) return null;

	    for (; null !== d;) {
	      b(c, d), d = d.sibling;
	    }

	    return null;
	  }

	  function d(a, b) {
	    for (a = new Map(); null !== b;) {
	      null !== b.key ? a.set(b.key, b) : a.set(b.index, b), b = b.sibling;
	    }

	    return a;
	  }

	  function e(a, b, c) {
	    a = Rg(a, b, c);
	    a.index = 0;
	    a.sibling = null;
	    return a;
	  }

	  function f(b, c, d) {
	    b.index = d;
	    if (!a) return c;
	    d = b.alternate;
	    if (null !== d) return d = d.index, d < c ? (b.effectTag = E$1, c) : d;
	    b.effectTag = E$1;
	    return c;
	  }

	  function g(b) {
	    a && null === b.alternate && (b.effectTag = E$1);
	    return b;
	  }

	  function h(a, b, c, d) {
	    if (null === b || 6 !== b.tag) return b = Sg(c, a.mode, d), b["return"] = a, b;
	    b = e(b, c, d);
	    b["return"] = a;
	    return b;
	  }

	  function k(a, b, c, d) {
	    if (null !== b && b.elementType === c.type) return d = e(b, c.props, d), d.ref = Og(a, b, c), d["return"] = a, d;
	    d = Tg(c.type, c.key, c.props, null, a.mode, d);
	    d.ref = Og(a, b, c);
	    d["return"] = a;
	    return d;
	  }

	  function l(a, b, c, d) {
	    if (null === b || 4 !== b.tag || b.stateNode.containerInfo !== c.containerInfo || b.stateNode.implementation !== c.implementation) return b = Ug(c, a.mode, d), b["return"] = a, b;
	    b = e(b, c.children || [], d);
	    b["return"] = a;
	    return b;
	  }

	  function m(a, b, c, d, f) {
	    if (null === b || 7 !== b.tag) return b = Vg(c, a.mode, d, f), b["return"] = a, b;
	    b = e(b, c, d);
	    b["return"] = a;
	    return b;
	  }

	  function A(a, b, c) {
	    if ("string" === typeof b || "number" === typeof b) return b = Sg("" + b, a.mode, c), b["return"] = a, b;

	    if ("object" === _typeof_1(b) && null !== b) {
	      switch (b.$$typeof) {
	        case Fa:
	          return c = Tg(b.type, b.key, b.props, null, a.mode, c), c.ref = Og(a, null, b), c["return"] = a, c;

	        case Ga:
	          return b = Ug(b, a.mode, c), b["return"] = a, b;
	      }

	      if (Ng(b) || Ta(b)) return b = Vg(b, a.mode, c, null), b["return"] = a, b;
	      Pg(a, b);
	    }

	    return null;
	  }

	  function w(a, b, c, d) {
	    var e = null !== b ? b.key : null;
	    if ("string" === typeof c || "number" === typeof c) return null !== e ? null : h(a, b, "" + c, d);

	    if ("object" === _typeof_1(c) && null !== c) {
	      switch (c.$$typeof) {
	        case Fa:
	          return c.key === e ? c.type === Ha ? m(a, b, c.props.children, d, e) : k(a, b, c, d) : null;

	        case Ga:
	          return c.key === e ? l(a, b, c, d) : null;
	      }

	      if (Ng(c) || Ta(c)) return null !== e ? null : m(a, b, c, d, null);
	      Pg(a, c);
	    }

	    return null;
	  }

	  function L(a, b, c, d, e) {
	    if ("string" === typeof d || "number" === typeof d) return a = a.get(c) || null, h(b, a, "" + d, e);

	    if ("object" === _typeof_1(d) && null !== d) {
	      switch (d.$$typeof) {
	        case Fa:
	          return a = a.get(null === d.key ? c : d.key) || null, d.type === Ha ? m(b, a, d.props.children, e, d.key) : k(b, a, d, e);

	        case Ga:
	          return a = a.get(null === d.key ? c : d.key) || null, l(b, a, d, e);
	      }

	      if (Ng(d) || Ta(d)) return a = a.get(c) || null, m(b, a, d, e, null);
	      Pg(b, d);
	    }

	    return null;
	  }

	  function wb(e, g, h, k) {
	    for (var l = null, m = null, q = g, y = g = 0, z = null; null !== q && y < h.length; y++) {
	      q.index > y ? (z = q, q = null) : z = q.sibling;
	      var p = w(e, q, h[y], k);

	      if (null === p) {
	        null === q && (q = z);
	        break;
	      }

	      a && q && null === p.alternate && b(e, q);
	      g = f(p, g, y);
	      null === m ? l = p : m.sibling = p;
	      m = p;
	      q = z;
	    }

	    if (y === h.length) return c(e, q), l;

	    if (null === q) {
	      for (; y < h.length; y++) {
	        q = A(e, h[y], k), null !== q && (g = f(q, g, y), null === m ? l = q : m.sibling = q, m = q);
	      }

	      return l;
	    }

	    for (q = d(e, q); y < h.length; y++) {
	      z = L(q, e, y, h[y], k), null !== z && (a && null !== z.alternate && q["delete"](null === z.key ? y : z.key), g = f(z, g, y), null === m ? l = z : m.sibling = z, m = z);
	    }

	    a && q.forEach(function (a) {
	      return b(e, a);
	    });
	    return l;
	  }

	  function M(e, g, h, k) {
	    var l = Ta(h);
	    if ("function" !== typeof l) throw t$1(Error(150));
	    h = l.call(h);
	    if (null == h) throw t$1(Error(151));

	    for (var m = l = null, q = g, y = g = 0, z = null, p = h.next(); null !== q && !p.done; y++, p = h.next()) {
	      q.index > y ? (z = q, q = null) : z = q.sibling;
	      var M = w(e, q, p.value, k);

	      if (null === M) {
	        null === q && (q = z);
	        break;
	      }

	      a && q && null === M.alternate && b(e, q);
	      g = f(M, g, y);
	      null === m ? l = M : m.sibling = M;
	      m = M;
	      q = z;
	    }

	    if (p.done) return c(e, q), l;

	    if (null === q) {
	      for (; !p.done; y++, p = h.next()) {
	        p = A(e, p.value, k), null !== p && (g = f(p, g, y), null === m ? l = p : m.sibling = p, m = p);
	      }

	      return l;
	    }

	    for (q = d(e, q); !p.done; y++, p = h.next()) {
	      p = L(q, e, y, p.value, k), null !== p && (a && null !== p.alternate && q["delete"](null === p.key ? y : p.key), g = f(p, g, y), null === m ? l = p : m.sibling = p, m = p);
	    }

	    a && q.forEach(function (a) {
	      return b(e, a);
	    });
	    return l;
	  }

	  return function (a, d, f, h) {
	    var k = "object" === _typeof_1(f) && null !== f && f.type === Ha && null === f.key;
	    k && (f = f.props.children);
	    var l = "object" === _typeof_1(f) && null !== f;
	    if (l) switch (f.$$typeof) {
	      case Fa:
	        a: {
	          l = f.key;

	          for (k = d; null !== k;) {
	            if (k.key === l) {
	              if (7 === k.tag ? f.type === Ha : k.elementType === f.type) {
	                c(a, k.sibling);
	                d = e(k, f.type === Ha ? f.props.children : f.props, h);
	                d.ref = Og(a, k, f);
	                d["return"] = a;
	                a = d;
	                break a;
	              }

	              c(a, k);
	              break;
	            } else b(a, k);

	            k = k.sibling;
	          }

	          f.type === Ha ? (d = Vg(f.props.children, a.mode, h, f.key), d["return"] = a, a = d) : (h = Tg(f.type, f.key, f.props, null, a.mode, h), h.ref = Og(a, d, f), h["return"] = a, a = h);
	        }

	        return g(a);

	      case Ga:
	        a: {
	          for (k = f.key; null !== d;) {
	            if (d.key === k) {
	              if (4 === d.tag && d.stateNode.containerInfo === f.containerInfo && d.stateNode.implementation === f.implementation) {
	                c(a, d.sibling);
	                d = e(d, f.children || [], h);
	                d["return"] = a;
	                a = d;
	                break a;
	              }

	              c(a, d);
	              break;
	            } else b(a, d);

	            d = d.sibling;
	          }

	          d = Ug(f, a.mode, h);
	          d["return"] = a;
	          a = d;
	        }

	        return g(a);
	    }
	    if ("string" === typeof f || "number" === typeof f) return f = "" + f, null !== d && 6 === d.tag ? (c(a, d.sibling), d = e(d, f, h), d["return"] = a, a = d) : (c(a, d), d = Sg(f, a.mode, h), d["return"] = a, a = d), g(a);
	    if (Ng(f)) return wb(a, d, f, h);
	    if (Ta(f)) return M(a, d, f, h);
	    l && Pg(a, f);
	    if ("undefined" === typeof f && !k) switch (a.tag) {
	      case 1:
	      case 0:
	        throw a = a.type, t$1(Error(152), a.displayName || a.name || "Component");
	    }
	    return c(a, d);
	  };
	}

	var Wg = Qg(!0),
	    Xg = Qg(!1),
	    Yg = {},
	    Zg = {
	  current: Yg
	},
	    $g = {
	  current: Yg
	},
	    ah = {
	  current: Yg
	};

	function bh(a) {
	  if (a === Yg) throw t$1(Error(174));
	  return a;
	}

	function ch(a, b) {
	  I$1(ah, b, a);
	  I$1($g, a, a);
	  I$1(Zg, Yg, a);
	  var c = b.nodeType;

	  switch (c) {
	    case 9:
	    case 11:
	      b = (b = b.documentElement) ? b.namespaceURI : Qb(null, "");
	      break;

	    default:
	      c = 8 === c ? b.parentNode : b, b = c.namespaceURI || null, c = c.tagName, b = Qb(b, c);
	  }

	  H$1(Zg, a);
	  I$1(Zg, b, a);
	}

	function dh(a) {
	  H$1(Zg, a);
	  H$1($g, a);
	  H$1(ah, a);
	}

	function eh(a) {
	  bh(ah.current);
	  var b = bh(Zg.current);
	  var c = Qb(b, a.type);
	  b !== c && (I$1($g, a, a), I$1(Zg, c, a));
	}

	function fh(a) {
	  $g.current === a && (H$1(Zg, a), H$1($g, a));
	}

	var O$1 = {
	  current: 0
	};

	function gh(a) {
	  for (var b = a; null !== b;) {
	    if (13 === b.tag) {
	      var c = b.memoizedState;
	      if (null !== c && (c = c.dehydrated, null === c || c.data === be || c.data === ce)) return b;
	    } else if (19 === b.tag && void 0 !== b.memoizedProps.revealOrder) {
	      if ((b.effectTag & 64) !== D$1) return b;
	    } else if (null !== b.child) {
	      b.child["return"] = b;
	      b = b.child;
	      continue;
	    }

	    if (b === a) break;

	    for (; null === b.sibling;) {
	      if (null === b["return"] || b["return"] === a) return null;
	      b = b["return"];
	    }

	    b.sibling["return"] = b["return"];
	    b = b.sibling;
	  }

	  return null;
	}

	function hh(a, b) {
	  return {
	    responder: a,
	    props: b
	  };
	}

	var ih = Da.ReactCurrentDispatcher,
	    jh = 0,
	    kh = null,
	    P$1 = null,
	    lh = null,
	    mh = null,
	    Q$1 = null,
	    nh = null,
	    oh = 0,
	    ph = null,
	    qh = 0,
	    rh = !1,
	    sh = null,
	    th = 0;

	function uh() {
	  throw t$1(Error(321));
	}

	function vh(a, b) {
	  if (null === b) return !1;

	  for (var c = 0; c < b.length && c < a.length; c++) {
	    if (!ff(a[c], b[c])) return !1;
	  }

	  return !0;
	}

	function wh(a, b, c, d, e, f) {
	  jh = f;
	  kh = b;
	  lh = null !== a ? a.memoizedState : null;
	  ih.current = null === lh ? xh : yh;
	  b = c(d, e);

	  if (rh) {
	    do {
	      rh = !1, th += 1, lh = null !== a ? a.memoizedState : null, nh = mh, ph = Q$1 = P$1 = null, ih.current = yh, b = c(d, e);
	    } while (rh);

	    sh = null;
	    th = 0;
	  }

	  ih.current = zh;
	  a = kh;
	  a.memoizedState = mh;
	  a.expirationTime = oh;
	  a.updateQueue = ph;
	  a.effectTag |= qh;
	  a = null !== P$1 && null !== P$1.next;
	  jh = 0;
	  nh = Q$1 = mh = lh = P$1 = kh = null;
	  oh = 0;
	  ph = null;
	  qh = 0;
	  if (a) throw t$1(Error(300));
	  return b;
	}

	function Ah() {
	  ih.current = zh;
	  jh = 0;
	  nh = Q$1 = mh = lh = P$1 = kh = null;
	  oh = 0;
	  ph = null;
	  qh = 0;
	  rh = !1;
	  sh = null;
	  th = 0;
	}

	function Eh() {
	  var a = {
	    memoizedState: null,
	    baseState: null,
	    queue: null,
	    baseUpdate: null,
	    next: null
	  };
	  null === Q$1 ? mh = Q$1 = a : Q$1 = Q$1.next = a;
	  return Q$1;
	}

	function Fh() {
	  if (null !== nh) Q$1 = nh, nh = Q$1.next, P$1 = lh, lh = null !== P$1 ? P$1.next : null;else {
	    if (null === lh) throw t$1(Error(310));
	    P$1 = lh;
	    var a = {
	      memoizedState: P$1.memoizedState,
	      baseState: P$1.baseState,
	      queue: P$1.queue,
	      baseUpdate: P$1.baseUpdate,
	      next: null
	    };
	    Q$1 = null === Q$1 ? mh = a : Q$1.next = a;
	    lh = P$1.next;
	  }
	  return Q$1;
	}

	function Gh(a, b) {
	  return "function" === typeof b ? b(a) : b;
	}

	function Hh(a) {
	  var b = Fh(),
	      c = b.queue;
	  if (null === c) throw t$1(Error(311));
	  c.lastRenderedReducer = a;

	  if (0 < th) {
	    var d = c.dispatch;

	    if (null !== sh) {
	      var e = sh.get(c);

	      if (void 0 !== e) {
	        sh["delete"](c);
	        var f = b.memoizedState;

	        do {
	          f = a(f, e.action), e = e.next;
	        } while (null !== e);

	        ff(f, b.memoizedState) || (mg = !0);
	        b.memoizedState = f;
	        b.baseUpdate === c.last && (b.baseState = f);
	        c.lastRenderedState = f;
	        return [f, d];
	      }
	    }

	    return [b.memoizedState, d];
	  }

	  d = c.last;
	  var g = b.baseUpdate;
	  f = b.baseState;
	  null !== g ? (null !== d && (d.next = null), d = g.next) : d = null !== d ? d.next : null;

	  if (null !== d) {
	    var h = e = null,
	        k = d,
	        l = !1;

	    do {
	      var m = k.expirationTime;
	      m < jh ? (l || (l = !0, h = g, e = f), m > oh && (oh = m, zg(oh))) : (yg(m, k.suspenseConfig), f = k.eagerReducer === a ? k.eagerState : a(f, k.action));
	      g = k;
	      k = k.next;
	    } while (null !== k && k !== d);

	    l || (h = g, e = f);
	    ff(f, b.memoizedState) || (mg = !0);
	    b.memoizedState = f;
	    b.baseUpdate = h;
	    b.baseState = e;
	    c.lastRenderedState = f;
	  }

	  return [b.memoizedState, c.dispatch];
	}

	function Ih(a, b, c, d) {
	  a = {
	    tag: a,
	    create: b,
	    destroy: c,
	    deps: d,
	    next: null
	  };
	  null === ph ? (ph = {
	    lastEffect: null
	  }, ph.lastEffect = a.next = a) : (b = ph.lastEffect, null === b ? ph.lastEffect = a.next = a : (c = b.next, b.next = a, a.next = c, ph.lastEffect = a));
	  return a;
	}

	function Jh(a, b, c, d) {
	  var e = Eh();
	  qh |= a;
	  e.memoizedState = Ih(b, c, void 0, void 0 === d ? null : d);
	}

	function Kh(a, b, c, d) {
	  var e = Fh();
	  d = void 0 === d ? null : d;
	  var f = void 0;

	  if (null !== P$1) {
	    var g = P$1.memoizedState;
	    f = g.destroy;

	    if (null !== d && vh(d, g.deps)) {
	      Ih(0, c, f, d);
	      return;
	    }
	  }

	  qh |= a;
	  e.memoizedState = Ih(b, c, f, d);
	}

	function Lh(a, b) {
	  if ("function" === typeof b) return a = a(), b(a), function () {
	    b(null);
	  };
	  if (null !== b && void 0 !== b) return a = a(), b.current = a, function () {
	    b.current = null;
	  };
	}

	function Mh() {}

	function Nh(a, b, c) {
	  if (!(25 > th)) throw t$1(Error(301));
	  var d = a.alternate;
	  if (a === kh || null !== d && d === kh) {
	    if (rh = !0, a = {
	      expirationTime: jh,
	      suspenseConfig: null,
	      action: c,
	      eagerReducer: null,
	      eagerState: null,
	      next: null
	    }, null === sh && (sh = new Map()), c = sh.get(b), void 0 === c) sh.set(b, a);else {
	      for (b = c; null !== b.next;) {
	        b = b.next;
	      }

	      b.next = a;
	    }
	  } else {
	    var e = Fg(),
	        f = Cg.suspense;
	    e = Gg(e, a, f);
	    f = {
	      expirationTime: e,
	      suspenseConfig: f,
	      action: c,
	      eagerReducer: null,
	      eagerState: null,
	      next: null
	    };
	    var g = b.last;
	    if (null === g) f.next = f;else {
	      var h = g.next;
	      null !== h && (f.next = h);
	      g.next = f;
	    }
	    b.last = f;
	    if (0 === a.expirationTime && (null === d || 0 === d.expirationTime) && (d = b.lastRenderedReducer, null !== d)) try {
	      var k = b.lastRenderedState,
	          l = d(k, c);
	      f.eagerReducer = d;
	      f.eagerState = l;
	      if (ff(l, k)) return;
	    } catch (m) {} finally {}
	    Hg(a, e);
	  }
	}

	var zh = {
	  readContext: ng,
	  useCallback: uh,
	  useContext: uh,
	  useEffect: uh,
	  useImperativeHandle: uh,
	  useLayoutEffect: uh,
	  useMemo: uh,
	  useReducer: uh,
	  useRef: uh,
	  useState: uh,
	  useDebugValue: uh,
	  useResponder: uh
	},
	    xh = {
	  readContext: ng,
	  useCallback: function useCallback(a, b) {
	    Eh().memoizedState = [a, void 0 === b ? null : b];
	    return a;
	  },
	  useContext: ng,
	  useEffect: function useEffect(a, b) {
	    return Jh(516, 192, a, b);
	  },
	  useImperativeHandle: function useImperativeHandle(a, b, c) {
	    c = null !== c && void 0 !== c ? c.concat([a]) : null;
	    return Jh(4, 36, Lh.bind(null, b, a), c);
	  },
	  useLayoutEffect: function useLayoutEffect(a, b) {
	    return Jh(4, 36, a, b);
	  },
	  useMemo: function useMemo(a, b) {
	    var c = Eh();
	    b = void 0 === b ? null : b;
	    a = a();
	    c.memoizedState = [a, b];
	    return a;
	  },
	  useReducer: function useReducer(a, b, c) {
	    var d = Eh();
	    b = void 0 !== c ? c(b) : b;
	    d.memoizedState = d.baseState = b;
	    a = d.queue = {
	      last: null,
	      dispatch: null,
	      lastRenderedReducer: a,
	      lastRenderedState: b
	    };
	    a = a.dispatch = Nh.bind(null, kh, a);
	    return [d.memoizedState, a];
	  },
	  useRef: function useRef(a) {
	    var b = Eh();
	    a = {
	      current: a
	    };
	    return b.memoizedState = a;
	  },
	  useState: function useState(a) {
	    var b = Eh();
	    "function" === typeof a && (a = a());
	    b.memoizedState = b.baseState = a;
	    a = b.queue = {
	      last: null,
	      dispatch: null,
	      lastRenderedReducer: Gh,
	      lastRenderedState: a
	    };
	    a = a.dispatch = Nh.bind(null, kh, a);
	    return [b.memoizedState, a];
	  },
	  useDebugValue: Mh,
	  useResponder: hh
	},
	    yh = {
	  readContext: ng,
	  useCallback: function useCallback(a, b) {
	    var c = Fh();
	    b = void 0 === b ? null : b;
	    var d = c.memoizedState;
	    if (null !== d && null !== b && vh(b, d[1])) return d[0];
	    c.memoizedState = [a, b];
	    return a;
	  },
	  useContext: ng,
	  useEffect: function useEffect(a, b) {
	    return Kh(516, 192, a, b);
	  },
	  useImperativeHandle: function useImperativeHandle(a, b, c) {
	    c = null !== c && void 0 !== c ? c.concat([a]) : null;
	    return Kh(4, 36, Lh.bind(null, b, a), c);
	  },
	  useLayoutEffect: function useLayoutEffect(a, b) {
	    return Kh(4, 36, a, b);
	  },
	  useMemo: function useMemo(a, b) {
	    var c = Fh();
	    b = void 0 === b ? null : b;
	    var d = c.memoizedState;
	    if (null !== d && null !== b && vh(b, d[1])) return d[0];
	    a = a();
	    c.memoizedState = [a, b];
	    return a;
	  },
	  useReducer: Hh,
	  useRef: function useRef() {
	    return Fh().memoizedState;
	  },
	  useState: function useState(a) {
	    return Hh(Gh, a);
	  },
	  useDebugValue: Mh,
	  useResponder: hh
	},
	    Oh = null,
	    Ph = null,
	    Qh = !1;

	function Rh(a, b) {
	  var c = Sh(5, null, null, 0);
	  c.elementType = "DELETED";
	  c.type = "DELETED";
	  c.stateNode = b;
	  c["return"] = a;
	  c.effectTag = 8;
	  null !== a.lastEffect ? (a.lastEffect.nextEffect = c, a.lastEffect = c) : a.firstEffect = a.lastEffect = c;
	}

	function Th(a, b) {
	  switch (a.tag) {
	    case 5:
	      var c = a.type;
	      b = 1 !== b.nodeType || c.toLowerCase() !== b.nodeName.toLowerCase() ? null : b;
	      return null !== b ? (a.stateNode = b, !0) : !1;

	    case 6:
	      return b = "" === a.pendingProps || 3 !== b.nodeType ? null : b, null !== b ? (a.stateNode = b, !0) : !1;

	    case 13:
	      return !1;

	    default:
	      return !1;
	  }
	}

	function Uh(a) {
	  if (Qh) {
	    var b = Ph;

	    if (b) {
	      var c = b;

	      if (!Th(a, b)) {
	        b = je(c.nextSibling);

	        if (!b || !Th(a, b)) {
	          a.effectTag = a.effectTag & ~Ac | E$1;
	          Qh = !1;
	          Oh = a;
	          return;
	        }

	        Rh(Oh, c);
	      }

	      Oh = a;
	      Ph = je(b.firstChild);
	    } else a.effectTag = a.effectTag & ~Ac | E$1, Qh = !1, Oh = a;
	  }
	}

	function Vh(a) {
	  for (a = a["return"]; null !== a && 5 !== a.tag && 3 !== a.tag && 13 !== a.tag;) {
	    a = a["return"];
	  }

	  Oh = a;
	}

	function Wh(a) {
	  if (a !== Oh) return !1;
	  if (!Qh) return Vh(a), Qh = !0, !1;
	  var b = a.type;
	  if (5 !== a.tag || "head" !== b && "body" !== b && !ge(b, a.memoizedProps)) for (b = Ph; b;) {
	    Rh(a, b), b = je(b.nextSibling);
	  }
	  Vh(a);
	  if (13 === a.tag) {
	    if (a = a.memoizedState, a = null !== a ? a.dehydrated : null, null === a) a = Ph;else a: {
	      a = a.nextSibling;

	      for (b = 0; a;) {
	        if (8 === a.nodeType) {
	          var c = a.data;

	          if (c === ae) {
	            if (0 === b) {
	              a = je(a.nextSibling);
	              break a;
	            }

	            b--;
	          } else c !== $d && c !== ce && c !== be || b++;
	        }

	        a = a.nextSibling;
	      }

	      a = null;
	    }
	  } else a = Oh ? je(a.stateNode.nextSibling) : null;
	  Ph = a;
	  return !0;
	}

	function Xh() {
	  Ph = Oh = null;
	  Qh = !1;
	}

	var Yh = Da.ReactCurrentOwner,
	    mg = !1;

	function R$1(a, b, c, d) {
	  b.child = null === a ? Xg(b, null, c, d) : Wg(b, a.child, c, d);
	}

	function Zh(a, b, c, d, e) {
	  c = c.render;
	  var f = b.ref;
	  lg(b, e);
	  d = wh(a, b, c, d, f, e);
	  if (null !== a && !mg) return b.updateQueue = a.updateQueue, b.effectTag &= -517, a.expirationTime <= e && (a.expirationTime = 0), $h(a, b, e);
	  b.effectTag |= 1;
	  R$1(a, b, d, e);
	  return b.child;
	}

	function ai(a, b, c, d, e, f) {
	  if (null === a) {
	    var g = c.type;
	    if ("function" === typeof g && !bi(g) && void 0 === g.defaultProps && null === c.compare && void 0 === c.defaultProps) return b.tag = 15, b.type = g, ci(a, b, g, d, e, f);
	    a = Tg(c.type, null, d, null, b.mode, f);
	    a.ref = b.ref;
	    a["return"] = b;
	    return b.child = a;
	  }

	  g = a.child;
	  if (e < f && (e = g.memoizedProps, c = c.compare, c = null !== c ? c : hf, c(e, d) && a.ref === b.ref)) return $h(a, b, f);
	  b.effectTag |= 1;
	  a = Rg(g, d, f);
	  a.ref = b.ref;
	  a["return"] = b;
	  return b.child = a;
	}

	function ci(a, b, c, d, e, f) {
	  return null !== a && hf(a.memoizedProps, d) && a.ref === b.ref && (mg = !1, e < f) ? $h(a, b, f) : di(a, b, c, d, f);
	}

	function ei(a, b) {
	  var c = b.ref;
	  if (null === a && null !== c || null !== a && a.ref !== c) b.effectTag |= 128;
	}

	function di(a, b, c, d, e) {
	  var f = N$1(c) ? uf : J$1.current;
	  f = vf(b, f);
	  lg(b, e);
	  c = wh(a, b, c, d, f, e);
	  if (null !== a && !mg) return b.updateQueue = a.updateQueue, b.effectTag &= -517, a.expirationTime <= e && (a.expirationTime = 0), $h(a, b, e);
	  b.effectTag |= 1;
	  R$1(a, b, c, e);
	  return b.child;
	}

	function fi(a, b, c, d, e) {
	  if (N$1(c)) {
	    var f = !0;
	    Bf(b);
	  } else f = !1;

	  lg(b, e);
	  if (null === b.stateNode) null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= E$1), Kg(b, c, d, e), Mg(b, c, d, e), d = !0;else if (null === a) {
	    var g = b.stateNode,
	        h = b.memoizedProps;
	    g.props = h;
	    var k = g.context,
	        l = c.contextType;
	    "object" === _typeof_1(l) && null !== l ? l = ng(l) : (l = N$1(c) ? uf : J$1.current, l = vf(b, l));
	    var m = c.getDerivedStateFromProps,
	        A = "function" === typeof m || "function" === typeof g.getSnapshotBeforeUpdate;
	    A || "function" !== typeof g.UNSAFE_componentWillReceiveProps && "function" !== typeof g.componentWillReceiveProps || (h !== d || k !== l) && Lg(b, g, d, l);
	    og = !1;
	    var w = b.memoizedState;
	    k = g.state = w;
	    var L = b.updateQueue;
	    null !== L && (xg(b, L, d, g, e), k = b.memoizedState);
	    h !== d || w !== k || K$1.current || og ? ("function" === typeof m && (Eg(b, c, m, d), k = b.memoizedState), (h = og || Jg(b, c, h, d, w, k, l)) ? (A || "function" !== typeof g.UNSAFE_componentWillMount && "function" !== typeof g.componentWillMount || ("function" === typeof g.componentWillMount && g.componentWillMount(), "function" === typeof g.UNSAFE_componentWillMount && g.UNSAFE_componentWillMount()), "function" === typeof g.componentDidMount && (b.effectTag |= 4)) : ("function" === typeof g.componentDidMount && (b.effectTag |= 4), b.memoizedProps = d, b.memoizedState = k), g.props = d, g.state = k, g.context = l, d = h) : ("function" === typeof g.componentDidMount && (b.effectTag |= 4), d = !1);
	  } else g = b.stateNode, h = b.memoizedProps, g.props = b.type === b.elementType ? h : cg(b.type, h), k = g.context, l = c.contextType, "object" === _typeof_1(l) && null !== l ? l = ng(l) : (l = N$1(c) ? uf : J$1.current, l = vf(b, l)), m = c.getDerivedStateFromProps, (A = "function" === typeof m || "function" === typeof g.getSnapshotBeforeUpdate) || "function" !== typeof g.UNSAFE_componentWillReceiveProps && "function" !== typeof g.componentWillReceiveProps || (h !== d || k !== l) && Lg(b, g, d, l), og = !1, k = b.memoizedState, w = g.state = k, L = b.updateQueue, null !== L && (xg(b, L, d, g, e), w = b.memoizedState), h !== d || k !== w || K$1.current || og ? ("function" === typeof m && (Eg(b, c, m, d), w = b.memoizedState), (m = og || Jg(b, c, h, d, k, w, l)) ? (A || "function" !== typeof g.UNSAFE_componentWillUpdate && "function" !== typeof g.componentWillUpdate || ("function" === typeof g.componentWillUpdate && g.componentWillUpdate(d, w, l), "function" === typeof g.UNSAFE_componentWillUpdate && g.UNSAFE_componentWillUpdate(d, w, l)), "function" === typeof g.componentDidUpdate && (b.effectTag |= 4), "function" === typeof g.getSnapshotBeforeUpdate && (b.effectTag |= 256)) : ("function" !== typeof g.componentDidUpdate || h === a.memoizedProps && k === a.memoizedState || (b.effectTag |= 4), "function" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && k === a.memoizedState || (b.effectTag |= 256), b.memoizedProps = d, b.memoizedState = w), g.props = d, g.state = w, g.context = l, d = m) : ("function" !== typeof g.componentDidUpdate || h === a.memoizedProps && k === a.memoizedState || (b.effectTag |= 4), "function" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && k === a.memoizedState || (b.effectTag |= 256), d = !1);
	  return gi(a, b, c, d, f, e);
	}

	function gi(a, b, c, d, e, f) {
	  ei(a, b);
	  var g = (b.effectTag & 64) !== D$1;
	  if (!d && !g) return e && Cf(b, c, !1), $h(a, b, f);
	  d = b.stateNode;
	  Yh.current = b;
	  var h = g && "function" !== typeof c.getDerivedStateFromError ? null : d.render();
	  b.effectTag |= 1;
	  null !== a && g ? (b.child = Wg(b, a.child, null, f), b.child = Wg(b, null, h, f)) : R$1(a, b, h, f);
	  b.memoizedState = d.state;
	  e && Cf(b, c, !0);
	  return b.child;
	}

	function hi(a) {
	  var b = a.stateNode;
	  b.pendingContext ? zf(a, b.pendingContext, b.pendingContext !== b.context) : b.context && zf(a, b.context, !1);
	  ch(a, b.containerInfo);
	}

	var ii = {
	  dehydrated: null,
	  retryTime: 1
	};

	function ji(a, b, c) {
	  var d = b.mode,
	      e = b.pendingProps,
	      f = O$1.current,
	      g = !1,
	      h;
	  (h = (b.effectTag & 64) !== D$1) || (h = 0 !== (f & 2) && (null === a || null !== a.memoizedState));
	  h ? (g = !0, b.effectTag &= -65) : null !== a && null === a.memoizedState || void 0 === e.fallback || !0 === e.unstable_avoidThisFallback || (f |= 1);
	  I$1(O$1, f & 1, b);

	  if (null === a) {
	    if (g) {
	      g = e.fallback;
	      e = Vg(null, d, 0, null);
	      e["return"] = b;
	      if (0 === (b.mode & 2)) for (a = null !== b.memoizedState ? b.child.child : b.child, e.child = a; null !== a;) {
	        a["return"] = e, a = a.sibling;
	      }
	      c = Vg(g, d, c, null);
	      c["return"] = b;
	      e.sibling = c;
	      b.memoizedState = ii;
	      b.child = e;
	      return c;
	    }

	    d = e.children;
	    b.memoizedState = null;
	    return b.child = Xg(b, null, d, c);
	  }

	  if (null !== a.memoizedState) {
	    a = a.child;
	    d = a.sibling;

	    if (g) {
	      e = e.fallback;
	      c = Rg(a, a.pendingProps, 0);
	      c["return"] = b;
	      if (0 === (b.mode & 2) && (g = null !== b.memoizedState ? b.child.child : b.child, g !== a.child)) for (c.child = g; null !== g;) {
	        g["return"] = c, g = g.sibling;
	      }
	      d = Rg(d, e, d.expirationTime);
	      d["return"] = b;
	      c.sibling = d;
	      c.childExpirationTime = 0;
	      b.memoizedState = ii;
	      b.child = c;
	      return d;
	    }

	    c = Wg(b, a.child, e.children, c);
	    b.memoizedState = null;
	    return b.child = c;
	  }

	  a = a.child;

	  if (g) {
	    g = e.fallback;
	    e = Vg(null, d, 0, null);
	    e["return"] = b;
	    e.child = a;
	    null !== a && (a["return"] = e);
	    if (0 === (b.mode & 2)) for (a = null !== b.memoizedState ? b.child.child : b.child, e.child = a; null !== a;) {
	      a["return"] = e, a = a.sibling;
	    }
	    c = Vg(g, d, c, null);
	    c["return"] = b;
	    e.sibling = c;
	    c.effectTag |= E$1;
	    e.childExpirationTime = 0;
	    b.memoizedState = ii;
	    b.child = e;
	    return c;
	  }

	  b.memoizedState = null;
	  return b.child = Wg(b, a, e.children, c);
	}

	function ki(a, b, c, d, e) {
	  var f = a.memoizedState;
	  null === f ? a.memoizedState = {
	    isBackwards: b,
	    rendering: null,
	    last: d,
	    tail: c,
	    tailExpiration: 0,
	    tailMode: e
	  } : (f.isBackwards = b, f.rendering = null, f.last = d, f.tail = c, f.tailExpiration = 0, f.tailMode = e);
	}

	function li(a, b, c) {
	  var d = b.pendingProps,
	      e = d.revealOrder,
	      f = d.tail;
	  R$1(a, b, d.children, c);
	  d = O$1.current;
	  if (0 !== (d & 2)) d = d & 1 | 2, b.effectTag |= 64;else {
	    if (null !== a && (a.effectTag & 64) !== D$1) a: for (a = b.child; null !== a;) {
	      if (13 === a.tag) {
	        if (null !== a.memoizedState) {
	          a.expirationTime < c && (a.expirationTime = c);
	          var g = a.alternate;
	          null !== g && g.expirationTime < c && (g.expirationTime = c);
	          kg(a["return"], c);
	        }
	      } else if (null !== a.child) {
	        a.child["return"] = a;
	        a = a.child;
	        continue;
	      }

	      if (a === b) break a;

	      for (; null === a.sibling;) {
	        if (null === a["return"] || a["return"] === b) break a;
	        a = a["return"];
	      }

	      a.sibling["return"] = a["return"];
	      a = a.sibling;
	    }
	    d &= 1;
	  }
	  I$1(O$1, d, b);
	  if (0 === (b.mode & 2)) b.memoizedState = null;else switch (e) {
	    case "forwards":
	      c = b.child;

	      for (e = null; null !== c;) {
	        d = c.alternate, null !== d && null === gh(d) && (e = c), c = c.sibling;
	      }

	      c = e;
	      null === c ? (e = b.child, b.child = null) : (e = c.sibling, c.sibling = null);
	      ki(b, !1, e, c, f);
	      break;

	    case "backwards":
	      c = null;
	      e = b.child;

	      for (b.child = null; null !== e;) {
	        d = e.alternate;

	        if (null !== d && null === gh(d)) {
	          b.child = e;
	          break;
	        }

	        d = e.sibling;
	        e.sibling = c;
	        c = e;
	        e = d;
	      }

	      ki(b, !0, c, null, f);
	      break;

	    case "together":
	      ki(b, !1, null, null, void 0);
	      break;

	    default:
	      b.memoizedState = null;
	  }
	  return b.child;
	}

	function $h(a, b, c) {
	  null !== a && (b.dependencies = a.dependencies);
	  var d = b.expirationTime;
	  0 !== d && zg(d);
	  if (b.childExpirationTime < c) return null;
	  if (null !== a && b.child !== a.child) throw t$1(Error(153));

	  if (null !== b.child) {
	    a = b.child;
	    c = Rg(a, a.pendingProps, a.expirationTime);
	    b.child = c;

	    for (c["return"] = b; null !== a.sibling;) {
	      a = a.sibling, c = c.sibling = Rg(a, a.pendingProps, a.expirationTime), c["return"] = b;
	    }

	    c.sibling = null;
	  }

	  return b.child;
	}

	function mi(a) {
	  a.effectTag |= 4;
	}

	var ni, oi, pi, qi;

	ni = function ni(a, b) {
	  for (var c = b.child; null !== c;) {
	    if (5 === c.tag || 6 === c.tag) a.appendChild(c.stateNode);else if (4 !== c.tag && null !== c.child) {
	      c.child["return"] = c;
	      c = c.child;
	      continue;
	    }
	    if (c === b) break;

	    for (; null === c.sibling;) {
	      if (null === c["return"] || c["return"] === b) return;
	      c = c["return"];
	    }

	    c.sibling["return"] = c["return"];
	    c = c.sibling;
	  }
	};

	oi = function oi() {};

	pi = function pi(a, b, c, d, e) {
	  var f = a.memoizedProps;

	  if (f !== d) {
	    var g = b.stateNode;
	    bh(Zg.current);
	    a = null;

	    switch (c) {
	      case "input":
	        f = Ab(g, f);
	        d = Ab(g, d);
	        a = [];
	        break;

	      case "option":
	        f = Ib(g, f);
	        d = Ib(g, d);
	        a = [];
	        break;

	      case "select":
	        f = objectAssign({}, f, {
	          value: void 0
	        });
	        d = objectAssign({}, d, {
	          value: void 0
	        });
	        a = [];
	        break;

	      case "textarea":
	        f = Kb(g, f);
	        d = Kb(g, d);
	        a = [];
	        break;

	      default:
	        "function" !== typeof f.onClick && "function" === typeof d.onClick && (g.onclick = Td);
	    }

	    Qd(c, d);
	    var h, k;
	    c = null;

	    for (h in f) {
	      if (!d.hasOwnProperty(h) && f.hasOwnProperty(h) && null != f[h]) if ("style" === h) for (k in g = f[h], g) {
	        g.hasOwnProperty(k) && (c || (c = {}), c[k] = "");
	      } else "dangerouslySetInnerHTML" !== h && "children" !== h && "suppressContentEditableWarning" !== h && "suppressHydrationWarning" !== h && "autoFocus" !== h && (ia.hasOwnProperty(h) ? a || (a = []) : (a = a || []).push(h, null));
	    }

	    for (h in d) {
	      var l = d[h];
	      g = null != f ? f[h] : void 0;
	      if (d.hasOwnProperty(h) && l !== g && (null != l || null != g)) if ("style" === h) {
	        if (g) {
	          for (k in g) {
	            !g.hasOwnProperty(k) || l && l.hasOwnProperty(k) || (c || (c = {}), c[k] = "");
	          }

	          for (k in l) {
	            l.hasOwnProperty(k) && g[k] !== l[k] && (c || (c = {}), c[k] = l[k]);
	          }
	        } else c || (a || (a = []), a.push(h, c)), c = l;
	      } else "dangerouslySetInnerHTML" === h ? (l = l ? l.__html : void 0, g = g ? g.__html : void 0, null != l && g !== l && (a = a || []).push(h, "" + l)) : "children" === h ? g === l || "string" !== typeof l && "number" !== typeof l || (a = a || []).push(h, "" + l) : "suppressContentEditableWarning" !== h && "suppressHydrationWarning" !== h && (ia.hasOwnProperty(h) ? (null != l && Sd(e, h), a || g === l || (a = [])) : (a = a || []).push(h, l));
	    }

	    c && (a = a || []).push("style", c);
	    e = a;
	    (b.updateQueue = e) && mi(b);
	  }
	};

	qi = function qi(a, b, c, d) {
	  c !== d && mi(b);
	};

	function ri(a, b) {
	  switch (a.tailMode) {
	    case "hidden":
	      b = a.tail;

	      for (var c = null; null !== b;) {
	        null !== b.alternate && (c = b), b = b.sibling;
	      }

	      null === c ? a.tail = null : c.sibling = null;
	      break;

	    case "collapsed":
	      c = a.tail;

	      for (var d = null; null !== c;) {
	        null !== c.alternate && (d = c), c = c.sibling;
	      }

	      null === d ? b || null === a.tail ? a.tail = null : a.tail.sibling = null : d.sibling = null;
	  }
	}

	function si(a) {
	  switch (a.tag) {
	    case 1:
	      N$1(a.type) && wf(a);
	      var b = a.effectTag;
	      return b & 4096 ? (a.effectTag = b & -4097 | 64, a) : null;

	    case 3:
	      dh(a);
	      xf(a);
	      b = a.effectTag;
	      if ((b & 64) !== D$1) throw t$1(Error(285));
	      a.effectTag = b & -4097 | 64;
	      return a;

	    case 5:
	      return fh(a), null;

	    case 13:
	      return H$1(O$1, a), b = a.effectTag, b & 4096 ? (a.effectTag = b & -4097 | 64, a) : null;

	    case 19:
	      return H$1(O$1, a), null;

	    case 4:
	      return dh(a), null;

	    case 10:
	      return jg(a), null;

	    default:
	      return null;
	  }
	}

	function ti(a, b) {
	  return {
	    value: a,
	    source: b,
	    stack: Wa(b)
	  };
	}

	var ui = "function" === typeof WeakSet ? WeakSet : Set;

	function vi(a, b) {
	  var c = b.source,
	      d = b.stack;
	  null === d && null !== c && (d = Wa(c));
	  null !== c && Va(c.type);
	  b = b.value;
	  null !== a && 1 === a.tag && Va(a.type);

	  try {
	    console.error(b);
	  } catch (e) {
	    setTimeout(function () {
	      throw e;
	    });
	  }
	}

	function wi(a, b) {
	  try {
	    b.props = a.memoizedProps, b.state = a.memoizedState, b.componentWillUnmount();
	  } catch (c) {
	    xi(a, c);
	  }
	}

	function yi(a) {
	  var b = a.ref;
	  if (null !== b) if ("function" === typeof b) try {
	    b(null);
	  } catch (c) {
	    xi(a, c);
	  } else b.current = null;
	}

	function Di(a, b) {
	  switch (b.tag) {
	    case 0:
	    case 11:
	    case 15:
	      Ei(2, 0, b);
	      break;

	    case 1:
	      if (b.effectTag & 256 && null !== a) {
	        var c = a.memoizedProps,
	            d = a.memoizedState;
	        a = b.stateNode;
	        b = a.getSnapshotBeforeUpdate(b.elementType === b.type ? c : cg(b.type, c), d);
	        a.__reactInternalSnapshotBeforeUpdate = b;
	      }

	      break;

	    case 3:
	    case 5:
	    case 6:
	    case 4:
	    case 17:
	      break;

	    default:
	      throw t$1(Error(163));
	  }
	}

	function Ei(a, b, c) {
	  c = c.updateQueue;
	  c = null !== c ? c.lastEffect : null;

	  if (null !== c) {
	    var d = c = c.next;

	    do {
	      if (0 !== (d.tag & a)) {
	        var e = d.destroy;
	        d.destroy = void 0;
	        void 0 !== e && e();
	      }

	      0 !== (d.tag & b) && (e = d.create, d.destroy = e());
	      d = d.next;
	    } while (d !== c);
	  }
	}

	function Fi(a, b, c) {
	  "function" === typeof Gi && Gi(b);

	  switch (b.tag) {
	    case 0:
	    case 11:
	    case 14:
	    case 15:
	      a = b.updateQueue;

	      if (null !== a && (a = a.lastEffect, null !== a)) {
	        var d = a.next;
	        Yf(97 < c ? 97 : c, function () {
	          var a = d;

	          do {
	            var c = a.destroy;

	            if (void 0 !== c) {
	              var g = b;

	              try {
	                c();
	              } catch (h) {
	                xi(g, h);
	              }
	            }

	            a = a.next;
	          } while (a !== d);
	        });
	      }

	      break;

	    case 1:
	      yi(b);
	      c = b.stateNode;
	      "function" === typeof c.componentWillUnmount && wi(b, c);
	      break;

	    case 5:
	      yi(b);
	      break;

	    case 4:
	      Hi(a, b, c);
	  }
	}

	function Ii(a) {
	  var b = a.alternate;
	  a["return"] = null;
	  a.child = null;
	  a.memoizedState = null;
	  a.updateQueue = null;
	  a.dependencies = null;
	  a.alternate = null;
	  a.firstEffect = null;
	  a.lastEffect = null;
	  a.pendingProps = null;
	  a.memoizedProps = null;
	  null !== b && Ii(b);
	}

	function Ji(a) {
	  return 5 === a.tag || 3 === a.tag || 4 === a.tag;
	}

	function Ki(a) {
	  a: {
	    for (var b = a["return"]; null !== b;) {
	      if (Ji(b)) {
	        var c = b;
	        break a;
	      }

	      b = b["return"];
	    }

	    throw t$1(Error(160));
	  }

	  b = c.stateNode;

	  switch (c.tag) {
	    case 5:
	      var d = !1;
	      break;

	    case 3:
	      b = b.containerInfo;
	      d = !0;
	      break;

	    case 4:
	      b = b.containerInfo;
	      d = !0;
	      break;

	    default:
	      throw t$1(Error(161));
	  }

	  c.effectTag & 16 && (Tb(b, ""), c.effectTag &= -17);

	  a: b: for (c = a;;) {
	    for (; null === c.sibling;) {
	      if (null === c["return"] || Ji(c["return"])) {
	        c = null;
	        break a;
	      }

	      c = c["return"];
	    }

	    c.sibling["return"] = c["return"];

	    for (c = c.sibling; 5 !== c.tag && 6 !== c.tag && 18 !== c.tag;) {
	      if (c.effectTag & E$1) continue b;
	      if (null === c.child || 4 === c.tag) continue b;else c.child["return"] = c, c = c.child;
	    }

	    if (!(c.effectTag & E$1)) {
	      c = c.stateNode;
	      break a;
	    }
	  }

	  for (var e = a;;) {
	    var f = 5 === e.tag || 6 === e.tag;

	    if (f) {
	      var g = f ? e.stateNode : e.stateNode.instance;
	      if (c) {
	        if (d) {
	          f = b;
	          var h = g;
	          g = c;
	          8 === f.nodeType ? f.parentNode.insertBefore(h, g) : f.insertBefore(h, g);
	        } else b.insertBefore(g, c);
	      } else d ? (h = b, 8 === h.nodeType ? (f = h.parentNode, f.insertBefore(g, h)) : (f = h, f.appendChild(g)), h = h._reactRootContainer, null !== h && void 0 !== h || null !== f.onclick || (f.onclick = Td)) : b.appendChild(g);
	    } else if (4 !== e.tag && null !== e.child) {
	      e.child["return"] = e;
	      e = e.child;
	      continue;
	    }

	    if (e === a) break;

	    for (; null === e.sibling;) {
	      if (null === e["return"] || e["return"] === a) return;
	      e = e["return"];
	    }

	    e.sibling["return"] = e["return"];
	    e = e.sibling;
	  }
	}

	function Hi(a, b, c) {
	  for (var d = b, e = !1, f, g;;) {
	    if (!e) {
	      e = d["return"];

	      a: for (;;) {
	        if (null === e) throw t$1(Error(160));
	        f = e.stateNode;

	        switch (e.tag) {
	          case 5:
	            g = !1;
	            break a;

	          case 3:
	            f = f.containerInfo;
	            g = !0;
	            break a;

	          case 4:
	            f = f.containerInfo;
	            g = !0;
	            break a;
	        }

	        e = e["return"];
	      }

	      e = !0;
	    }

	    if (5 === d.tag || 6 === d.tag) {
	      a: for (var h = a, k = d, l = c, m = k;;) {
	        if (Fi(h, m, l), null !== m.child && 4 !== m.tag) m.child["return"] = m, m = m.child;else {
	          if (m === k) break;

	          for (; null === m.sibling;) {
	            if (null === m["return"] || m["return"] === k) break a;
	            m = m["return"];
	          }

	          m.sibling["return"] = m["return"];
	          m = m.sibling;
	        }
	      }

	      g ? (h = f, k = d.stateNode, 8 === h.nodeType ? h.parentNode.removeChild(k) : h.removeChild(k)) : f.removeChild(d.stateNode);
	    } else if (4 === d.tag) {
	      if (null !== d.child) {
	        f = d.stateNode.containerInfo;
	        g = !0;
	        d.child["return"] = d;
	        d = d.child;
	        continue;
	      }
	    } else if (Fi(a, d, c), null !== d.child) {
	      d.child["return"] = d;
	      d = d.child;
	      continue;
	    }

	    if (d === b) break;

	    for (; null === d.sibling;) {
	      if (null === d["return"] || d["return"] === b) return;
	      d = d["return"];
	      4 === d.tag && (e = !1);
	    }

	    d.sibling["return"] = d["return"];
	    d = d.sibling;
	  }
	}

	function Li(a, b) {
	  switch (b.tag) {
	    case 0:
	    case 11:
	    case 14:
	    case 15:
	      Ei(4, 8, b);
	      break;

	    case 1:
	      break;

	    case 5:
	      var c = b.stateNode;

	      if (null != c) {
	        var d = b.memoizedProps,
	            e = null !== a ? a.memoizedProps : d;
	        a = b.type;
	        var f = b.updateQueue;
	        b.updateQueue = null;

	        if (null !== f) {
	          c[ne] = d;
	          "input" === a && "radio" === d.type && null != d.name && Cb(c, d);
	          Rd(a, e);
	          b = Rd(a, d);

	          for (e = 0; e < f.length; e += 2) {
	            var g = f[e],
	                h = f[e + 1];
	            "style" === g ? Od(c, h) : "dangerouslySetInnerHTML" === g ? Sb(c, h) : "children" === g ? Tb(c, h) : ub(c, g, h, b);
	          }

	          switch (a) {
	            case "input":
	              Db(c, d);
	              break;

	            case "textarea":
	              Mb(c, d);
	              break;

	            case "select":
	              b = c._wrapperState.wasMultiple, c._wrapperState.wasMultiple = !!d.multiple, a = d.value, null != a ? Jb(c, !!d.multiple, a, !1) : b !== !!d.multiple && (null != d.defaultValue ? Jb(c, !!d.multiple, d.defaultValue, !0) : Jb(c, !!d.multiple, d.multiple ? [] : "", !1));
	          }
	        }
	      }

	      break;

	    case 6:
	      if (null === b.stateNode) throw t$1(Error(162));
	      b.stateNode.nodeValue = b.memoizedProps;
	      break;

	    case 3:
	      b = b.stateNode;
	      b.hydrate && (b.hydrate = !1, zc(b.containerInfo));
	      break;

	    case 12:
	      break;

	    case 13:
	      c = b;
	      null === b.memoizedState ? d = !1 : (d = !0, c = b.child, Mi = Vf());
	      if (null !== c) a: for (a = c;;) {
	        if (5 === a.tag) f = a.stateNode, d ? (f = f.style, "function" === typeof f.setProperty ? f.setProperty("display", "none", "important") : f.display = "none") : (f = a.stateNode, e = a.memoizedProps.style, e = void 0 !== e && null !== e && e.hasOwnProperty("display") ? e.display : null, f.style.display = Nd("display", e));else if (6 === a.tag) a.stateNode.nodeValue = d ? "" : a.memoizedProps;else if (13 === a.tag && null !== a.memoizedState && null === a.memoizedState.dehydrated) {
	          f = a.child.sibling;
	          f["return"] = a;
	          a = f;
	          continue;
	        } else if (null !== a.child) {
	          a.child["return"] = a;
	          a = a.child;
	          continue;
	        }
	        if (a === c) break a;

	        for (; null === a.sibling;) {
	          if (null === a["return"] || a["return"] === c) break a;
	          a = a["return"];
	        }

	        a.sibling["return"] = a["return"];
	        a = a.sibling;
	      }
	      Ni(b);
	      break;

	    case 19:
	      Ni(b);
	      break;

	    case 17:
	      break;

	    case 20:
	      break;

	    case 21:
	      break;

	    default:
	      throw t$1(Error(163));
	  }
	}

	function Ni(a) {
	  var b = a.updateQueue;

	  if (null !== b) {
	    a.updateQueue = null;
	    var c = a.stateNode;
	    null === c && (c = a.stateNode = new ui());
	    b.forEach(function (b) {
	      var d = Oi.bind(null, a, b);
	      c.has(b) || (c.add(b), b.then(d, d));
	    });
	  }
	}

	var Pi = "function" === typeof WeakMap ? WeakMap : Map;

	function Qi(a, b, c) {
	  c = rg(c, null);
	  c.tag = 3;
	  c.payload = {
	    element: null
	  };
	  var d = b.value;

	  c.callback = function () {
	    Ri || (Ri = !0, Si = d);
	    vi(a, b);
	  };

	  return c;
	}

	function Ti(a, b, c) {
	  c = rg(c, null);
	  c.tag = 3;
	  var d = a.type.getDerivedStateFromError;

	  if ("function" === typeof d) {
	    var e = b.value;

	    c.payload = function () {
	      vi(a, b);
	      return d(e);
	    };
	  }

	  var f = a.stateNode;
	  null !== f && "function" === typeof f.componentDidCatch && (c.callback = function () {
	    "function" !== typeof d && (null === Ui ? Ui = new Set([this]) : Ui.add(this), vi(a, b));
	    var c = b.stack;
	    this.componentDidCatch(b.value, {
	      componentStack: null !== c ? c : ""
	    });
	  });
	  return c;
	}

	var Vi = Math.ceil,
	    Wi = Da.ReactCurrentDispatcher,
	    Xi = Da.ReactCurrentOwner,
	    S$1 = 0,
	    Yi = 8,
	    Zi = 16,
	    $i = 32,
	    aj = 0,
	    bj = 1,
	    cj = 2,
	    dj = 3,
	    ej = 4,
	    fj = 5,
	    gj = 6,
	    T$1 = S$1,
	    U$1 = null,
	    V$1 = null,
	    W$1 = 0,
	    X$1 = aj,
	    hj = null,
	    ij = 1073741823,
	    jj = 1073741823,
	    kj = null,
	    lj = 0,
	    mj = !1,
	    Mi = 0,
	    nj = 500,
	    Y$1 = null,
	    Ri = !1,
	    Si = null,
	    Ui = null,
	    oj = !1,
	    pj = null,
	    qj = 90,
	    rj = null,
	    sj = 0,
	    tj = null,
	    uj = 0;

	function Fg() {
	  return (T$1 & (Zi | $i)) !== S$1 ? 1073741821 - (Vf() / 10 | 0) : 0 !== uj ? uj : uj = 1073741821 - (Vf() / 10 | 0);
	}

	function Gg(a, b, c) {
	  b = b.mode;
	  if (0 === (b & 2)) return 1073741823;
	  var d = Wf();
	  if (0 === (b & 4)) return 99 === d ? 1073741823 : 1073741822;
	  if ((T$1 & Zi) !== S$1) return W$1;
	  if (null !== c) a = 1073741821 - 25 * (((1073741821 - a + (c.timeoutMs | 0 || 5E3) / 10) / 25 | 0) + 1);else switch (d) {
	    case 99:
	      a = 1073741823;
	      break;

	    case 98:
	      a = 1073741821 - 10 * (((1073741821 - a + 15) / 10 | 0) + 1);
	      break;

	    case 97:
	    case 96:
	      a = 1073741821 - 25 * (((1073741821 - a + 500) / 25 | 0) + 1);
	      break;

	    case 95:
	      a = 2;
	      break;

	    default:
	      throw t$1(Error(326));
	  }
	  null !== U$1 && a === W$1 && --a;
	  return a;
	}

	var vj = 0;

	function Hg(a, b) {
	  if (50 < sj) throw sj = 0, tj = null, t$1(Error(185));
	  a = wj(a, b);

	  if (null !== a) {
	    var c = Wf();
	    1073741823 === b ? (T$1 & Yi) !== S$1 && (T$1 & (Zi | $i)) === S$1 ? xj(a) : (Z$1(a), T$1 === S$1 && bg()) : Z$1(a);
	    (T$1 & 4) === S$1 || 98 !== c && 99 !== c || (null === rj ? rj = new Map([[a, b]]) : (c = rj.get(a), (void 0 === c || c > b) && rj.set(a, b)));
	  }
	}

	function wj(a, b) {
	  a.expirationTime < b && (a.expirationTime = b);
	  var c = a.alternate;
	  null !== c && c.expirationTime < b && (c.expirationTime = b);
	  var d = a["return"],
	      e = null;
	  if (null === d && 3 === a.tag) e = a.stateNode;else for (; null !== d;) {
	    c = d.alternate;
	    d.childExpirationTime < b && (d.childExpirationTime = b);
	    null !== c && c.childExpirationTime < b && (c.childExpirationTime = b);

	    if (null === d["return"] && 3 === d.tag) {
	      e = d.stateNode;
	      break;
	    }

	    d = d["return"];
	  }
	  null !== e && (U$1 === e && (zg(b), X$1 === ej && yj(e, W$1)), zj(e, b));
	  return e;
	}

	function Aj(a) {
	  var b = a.lastExpiredTime;
	  if (0 !== b) return b;
	  b = a.firstPendingTime;
	  if (!Bj(a, b)) return b;
	  b = a.lastPingedTime;
	  a = a.nextKnownPendingLevel;
	  return b > a ? b : a;
	}

	function Z$1(a) {
	  if (0 !== a.lastExpiredTime) a.callbackExpirationTime = 1073741823, a.callbackPriority = 99, a.callbackNode = $f(xj.bind(null, a));else {
	    var b = Aj(a),
	        c = a.callbackNode;
	    if (0 === b) null !== c && (a.callbackNode = null, a.callbackExpirationTime = 0, a.callbackPriority = 90);else {
	      var d = Fg();
	      1073741823 === b ? d = 99 : 1 === b || 2 === b ? d = 95 : (d = 10 * (1073741821 - b) - 10 * (1073741821 - d), d = 0 >= d ? 99 : 250 >= d ? 98 : 5250 >= d ? 97 : 95);

	      if (null !== c) {
	        var e = a.callbackPriority;
	        if (a.callbackExpirationTime === b && e >= d) return;
	        c !== Pf && Ff(c);
	      }

	      a.callbackExpirationTime = b;
	      a.callbackPriority = d;
	      b = 1073741823 === b ? $f(xj.bind(null, a)) : Zf(d, Cj.bind(null, a), {
	        timeout: 10 * (1073741821 - b) - Vf()
	      });
	      a.callbackNode = b;
	    }
	  }
	}

	function Cj(a, b) {
	  uj = 0;
	  if (b) return b = Fg(), Dj(a, b), Z$1(a), null;
	  var c = Aj(a);

	  if (0 !== c) {
	    b = a.callbackNode;
	    if ((T$1 & (Zi | $i)) !== S$1) throw t$1(Error(327));
	    Ej();
	    a === U$1 && c === W$1 || Fj(a, c);

	    if (null !== V$1) {
	      var d = T$1;
	      T$1 |= Zi;
	      var e = Gj(a);

	      do {
	        try {
	          Hj();
	          break;
	        } catch (h) {
	          Ij(a, h);
	        }
	      } while (1);

	      hg();
	      T$1 = d;
	      Wi.current = e;
	      if (X$1 === bj) throw b = hj, Fj(a, c), yj(a, c), Z$1(a), b;
	      if (null === V$1) switch (e = a.finishedWork = a.current.alternate, a.finishedExpirationTime = c, Jj(a, c), d = X$1, U$1 = null, d) {
	        case aj:
	        case bj:
	          throw t$1(Error(345));

	        case cj:
	          if (2 !== c) {
	            Dj(a, 2);
	            break;
	          }

	          Kj(a);
	          break;

	        case dj:
	          yj(a, c);
	          d = a.lastSuspendedTime;
	          c === d && (a.nextKnownPendingLevel = Lj(e));

	          if (1073741823 === ij && (e = Mi + nj - Vf(), 10 < e)) {
	            if (mj) {
	              var f = a.lastPingedTime;

	              if (0 === f || f >= c) {
	                a.lastPingedTime = c;
	                Fj(a, c);
	                break;
	              }
	            }

	            f = Aj(a);
	            if (0 !== f && f !== c) break;

	            if (0 !== d && d !== c) {
	              a.lastPingedTime = d;
	              break;
	            }

	            a.timeoutHandle = he(Kj.bind(null, a), e);
	            break;
	          }

	          Kj(a);
	          break;

	        case ej:
	          yj(a, c);
	          d = a.lastSuspendedTime;
	          c === d && (a.nextKnownPendingLevel = Lj(e));

	          if (mj && (e = a.lastPingedTime, 0 === e || e >= c)) {
	            a.lastPingedTime = c;
	            Fj(a, c);
	            break;
	          }

	          e = Aj(a);
	          if (0 !== e && e !== c) break;

	          if (0 !== d && d !== c) {
	            a.lastPingedTime = d;
	            break;
	          }

	          1073741823 !== jj ? d = 10 * (1073741821 - jj) - Vf() : 1073741823 === ij ? d = 0 : (d = 10 * (1073741821 - ij) - 5E3, e = Vf(), c = 10 * (1073741821 - c) - e, d = e - d, 0 > d && (d = 0), d = (120 > d ? 120 : 480 > d ? 480 : 1080 > d ? 1080 : 1920 > d ? 1920 : 3E3 > d ? 3E3 : 4320 > d ? 4320 : 1960 * Vi(d / 1960)) - d, c < d && (d = c));

	          if (10 < d) {
	            a.timeoutHandle = he(Kj.bind(null, a), d);
	            break;
	          }

	          Kj(a);
	          break;

	        case fj:
	          if (1073741823 !== ij && null !== kj) {
	            f = ij;
	            var g = kj;
	            d = g.busyMinDurationMs | 0;
	            0 >= d ? d = 0 : (e = g.busyDelayMs | 0, f = Vf() - (10 * (1073741821 - f) - (g.timeoutMs | 0 || 5E3)), d = f <= e ? 0 : e + d - f);

	            if (10 < d) {
	              yj(a, c);
	              a.timeoutHandle = he(Kj.bind(null, a), d);
	              break;
	            }
	          }

	          Kj(a);
	          break;

	        case gj:
	          yj(a, c);
	          break;

	        default:
	          throw t$1(Error(329));
	      }
	      Z$1(a);
	      if (a.callbackNode === b) return Cj.bind(null, a);
	    }
	  }

	  return null;
	}

	function xj(a) {
	  var b = a.lastExpiredTime;
	  b = 0 !== b ? b : 1073741823;
	  if (a.finishedExpirationTime === b) Kj(a);else {
	    if ((T$1 & (Zi | $i)) !== S$1) throw t$1(Error(327));
	    Ej();
	    a === U$1 && b === W$1 || Fj(a, b);

	    if (null !== V$1) {
	      var c = T$1;
	      T$1 |= Zi;
	      var d = Gj(a);

	      do {
	        try {
	          Mj();
	          break;
	        } catch (e) {
	          Ij(a, e);
	        }
	      } while (1);

	      hg();
	      T$1 = c;
	      Wi.current = d;
	      if (X$1 === bj) throw c = hj, Fj(a, b), yj(a, b), Z$1(a), c;
	      if (null !== V$1) throw t$1(Error(261));
	      a.finishedWork = a.current.alternate;
	      a.finishedExpirationTime = b;
	      Jj(a, b);
	      X$1 === gj ? yj(a, b) : (U$1 = null, Kj(a));
	      Z$1(a);
	    }
	  }
	  return null;
	}

	function Nj() {
	  (T$1 & (1 | Zi | $i)) === S$1 && (Oj(), Ej());
	}

	function Jj(a, b) {
	  var c = a.firstBatch;
	  null !== c && c._defer && c._expirationTime >= b && (Zf(97, function () {
	    c._onComplete();

	    return null;
	  }), X$1 = gj);
	}

	function Oj() {
	  if (null !== rj) {
	    var a = rj;
	    rj = null;
	    a.forEach(function (a, c) {
	      Dj(c, a);
	      Z$1(c);
	    });
	    bg();
	  }
	}

	function Pj(a, b) {
	  var c = T$1;
	  T$1 |= 1;

	  try {
	    return a(b);
	  } finally {
	    T$1 = c, T$1 === S$1 && bg();
	  }
	}

	function Qj(a, b, c, d) {
	  var e = T$1;
	  T$1 |= 4;

	  try {
	    return Yf(98, a.bind(null, b, c, d));
	  } finally {
	    T$1 = e, T$1 === S$1 && bg();
	  }
	}

	function Rj(a, b) {
	  var c = T$1;
	  T$1 &= -2;
	  T$1 |= Yi;

	  try {
	    return a(b);
	  } finally {
	    T$1 = c, T$1 === S$1 && bg();
	  }
	}

	function Fj(a, b) {
	  a.finishedWork = null;
	  a.finishedExpirationTime = 0;
	  var c = a.timeoutHandle;
	  -1 !== c && (a.timeoutHandle = -1, ie(c));
	  if (null !== V$1) for (c = V$1["return"]; null !== c;) {
	    var d = c;

	    switch (d.tag) {
	      case 1:
	        var e = d.type.childContextTypes;
	        null !== e && void 0 !== e && wf(d);
	        break;

	      case 3:
	        dh(d);
	        xf(d);
	        break;

	      case 5:
	        fh(d);
	        break;

	      case 4:
	        dh(d);
	        break;

	      case 13:
	        H$1(O$1, d);
	        break;

	      case 19:
	        H$1(O$1, d);
	        break;

	      case 10:
	        jg(d);
	    }

	    c = c["return"];
	  }
	  U$1 = a;
	  V$1 = Rg(a.current, null, b);
	  W$1 = b;
	  X$1 = aj;
	  hj = null;
	  jj = ij = 1073741823;
	  kj = null;
	  lj = 0;
	  mj = !1;
	}

	function Ij(a, b) {
	  do {
	    try {
	      hg();
	      Ah();
	      if (null === V$1 || null === V$1["return"]) return X$1 = bj, hj = b, null;

	      a: {
	        var c = a,
	            d = V$1["return"],
	            e = V$1,
	            f = b;
	        b = W$1;
	        e.effectTag |= 2048;
	        e.firstEffect = e.lastEffect = null;

	        if (null !== f && "object" === _typeof_1(f) && "function" === typeof f.then) {
	          var g = f,
	              h = 0 !== (O$1.current & 1),
	              k = d;

	          do {
	            var l;

	            if (l = 13 === k.tag) {
	              var m = k.memoizedState;
	              if (null !== m) l = null !== m.dehydrated ? !0 : !1;else {
	                var A = k.memoizedProps;
	                l = void 0 === A.fallback ? !1 : !0 !== A.unstable_avoidThisFallback ? !0 : h ? !1 : !0;
	              }
	            }

	            if (l) {
	              var w = k.updateQueue;

	              if (null === w) {
	                var L = new Set();
	                L.add(g);
	                k.updateQueue = L;
	              } else w.add(g);

	              if (0 === (k.mode & 2)) {
	                k.effectTag |= 64;
	                e.effectTag &= -2981;
	                if (1 === e.tag) if (null === e.alternate) e.tag = 17;else {
	                  var wb = rg(1073741823, null);
	                  wb.tag = 2;
	                  tg(e, wb);
	                }
	                e.expirationTime = 1073741823;
	                break a;
	              }

	              f = void 0;
	              e = b;
	              var M = c.pingCache;
	              null === M ? (M = c.pingCache = new Pi(), f = new Set(), M.set(g, f)) : (f = M.get(g), void 0 === f && (f = new Set(), M.set(g, f)));

	              if (!f.has(e)) {
	                f.add(e);
	                var q = Sj.bind(null, c, g, e);
	                g.then(q, q);
	              }

	              k.effectTag |= 4096;
	              k.expirationTime = b;
	              break a;
	            }

	            k = k["return"];
	          } while (null !== k);

	          f = Error((Va(e.type) || "A React component") + " suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display." + Wa(e));
	        }

	        X$1 !== fj && (X$1 = cj);
	        f = ti(f, e);
	        k = d;

	        do {
	          switch (k.tag) {
	            case 3:
	              g = f;
	              k.effectTag |= 4096;
	              k.expirationTime = b;
	              var y = Qi(k, g, b);
	              ug(k, y);
	              break a;

	            case 1:
	              g = f;
	              var z = k.type,
	                  p = k.stateNode;

	              if ((k.effectTag & 64) === D$1 && ("function" === typeof z.getDerivedStateFromError || null !== p && "function" === typeof p.componentDidCatch && (null === Ui || !Ui.has(p)))) {
	                k.effectTag |= 4096;
	                k.expirationTime = b;
	                var u = Ti(k, g, b);
	                ug(k, u);
	                break a;
	              }

	          }

	          k = k["return"];
	        } while (null !== k);
	      }

	      V$1 = Tj(V$1);
	    } catch (v) {
	      b = v;
	      continue;
	    }

	    break;
	  } while (1);
	}

	function Gj() {
	  var a = Wi.current;
	  Wi.current = zh;
	  return null === a ? zh : a;
	}

	function yg(a, b) {
	  a < ij && 2 < a && (ij = a);
	  null !== b && a < jj && 2 < a && (jj = a, kj = b);
	}

	function zg(a) {
	  a > lj && (lj = a);
	}

	function Mj() {
	  for (; null !== V$1;) {
	    V$1 = Uj(V$1);
	  }
	}

	function Hj() {
	  for (; null !== V$1 && !Gf();) {
	    V$1 = Uj(V$1);
	  }
	}

	function Uj(a) {
	  var b = Vj(a.alternate, a, W$1);
	  a.memoizedProps = a.pendingProps;
	  null === b && (b = Tj(a));
	  Xi.current = null;
	  return b;
	}

	function Tj(a) {
	  V$1 = a;

	  do {
	    var b = V$1.alternate;
	    a = V$1["return"];

	    if ((V$1.effectTag & 2048) === D$1) {
	      a: {
	        var c = b;
	        b = V$1;
	        var d = W$1,
	            e = b.pendingProps;

	        switch (b.tag) {
	          case 2:
	            break;

	          case 16:
	            break;

	          case 15:
	          case 0:
	            break;

	          case 1:
	            N$1(b.type) && wf(b);
	            break;

	          case 3:
	            dh(b);
	            xf(b);
	            d = b.stateNode;
	            d.pendingContext && (d.context = d.pendingContext, d.pendingContext = null);
	            (null === c || null === c.child) && Wh(b) && mi(b);
	            oi(b);
	            break;

	          case 5:
	            fh(b);
	            d = bh(ah.current);
	            var f = b.type;
	            if (null !== c && null != b.stateNode) pi(c, b, f, e, d), c.ref !== b.ref && (b.effectTag |= 128);else if (e) {
	              var g = bh(Zg.current);

	              if (Wh(b)) {
	                e = b;
	                f = void 0;
	                c = e.stateNode;
	                var h = e.type,
	                    k = e.memoizedProps;
	                c[me] = e;
	                c[ne] = k;

	                switch (h) {
	                  case "iframe":
	                  case "object":
	                  case "embed":
	                    G$1("load", c);
	                    break;

	                  case "video":
	                  case "audio":
	                    for (var l = 0; l < dc.length; l++) {
	                      G$1(dc[l], c);
	                    }

	                    break;

	                  case "source":
	                    G$1("error", c);
	                    break;

	                  case "img":
	                  case "image":
	                  case "link":
	                    G$1("error", c);
	                    G$1("load", c);
	                    break;

	                  case "form":
	                    G$1("reset", c);
	                    G$1("submit", c);
	                    break;

	                  case "details":
	                    G$1("toggle", c);
	                    break;

	                  case "input":
	                    Bb(c, k);
	                    G$1("invalid", c);
	                    Sd(d, "onChange");
	                    break;

	                  case "select":
	                    c._wrapperState = {
	                      wasMultiple: !!k.multiple
	                    };
	                    G$1("invalid", c);
	                    Sd(d, "onChange");
	                    break;

	                  case "textarea":
	                    Lb(c, k), G$1("invalid", c), Sd(d, "onChange");
	                }

	                Qd(h, k);
	                l = null;

	                for (f in k) {
	                  k.hasOwnProperty(f) && (g = k[f], "children" === f ? "string" === typeof g ? c.textContent !== g && (l = ["children", g]) : "number" === typeof g && c.textContent !== "" + g && (l = ["children", "" + g]) : ia.hasOwnProperty(f) && null != g && Sd(d, f));
	                }

	                switch (h) {
	                  case "input":
	                    yb(c);
	                    Gb(c, k, !0);
	                    break;

	                  case "textarea":
	                    yb(c);
	                    Nb(c, k);
	                    break;

	                  case "select":
	                  case "option":
	                    break;

	                  default:
	                    "function" === typeof k.onClick && (c.onclick = Td);
	                }

	                d = l;
	                e.updateQueue = d;
	                null !== d && mi(b);
	              } else {
	                k = f;
	                c = e;
	                h = b;
	                l = 9 === d.nodeType ? d : d.ownerDocument;
	                g === Ob.html && (g = Pb(k));
	                g === Ob.html ? "script" === k ? (k = l.createElement("div"), k.innerHTML = "<script>\x3c/script>", l = k.removeChild(k.firstChild)) : "string" === typeof c.is ? l = l.createElement(k, {
	                  is: c.is
	                }) : (l = l.createElement(k), "select" === k && (k = l, c.multiple ? k.multiple = !0 : c.size && (k.size = c.size))) : l = l.createElementNS(g, k);
	                k = l;
	                k[me] = h;
	                k[ne] = c;
	                c = k;
	                ni(c, b, !1, !1);
	                b.stateNode = c;
	                g = d;
	                var m = Rd(f, e);

	                switch (f) {
	                  case "iframe":
	                  case "object":
	                  case "embed":
	                    G$1("load", c);
	                    d = e;
	                    break;

	                  case "video":
	                  case "audio":
	                    for (d = 0; d < dc.length; d++) {
	                      G$1(dc[d], c);
	                    }

	                    d = e;
	                    break;

	                  case "source":
	                    G$1("error", c);
	                    d = e;
	                    break;

	                  case "img":
	                  case "image":
	                  case "link":
	                    G$1("error", c);
	                    G$1("load", c);
	                    d = e;
	                    break;

	                  case "form":
	                    G$1("reset", c);
	                    G$1("submit", c);
	                    d = e;
	                    break;

	                  case "details":
	                    G$1("toggle", c);
	                    d = e;
	                    break;

	                  case "input":
	                    Bb(c, e);
	                    d = Ab(c, e);
	                    G$1("invalid", c);
	                    Sd(g, "onChange");
	                    break;

	                  case "option":
	                    d = Ib(c, e);
	                    break;

	                  case "select":
	                    c._wrapperState = {
	                      wasMultiple: !!e.multiple
	                    };
	                    d = objectAssign({}, e, {
	                      value: void 0
	                    });
	                    G$1("invalid", c);
	                    Sd(g, "onChange");
	                    break;

	                  case "textarea":
	                    Lb(c, e);
	                    d = Kb(c, e);
	                    G$1("invalid", c);
	                    Sd(g, "onChange");
	                    break;

	                  default:
	                    d = e;
	                }

	                Qd(f, d);
	                h = void 0;
	                k = f;
	                l = c;
	                var A = d;

	                for (h in A) {
	                  if (A.hasOwnProperty(h)) {
	                    var w = A[h];
	                    "style" === h ? Od(l, w) : "dangerouslySetInnerHTML" === h ? (w = w ? w.__html : void 0, null != w && Sb(l, w)) : "children" === h ? "string" === typeof w ? ("textarea" !== k || "" !== w) && Tb(l, w) : "number" === typeof w && Tb(l, "" + w) : "suppressContentEditableWarning" !== h && "suppressHydrationWarning" !== h && "autoFocus" !== h && (ia.hasOwnProperty(h) ? null != w && Sd(g, h) : null != w && ub(l, h, w, m));
	                  }
	                }

	                switch (f) {
	                  case "input":
	                    yb(c);
	                    Gb(c, e, !1);
	                    break;

	                  case "textarea":
	                    yb(c);
	                    Nb(c, e);
	                    break;

	                  case "option":
	                    null != e.value && c.setAttribute("value", "" + tb(e.value));
	                    break;

	                  case "select":
	                    d = c;
	                    c = e;
	                    d.multiple = !!c.multiple;
	                    h = c.value;
	                    null != h ? Jb(d, !!c.multiple, h, !1) : null != c.defaultValue && Jb(d, !!c.multiple, c.defaultValue, !0);
	                    break;

	                  default:
	                    "function" === typeof d.onClick && (c.onclick = Td);
	                }

	                fe(f, e) && mi(b);
	              }

	              null !== b.ref && (b.effectTag |= 128);
	            } else if (null === b.stateNode) throw t$1(Error(166));
	            break;

	          case 6:
	            if (c && null != b.stateNode) qi(c, b, c.memoizedProps, e);else {
	              if ("string" !== typeof e && null === b.stateNode) throw t$1(Error(166));
	              f = bh(ah.current);
	              bh(Zg.current);
	              Wh(b) ? (d = b.stateNode, e = b.memoizedProps, d[me] = b, d.nodeValue !== e && mi(b)) : (d = b, e = (9 === f.nodeType ? f : f.ownerDocument).createTextNode(e), e[me] = b, d.stateNode = e);
	            }
	            break;

	          case 11:
	            break;

	          case 13:
	            H$1(O$1, b);
	            e = b.memoizedState;

	            if ((b.effectTag & 64) !== D$1) {
	              b.expirationTime = d;
	              break a;
	            }

	            d = null !== e;
	            e = !1;
	            null === c ? Wh(b) : (f = c.memoizedState, e = null !== f, d || null === f || (f = c.child.sibling, null !== f && (h = b.firstEffect, null !== h ? (b.firstEffect = f, f.nextEffect = h) : (b.firstEffect = b.lastEffect = f, f.nextEffect = null), f.effectTag = 8)));
	            if (d && !e && 0 !== (b.mode & 2)) if (null === c && !0 !== b.memoizedProps.unstable_avoidThisFallback || 0 !== (O$1.current & 1)) X$1 === aj && (X$1 = dj);else {
	              if (X$1 === aj || X$1 === dj) X$1 = ej;
	              0 !== lj && null !== U$1 && (yj(U$1, W$1), zj(U$1, lj));
	            }
	            if (d || e) b.effectTag |= 4;
	            break;

	          case 7:
	            break;

	          case 8:
	            break;

	          case 12:
	            break;

	          case 4:
	            dh(b);
	            oi(b);
	            break;

	          case 10:
	            jg(b);
	            break;

	          case 9:
	            break;

	          case 14:
	            break;

	          case 17:
	            N$1(b.type) && wf(b);
	            break;

	          case 19:
	            H$1(O$1, b);
	            e = b.memoizedState;
	            if (null === e) break;
	            f = (b.effectTag & 64) !== D$1;
	            h = e.rendering;
	            if (null === h) {
	              if (f) ri(e, !1);else {
	                if (X$1 !== aj || null !== c && (c.effectTag & 64) !== D$1) for (c = b.child; null !== c;) {
	                  h = gh(c);

	                  if (null !== h) {
	                    b.effectTag |= 64;
	                    ri(e, !1);
	                    e = h.updateQueue;
	                    null !== e && (b.updateQueue = e, b.effectTag |= 4);
	                    b.firstEffect = b.lastEffect = null;

	                    for (e = b.child; null !== e;) {
	                      f = e, c = d, f.effectTag &= E$1, f.nextEffect = null, f.firstEffect = null, f.lastEffect = null, h = f.alternate, null === h ? (f.childExpirationTime = 0, f.expirationTime = c, f.child = null, f.memoizedProps = null, f.memoizedState = null, f.updateQueue = null, f.dependencies = null) : (f.childExpirationTime = h.childExpirationTime, f.expirationTime = h.expirationTime, f.child = h.child, f.memoizedProps = h.memoizedProps, f.memoizedState = h.memoizedState, f.updateQueue = h.updateQueue, c = h.dependencies, f.dependencies = null === c ? null : {
	                        expirationTime: c.expirationTime,
	                        firstContext: c.firstContext,
	                        responders: c.responders
	                      }), e = e.sibling;
	                    }

	                    I$1(O$1, O$1.current & 1 | 2, b);
	                    b = b.child;
	                    break a;
	                  }

	                  c = c.sibling;
	                }
	              }
	            } else {
	              if (!f) if (c = gh(h), null !== c) {
	                if (b.effectTag |= 64, f = !0, ri(e, !0), null === e.tail && "hidden" === e.tailMode) {
	                  d = c.updateQueue;
	                  null !== d && (b.updateQueue = d, b.effectTag |= 4);
	                  b = b.lastEffect = e.lastEffect;
	                  null !== b && (b.nextEffect = null);
	                  break;
	                }
	              } else Vf() > e.tailExpiration && 1 < d && (b.effectTag |= 64, f = !0, ri(e, !1), b.expirationTime = b.childExpirationTime = d - 1);
	              e.isBackwards ? (h.sibling = b.child, b.child = h) : (d = e.last, null !== d ? d.sibling = h : b.child = h, e.last = h);
	            }

	            if (null !== e.tail) {
	              0 === e.tailExpiration && (e.tailExpiration = Vf() + 500);
	              d = e.tail;
	              e.rendering = d;
	              e.tail = d.sibling;
	              e.lastEffect = b.lastEffect;
	              d.sibling = null;
	              e = O$1.current;
	              e = f ? e & 1 | 2 : e & 1;
	              I$1(O$1, e, b);
	              b = d;
	              break a;
	            }

	            break;

	          case 20:
	            break;

	          case 21:
	            break;

	          default:
	            throw t$1(Error(156), b.tag);
	        }

	        b = null;
	      }

	      d = V$1;

	      if (1 === W$1 || 1 !== d.childExpirationTime) {
	        e = 0;

	        for (f = d.child; null !== f;) {
	          c = f.expirationTime, h = f.childExpirationTime, c > e && (e = c), h > e && (e = h), f = f.sibling;
	        }

	        d.childExpirationTime = e;
	      }

	      if (null !== b) return b;
	      null !== a && (a.effectTag & 2048) === D$1 && (null === a.firstEffect && (a.firstEffect = V$1.firstEffect), null !== V$1.lastEffect && (null !== a.lastEffect && (a.lastEffect.nextEffect = V$1.firstEffect), a.lastEffect = V$1.lastEffect), 1 < V$1.effectTag && (null !== a.lastEffect ? a.lastEffect.nextEffect = V$1 : a.firstEffect = V$1, a.lastEffect = V$1));
	    } else {
	      b = si(V$1, W$1);
	      if (null !== b) return b.effectTag &= 2047, b;
	      null !== a && (a.firstEffect = a.lastEffect = null, a.effectTag |= 2048);
	    }

	    b = V$1.sibling;
	    if (null !== b) return b;
	    V$1 = a;
	  } while (null !== V$1);

	  X$1 === aj && (X$1 = fj);
	  return null;
	}

	function Lj(a) {
	  var b = a.expirationTime;
	  a = a.childExpirationTime;
	  return b > a ? b : a;
	}

	function Kj(a) {
	  var b = Wf();
	  Yf(99, Wj.bind(null, a, b));
	  return null;
	}

	function Wj(a, b) {
	  Ej();
	  if ((T$1 & (Zi | $i)) !== S$1) throw t$1(Error(327));
	  var c = a.finishedWork,
	      d = a.finishedExpirationTime;
	  if (null === c) return null;
	  a.finishedWork = null;
	  a.finishedExpirationTime = 0;
	  if (c === a.current) throw t$1(Error(177));
	  a.callbackNode = null;
	  a.callbackExpirationTime = 0;
	  a.callbackPriority = 90;
	  a.nextKnownPendingLevel = 0;
	  var e = Lj(c);
	  a.firstPendingTime = e;
	  d <= a.lastSuspendedTime ? a.firstSuspendedTime = a.lastSuspendedTime = a.nextKnownPendingLevel = 0 : d <= a.firstSuspendedTime && (a.firstSuspendedTime = d - 1);
	  d <= a.lastPingedTime && (a.lastPingedTime = 0);
	  d <= a.lastExpiredTime && (a.lastExpiredTime = 0);
	  a === U$1 && (V$1 = U$1 = null, W$1 = 0);
	  1 < c.effectTag ? null !== c.lastEffect ? (c.lastEffect.nextEffect = c, e = c.firstEffect) : e = c : e = c.firstEffect;

	  if (null !== e) {
	    var f = T$1;
	    T$1 |= $i;
	    Xi.current = null;
	    de = Dd;
	    var g = Yd();

	    if (Zd(g)) {
	      if ("selectionStart" in g) var h = {
	        start: g.selectionStart,
	        end: g.selectionEnd
	      };else a: {
	        h = (h = g.ownerDocument) && h.defaultView || window;
	        var k = h.getSelection && h.getSelection();

	        if (k && 0 !== k.rangeCount) {
	          h = k.anchorNode;
	          var l = k.anchorOffset,
	              m = k.focusNode;
	          k = k.focusOffset;

	          try {
	            h.nodeType, m.nodeType;
	          } catch (Fb) {
	            h = null;
	            break a;
	          }

	          var A = 0,
	              w = -1,
	              L = -1,
	              wb = 0,
	              M = 0,
	              q = g,
	              y = null;

	          b: for (;;) {
	            for (var z;;) {
	              q !== h || 0 !== l && 3 !== q.nodeType || (w = A + l);
	              q !== m || 0 !== k && 3 !== q.nodeType || (L = A + k);
	              3 === q.nodeType && (A += q.nodeValue.length);
	              if (null === (z = q.firstChild)) break;
	              y = q;
	              q = z;
	            }

	            for (;;) {
	              if (q === g) break b;
	              y === h && ++wb === l && (w = A);
	              y === m && ++M === k && (L = A);
	              if (null !== (z = q.nextSibling)) break;
	              q = y;
	              y = q.parentNode;
	            }

	            q = z;
	          }

	          h = -1 === w || -1 === L ? null : {
	            start: w,
	            end: L
	          };
	        } else h = null;
	      }
	      h = h || {
	        start: 0,
	        end: 0
	      };
	    } else h = null;

	    ee = {
	      focusedElem: g,
	      selectionRange: h
	    };
	    Dd = !1;
	    Y$1 = e;

	    do {
	      try {
	        Xj();
	      } catch (Fb) {
	        if (null === Y$1) throw t$1(Error(330));
	        xi(Y$1, Fb);
	        Y$1 = Y$1.nextEffect;
	      }
	    } while (null !== Y$1);

	    Y$1 = e;

	    do {
	      try {
	        for (g = a, h = b; null !== Y$1;) {
	          var p = Y$1.effectTag;
	          p & 16 && Tb(Y$1.stateNode, "");

	          if (p & 128) {
	            var u = Y$1.alternate;

	            if (null !== u) {
	              var v = u.ref;
	              null !== v && ("function" === typeof v ? v(null) : v.current = null);
	            }
	          }

	          switch (p & (E$1 | 12 | Ac)) {
	            case E$1:
	              Ki(Y$1);
	              Y$1.effectTag &= ~E$1;
	              break;

	            case 6:
	              Ki(Y$1);
	              Y$1.effectTag &= ~E$1;
	              Li(Y$1.alternate, Y$1);
	              break;

	            case Ac:
	              Y$1.effectTag &= ~Ac;
	              break;

	            case 1028:
	              Y$1.effectTag &= ~Ac;
	              Li(Y$1.alternate, Y$1);
	              break;

	            case 4:
	              Li(Y$1.alternate, Y$1);
	              break;

	            case 8:
	              l = Y$1, Hi(g, l, h), Ii(l);
	          }

	          Y$1 = Y$1.nextEffect;
	        }
	      } catch (Fb) {
	        if (null === Y$1) throw t$1(Error(330));
	        xi(Y$1, Fb);
	        Y$1 = Y$1.nextEffect;
	      }
	    } while (null !== Y$1);

	    v = ee;
	    u = Yd();
	    p = v.focusedElem;
	    h = v.selectionRange;

	    if (u !== p && p && p.ownerDocument && Xd(p.ownerDocument.documentElement, p)) {
	      null !== h && Zd(p) && (u = h.start, v = h.end, void 0 === v && (v = u), "selectionStart" in p ? (p.selectionStart = u, p.selectionEnd = Math.min(v, p.value.length)) : (v = (u = p.ownerDocument || document) && u.defaultView || window, v.getSelection && (v = v.getSelection(), l = p.textContent.length, g = Math.min(h.start, l), h = void 0 === h.end ? g : Math.min(h.end, l), !v.extend && g > h && (l = h, h = g, g = l), l = Wd(p, g), m = Wd(p, h), l && m && (1 !== v.rangeCount || v.anchorNode !== l.node || v.anchorOffset !== l.offset || v.focusNode !== m.node || v.focusOffset !== m.offset) && (u = u.createRange(), u.setStart(l.node, l.offset), v.removeAllRanges(), g > h ? (v.addRange(u), v.extend(m.node, m.offset)) : (u.setEnd(m.node, m.offset), v.addRange(u))))));
	      u = [];

	      for (v = p; v = v.parentNode;) {
	        1 === v.nodeType && u.push({
	          element: v,
	          left: v.scrollLeft,
	          top: v.scrollTop
	        });
	      }

	      "function" === typeof p.focus && p.focus();

	      for (p = 0; p < u.length; p++) {
	        v = u[p], v.element.scrollLeft = v.left, v.element.scrollTop = v.top;
	      }
	    }

	    ee = null;
	    Dd = !!de;
	    de = null;
	    a.current = c;
	    Y$1 = e;

	    do {
	      try {
	        for (p = d; null !== Y$1;) {
	          var Bh = Y$1.effectTag;

	          if (Bh & 36) {
	            var cc = Y$1.alternate;
	            u = Y$1;
	            v = p;

	            switch (u.tag) {
	              case 0:
	              case 11:
	              case 15:
	                Ei(16, 32, u);
	                break;

	              case 1:
	                var ed = u.stateNode;
	                if (u.effectTag & 4) if (null === cc) ed.componentDidMount();else {
	                  var Zj = u.elementType === u.type ? cc.memoizedProps : cg(u.type, cc.memoizedProps);
	                  ed.componentDidUpdate(Zj, cc.memoizedState, ed.__reactInternalSnapshotBeforeUpdate);
	                }
	                var Ch = u.updateQueue;
	                null !== Ch && Ag(u, Ch, ed, v);
	                break;

	              case 3:
	                var Dh = u.updateQueue;

	                if (null !== Dh) {
	                  g = null;
	                  if (null !== u.child) switch (u.child.tag) {
	                    case 5:
	                      g = u.child.stateNode;
	                      break;

	                    case 1:
	                      g = u.child.stateNode;
	                  }
	                  Ag(u, Dh, g, v);
	                }

	                break;

	              case 5:
	                var pk = u.stateNode;
	                null === cc && u.effectTag & 4 && (v = pk, fe(u.type, u.memoizedProps) && v.focus());
	                break;

	              case 6:
	                break;

	              case 4:
	                break;

	              case 12:
	                break;

	              case 13:
	                if (null === u.memoizedState) {
	                  var zi = u.alternate;

	                  if (null !== zi) {
	                    var Ai = zi.memoizedState;

	                    if (null !== Ai) {
	                      var Bi = Ai.dehydrated;
	                      null !== Bi && zc(Bi);
	                    }
	                  }
	                }

	                break;

	              case 19:
	              case 17:
	              case 20:
	              case 21:
	                break;

	              default:
	                throw t$1(Error(163));
	            }
	          }

	          if (Bh & 128) {
	            u = Y$1;
	            var yd = u.ref;

	            if (null !== yd) {
	              var Ci = u.stateNode;

	              switch (u.tag) {
	                case 5:
	                  var yf = Ci;
	                  break;

	                default:
	                  yf = Ci;
	              }

	              "function" === typeof yd ? yd(yf) : yd.current = yf;
	            }
	          }

	          Y$1 = Y$1.nextEffect;
	        }
	      } catch (Fb) {
	        if (null === Y$1) throw t$1(Error(330));
	        xi(Y$1, Fb);
	        Y$1 = Y$1.nextEffect;
	      }
	    } while (null !== Y$1);

	    Y$1 = null;
	    Qf();
	    T$1 = f;
	  } else a.current = c;

	  if (oj) oj = !1, pj = a, qj = b;else for (Y$1 = e; null !== Y$1;) {
	    b = Y$1.nextEffect, Y$1.nextEffect = null, Y$1 = b;
	  }
	  b = a.firstPendingTime;
	  0 === b && (Ui = null);
	  1073741823 === b ? a === tj ? sj++ : (sj = 0, tj = a) : sj = 0;
	  "function" === typeof Yj && Yj(c.stateNode, d);
	  Z$1(a);
	  if (Ri) throw Ri = !1, a = Si, Si = null, a;
	  if ((T$1 & Yi) !== S$1) return null;
	  bg();
	  return null;
	}

	function Xj() {
	  for (; null !== Y$1;) {
	    var a = Y$1.effectTag;
	    (a & 256) !== D$1 && Di(Y$1.alternate, Y$1);
	    (a & 512) === D$1 || oj || (oj = !0, Zf(97, function () {
	      Ej();
	      return null;
	    }));
	    Y$1 = Y$1.nextEffect;
	  }
	}

	function Ej() {
	  if (90 !== qj) {
	    var a = 97 < qj ? 97 : qj;
	    qj = 90;
	    return Yf(a, ak);
	  }
	}

	function ak() {
	  if (null === pj) return !1;
	  var a = pj;
	  pj = null;
	  if ((T$1 & (Zi | $i)) !== S$1) throw t$1(Error(331));
	  var b = T$1;
	  T$1 |= $i;

	  for (a = a.current.firstEffect; null !== a;) {
	    try {
	      var c = a;
	      if ((c.effectTag & 512) !== D$1) switch (c.tag) {
	        case 0:
	        case 11:
	        case 15:
	          Ei(128, 0, c), Ei(0, 64, c);
	      }
	    } catch (d) {
	      if (null === a) throw t$1(Error(330));
	      xi(a, d);
	    }

	    c = a.nextEffect;
	    a.nextEffect = null;
	    a = c;
	  }

	  T$1 = b;
	  bg();
	  return !0;
	}

	function bk(a, b, c) {
	  b = ti(c, b);
	  b = Qi(a, b, 1073741823);
	  tg(a, b);
	  a = wj(a, 1073741823);
	  null !== a && Z$1(a);
	}

	function xi(a, b) {
	  if (3 === a.tag) bk(a, a, b);else for (var c = a["return"]; null !== c;) {
	    if (3 === c.tag) {
	      bk(c, a, b);
	      break;
	    } else if (1 === c.tag) {
	      var d = c.stateNode;

	      if ("function" === typeof c.type.getDerivedStateFromError || "function" === typeof d.componentDidCatch && (null === Ui || !Ui.has(d))) {
	        a = ti(b, a);
	        a = Ti(c, a, 1073741823);
	        tg(c, a);
	        c = wj(c, 1073741823);
	        null !== c && Z$1(c);
	        break;
	      }
	    }

	    c = c["return"];
	  }
	}

	function Sj(a, b, c) {
	  var d = a.pingCache;
	  null !== d && d["delete"](b);
	  U$1 === a && W$1 === c ? X$1 === ej || X$1 === dj && 1073741823 === ij && Vf() - Mi < nj ? Fj(a, W$1) : mj = !0 : Bj(a, c) && (b = a.lastPingedTime, 0 !== b && b < c || (a.lastPingedTime = c, a.finishedExpirationTime === c && (a.finishedExpirationTime = 0, a.finishedWork = null), Z$1(a)));
	}

	function Oi(a, b) {
	  var c = a.stateNode;
	  null !== c && c["delete"](b);
	  b = 1;
	  1 === b && (b = Fg(), b = Gg(b, a, null));
	  a = wj(a, b);
	  null !== a && Z$1(a);
	}

	var Vj;

	Vj = function Vj(a, b, c) {
	  var d = b.expirationTime;

	  if (null !== a) {
	    var e = b.pendingProps;
	    if (a.memoizedProps !== e || K$1.current) mg = !0;else {
	      if (d < c) {
	        mg = !1;

	        switch (b.tag) {
	          case 3:
	            hi(b);
	            Xh();
	            break;

	          case 5:
	            eh(b);
	            if (b.mode & 4 && 1 !== c && e.hidden) return b.expirationTime = b.childExpirationTime = 1, null;
	            break;

	          case 1:
	            N$1(b.type) && Bf(b);
	            break;

	          case 4:
	            ch(b, b.stateNode.containerInfo);
	            break;

	          case 10:
	            ig(b, b.memoizedProps.value);
	            break;

	          case 13:
	            if (null !== b.memoizedState) {
	              d = b.child.childExpirationTime;
	              if (0 !== d && d >= c) return ji(a, b, c);
	              I$1(O$1, O$1.current & 1, b);
	              b = $h(a, b, c);
	              return null !== b ? b.sibling : null;
	            }

	            I$1(O$1, O$1.current & 1, b);
	            break;

	          case 19:
	            d = b.childExpirationTime >= c;

	            if ((a.effectTag & 64) !== D$1) {
	              if (d) return li(a, b, c);
	              b.effectTag |= 64;
	            }

	            e = b.memoizedState;
	            null !== e && (e.rendering = null, e.tail = null);
	            I$1(O$1, O$1.current, b);
	            if (!d) return null;
	        }

	        return $h(a, b, c);
	      }

	      mg = !1;
	    }
	  } else mg = !1;

	  b.expirationTime = 0;

	  switch (b.tag) {
	    case 2:
	      d = b.type;
	      null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= E$1);
	      a = b.pendingProps;
	      e = vf(b, J$1.current);
	      lg(b, c);
	      e = wh(null, b, d, a, e, c);
	      b.effectTag |= 1;

	      if ("object" === _typeof_1(e) && null !== e && "function" === typeof e.render && void 0 === e.$$typeof) {
	        b.tag = 1;
	        Ah();

	        if (N$1(d)) {
	          var f = !0;
	          Bf(b);
	        } else f = !1;

	        b.memoizedState = null !== e.state && void 0 !== e.state ? e.state : null;
	        var g = d.getDerivedStateFromProps;
	        "function" === typeof g && Eg(b, d, g, a);
	        e.updater = Ig;
	        b.stateNode = e;
	        e._reactInternalFiber = b;
	        Mg(b, d, a, c);
	        b = gi(null, b, d, !0, f, c);
	      } else b.tag = 0, R$1(null, b, e, c), b = b.child;

	      return b;

	    case 16:
	      e = b.elementType;
	      null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= E$1);
	      a = b.pendingProps;
	      Ua(e);
	      if (1 !== e._status) throw e._result;
	      e = e._result;
	      b.type = e;
	      f = b.tag = ck(e);
	      a = cg(e, a);

	      switch (f) {
	        case 0:
	          b = di(null, b, e, a, c);
	          break;

	        case 1:
	          b = fi(null, b, e, a, c);
	          break;

	        case 11:
	          b = Zh(null, b, e, a, c);
	          break;

	        case 14:
	          b = ai(null, b, e, cg(e.type, a), d, c);
	          break;

	        default:
	          throw t$1(Error(306), e, "");
	      }

	      return b;

	    case 0:
	      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : cg(d, e), di(a, b, d, e, c);

	    case 1:
	      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : cg(d, e), fi(a, b, d, e, c);

	    case 3:
	      hi(b);
	      d = b.updateQueue;
	      if (null === d) throw t$1(Error(282));
	      e = b.memoizedState;
	      e = null !== e ? e.element : null;
	      xg(b, d, b.pendingProps, null, c);
	      d = b.memoizedState.element;
	      if (d === e) Xh(), b = $h(a, b, c);else {
	        if (e = b.stateNode.hydrate) Ph = je(b.stateNode.containerInfo.firstChild), Oh = b, e = Qh = !0;
	        if (e) for (c = Xg(b, null, d, c), b.child = c; c;) {
	          c.effectTag = c.effectTag & ~E$1 | Ac, c = c.sibling;
	        } else R$1(a, b, d, c), Xh();
	        b = b.child;
	      }
	      return b;

	    case 5:
	      return eh(b), null === a && Uh(b), d = b.type, e = b.pendingProps, f = null !== a ? a.memoizedProps : null, g = e.children, ge(d, e) ? g = null : null !== f && ge(d, f) && (b.effectTag |= 16), ei(a, b), b.mode & 4 && 1 !== c && e.hidden ? (b.expirationTime = b.childExpirationTime = 1, b = null) : (R$1(a, b, g, c), b = b.child), b;

	    case 6:
	      return null === a && Uh(b), null;

	    case 13:
	      return ji(a, b, c);

	    case 4:
	      return ch(b, b.stateNode.containerInfo), d = b.pendingProps, null === a ? b.child = Wg(b, null, d, c) : R$1(a, b, d, c), b.child;

	    case 11:
	      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : cg(d, e), Zh(a, b, d, e, c);

	    case 7:
	      return R$1(a, b, b.pendingProps, c), b.child;

	    case 8:
	      return R$1(a, b, b.pendingProps.children, c), b.child;

	    case 12:
	      return R$1(a, b, b.pendingProps.children, c), b.child;

	    case 10:
	      a: {
	        d = b.type._context;
	        e = b.pendingProps;
	        g = b.memoizedProps;
	        f = e.value;
	        ig(b, f);

	        if (null !== g) {
	          var h = g.value;
	          f = ff(h, f) ? 0 : ("function" === typeof d._calculateChangedBits ? d._calculateChangedBits(h, f) : 1073741823) | 0;

	          if (0 === f) {
	            if (g.children === e.children && !K$1.current) {
	              b = $h(a, b, c);
	              break a;
	            }
	          } else for (h = b.child, null !== h && (h["return"] = b); null !== h;) {
	            var k = h.dependencies;

	            if (null !== k) {
	              g = h.child;

	              for (var l = k.firstContext; null !== l;) {
	                if (l.context === d && 0 !== (l.observedBits & f)) {
	                  1 === h.tag && (l = rg(c, null), l.tag = 2, tg(h, l));
	                  h.expirationTime < c && (h.expirationTime = c);
	                  l = h.alternate;
	                  null !== l && l.expirationTime < c && (l.expirationTime = c);
	                  kg(h["return"], c);
	                  k.expirationTime < c && (k.expirationTime = c);
	                  break;
	                }

	                l = l.next;
	              }
	            } else g = 10 === h.tag ? h.type === b.type ? null : h.child : h.child;

	            if (null !== g) g["return"] = h;else for (g = h; null !== g;) {
	              if (g === b) {
	                g = null;
	                break;
	              }

	              h = g.sibling;

	              if (null !== h) {
	                h["return"] = g["return"];
	                g = h;
	                break;
	              }

	              g = g["return"];
	            }
	            h = g;
	          }
	        }

	        R$1(a, b, e.children, c);
	        b = b.child;
	      }

	      return b;

	    case 9:
	      return e = b.type, f = b.pendingProps, d = f.children, lg(b, c), e = ng(e, f.unstable_observedBits), d = d(e), b.effectTag |= 1, R$1(a, b, d, c), b.child;

	    case 14:
	      return e = b.type, f = cg(e, b.pendingProps), f = cg(e.type, f), ai(a, b, e, f, d, c);

	    case 15:
	      return ci(a, b, b.type, b.pendingProps, d, c);

	    case 17:
	      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : cg(d, e), null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= E$1), b.tag = 1, N$1(d) ? (a = !0, Bf(b)) : a = !1, lg(b, c), Kg(b, d, e, c), Mg(b, d, e, c), gi(null, b, d, !0, a, c);

	    case 19:
	      return li(a, b, c);
	  }

	  throw t$1(Error(156), b.tag);
	};

	var Yj = null,
	    Gi = null;

	function dk(a) {
	  if ("undefined" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return !1;
	  var b = __REACT_DEVTOOLS_GLOBAL_HOOK__;
	  if (b.isDisabled || !b.supportsFiber) return !0;

	  try {
	    var c = b.inject(a);

	    Yj = function Yj(a) {
	      try {
	        b.onCommitFiberRoot(c, a, void 0, 64 === (a.current.effectTag & 64));
	      } catch (e) {}
	    };

	    Gi = function Gi(a) {
	      try {
	        b.onCommitFiberUnmount(c, a);
	      } catch (e) {}
	    };
	  } catch (d) {}

	  return !0;
	}

	function ek(a, b, c, d) {
	  this.tag = a;
	  this.key = c;
	  this.sibling = this.child = this["return"] = this.stateNode = this.type = this.elementType = null;
	  this.index = 0;
	  this.ref = null;
	  this.pendingProps = b;
	  this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
	  this.mode = d;
	  this.effectTag = D$1;
	  this.lastEffect = this.firstEffect = this.nextEffect = null;
	  this.childExpirationTime = this.expirationTime = 0;
	  this.alternate = null;
	}

	function Sh(a, b, c, d) {
	  return new ek(a, b, c, d);
	}

	function bi(a) {
	  a = a.prototype;
	  return !(!a || !a.isReactComponent);
	}

	function ck(a) {
	  if ("function" === typeof a) return bi(a) ? 1 : 0;

	  if (void 0 !== a && null !== a) {
	    a = a.$$typeof;
	    if (a === Na) return 11;
	    if (a === Qa) return 14;
	  }

	  return 2;
	}

	function Rg(a, b) {
	  var c = a.alternate;
	  null === c ? (c = Sh(a.tag, b, a.key, a.mode), c.elementType = a.elementType, c.type = a.type, c.stateNode = a.stateNode, c.alternate = a, a.alternate = c) : (c.pendingProps = b, c.effectTag = D$1, c.nextEffect = null, c.firstEffect = null, c.lastEffect = null);
	  c.childExpirationTime = a.childExpirationTime;
	  c.expirationTime = a.expirationTime;
	  c.child = a.child;
	  c.memoizedProps = a.memoizedProps;
	  c.memoizedState = a.memoizedState;
	  c.updateQueue = a.updateQueue;
	  b = a.dependencies;
	  c.dependencies = null === b ? null : {
	    expirationTime: b.expirationTime,
	    firstContext: b.firstContext,
	    responders: b.responders
	  };
	  c.sibling = a.sibling;
	  c.index = a.index;
	  c.ref = a.ref;
	  return c;
	}

	function Tg(a, b, c, d, e, f) {
	  var g = 2;
	  d = a;
	  if ("function" === typeof a) bi(a) && (g = 1);else if ("string" === typeof a) g = 5;else a: switch (a) {
	    case Ha:
	      return Vg(c.children, e, f, b);

	    case Ma:
	      g = 8;
	      e |= 7;
	      break;

	    case Ia:
	      g = 8;
	      e |= 1;
	      break;

	    case Ja:
	      return a = Sh(12, c, b, e | 8), a.elementType = Ja, a.type = Ja, a.expirationTime = f, a;

	    case Oa:
	      return a = Sh(13, c, b, e), a.type = Oa, a.elementType = Oa, a.expirationTime = f, a;

	    case Pa:
	      return a = Sh(19, c, b, e), a.elementType = Pa, a.expirationTime = f, a;

	    default:
	      if ("object" === _typeof_1(a) && null !== a) switch (a.$$typeof) {
	        case Ka:
	          g = 10;
	          break a;

	        case La:
	          g = 9;
	          break a;

	        case Na:
	          g = 11;
	          break a;

	        case Qa:
	          g = 14;
	          break a;

	        case Ra:
	          g = 16;
	          d = null;
	          break a;
	      }
	      throw t$1(Error(130), null == a ? a : _typeof_1(a), "");
	  }
	  b = Sh(g, c, b, e);
	  b.elementType = a;
	  b.type = d;
	  b.expirationTime = f;
	  return b;
	}

	function Vg(a, b, c, d) {
	  a = Sh(7, a, d, b);
	  a.expirationTime = c;
	  return a;
	}

	function Sg(a, b, c) {
	  a = Sh(6, a, null, b);
	  a.expirationTime = c;
	  return a;
	}

	function Ug(a, b, c) {
	  b = Sh(4, null !== a.children ? a.children : [], a.key, b);
	  b.expirationTime = c;
	  b.stateNode = {
	    containerInfo: a.containerInfo,
	    pendingChildren: null,
	    implementation: a.implementation
	  };
	  return b;
	}

	function fk(a, b, c) {
	  this.tag = b;
	  this.current = null;
	  this.containerInfo = a;
	  this.pingCache = this.pendingChildren = null;
	  this.finishedExpirationTime = 0;
	  this.finishedWork = null;
	  this.timeoutHandle = -1;
	  this.pendingContext = this.context = null;
	  this.hydrate = c;
	  this.callbackNode = this.firstBatch = null;
	  this.callbackPriority = 90;
	  this.lastExpiredTime = this.lastPingedTime = this.nextKnownPendingLevel = this.lastSuspendedTime = this.firstSuspendedTime = this.firstPendingTime = 0;
	}

	function Bj(a, b) {
	  var c = a.firstSuspendedTime;
	  a = a.lastSuspendedTime;
	  return 0 !== c && c >= b && a <= b;
	}

	function yj(a, b) {
	  var c = a.firstSuspendedTime,
	      d = a.lastSuspendedTime;
	  c < b && (a.firstSuspendedTime = b);
	  if (d > b || 0 === c) a.lastSuspendedTime = b;
	  b <= a.lastPingedTime && (a.lastPingedTime = 0);
	  b <= a.lastExpiredTime && (a.lastExpiredTime = 0);
	}

	function zj(a, b) {
	  b > a.firstPendingTime && (a.firstPendingTime = b);
	  var c = a.firstSuspendedTime;
	  0 !== c && (b >= c ? a.firstSuspendedTime = a.lastSuspendedTime = a.nextKnownPendingLevel = 0 : b >= a.lastSuspendedTime && (a.lastSuspendedTime = b + 1), b > a.nextKnownPendingLevel && (a.nextKnownPendingLevel = b));
	}

	function Dj(a, b) {
	  var c = a.lastExpiredTime;
	  if (0 === c || c > b) a.lastExpiredTime = b;
	}

	function gk(a, b, c, d, e, f) {
	  var g = b.current;

	  a: if (c) {
	    c = c._reactInternalFiber;

	    b: {
	      if (Bc(c) !== c || 1 !== c.tag) throw t$1(Error(170));
	      var h = c;

	      do {
	        switch (h.tag) {
	          case 3:
	            h = h.stateNode.context;
	            break b;

	          case 1:
	            if (N$1(h.type)) {
	              h = h.stateNode.__reactInternalMemoizedMergedChildContext;
	              break b;
	            }

	        }

	        h = h["return"];
	      } while (null !== h);

	      throw t$1(Error(171));
	    }

	    if (1 === c.tag) {
	      var k = c.type;

	      if (N$1(k)) {
	        c = Af(c, k, h);
	        break a;
	      }
	    }

	    c = h;
	  } else c = tf;

	  null === b.context ? b.context = c : b.pendingContext = c;
	  b = f;
	  e = rg(d, e);
	  e.payload = {
	    element: a
	  };
	  b = void 0 === b ? null : b;
	  null !== b && (e.callback = b);
	  tg(g, e);
	  Hg(g, d);
	  return d;
	}

	function hk(a, b, c, d) {
	  var e = b.current,
	      f = Fg(),
	      g = Cg.suspense;
	  e = Gg(f, e, g);
	  return gk(a, b, c, e, g, d);
	}

	function ik(a) {
	  a = a.current;
	  if (!a.child) return null;

	  switch (a.child.tag) {
	    case 5:
	      return a.child.stateNode;

	    default:
	      return a.child.stateNode;
	  }
	}

	function jk(a, b, c) {
	  var d = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;
	  return {
	    $$typeof: Ga,
	    key: null == d ? null : "" + d,
	    children: a,
	    containerInfo: b,
	    implementation: c
	  };
	}

	Ya = function Ya(a, b, c) {
	  switch (b) {
	    case "input":
	      Db(a, c);
	      b = c.name;

	      if ("radio" === c.type && null != b) {
	        for (c = a; c.parentNode;) {
	          c = c.parentNode;
	        }

	        c = c.querySelectorAll("input[name=" + JSON.stringify("" + b) + '][type="radio"]');

	        for (b = 0; b < c.length; b++) {
	          var d = c[b];

	          if (d !== a && d.form === a.form) {
	            var e = re(d);
	            if (!e) throw t$1(Error(90));
	            zb(d);
	            Db(d, e);
	          }
	        }
	      }

	      break;

	    case "textarea":
	      Mb(a, c);
	      break;

	    case "select":
	      b = c.value, null != b && Jb(a, !!c.multiple, b, !1);
	  }
	};

	function kk(a) {
	  var b = 1073741821 - 25 * (((1073741821 - Fg() + 500) / 25 | 0) + 1);
	  b <= vj && --b;
	  this._expirationTime = vj = b;
	  this._root = a;
	  this._callbacks = this._next = null;
	  this._hasChildren = this._didComplete = !1;
	  this._children = null;
	  this._defer = !0;
	}

	kk.prototype.render = function (a) {
	  if (!this._defer) throw t$1(Error(250));
	  this._hasChildren = !0;
	  this._children = a;
	  var b = this._root._internalRoot,
	      c = this._expirationTime,
	      d = new lk();
	  gk(a, b, null, c, null, d._onCommit);
	  return d;
	};

	kk.prototype.then = function (a) {
	  if (this._didComplete) a();else {
	    var b = this._callbacks;
	    null === b && (b = this._callbacks = []);
	    b.push(a);
	  }
	};

	kk.prototype.commit = function () {
	  var a = this._root._internalRoot,
	      b = a.firstBatch;
	  if (!this._defer || null === b) throw t$1(Error(251));

	  if (this._hasChildren) {
	    var c = this._expirationTime;

	    if (b !== this) {
	      this._hasChildren && (c = this._expirationTime = b._expirationTime, this.render(this._children));

	      for (var d = null, e = b; e !== this;) {
	        d = e, e = e._next;
	      }

	      if (null === d) throw t$1(Error(251));
	      d._next = e._next;
	      this._next = b;
	      a.firstBatch = this;
	    }

	    this._defer = !1;
	    b = c;
	    if ((T$1 & (Zi | $i)) !== S$1) throw t$1(Error(253));
	    Dj(a, b);
	    Z$1(a);
	    bg();
	    b = this._next;
	    this._next = null;
	    b = a.firstBatch = b;
	    null !== b && b._hasChildren && b.render(b._children);
	  } else this._next = null, this._defer = !1;
	};

	kk.prototype._onComplete = function () {
	  if (!this._didComplete) {
	    this._didComplete = !0;
	    var a = this._callbacks;
	    if (null !== a) for (var b = 0; b < a.length; b++) {
	      (0, a[b])();
	    }
	  }
	};

	function lk() {
	  this._callbacks = null;
	  this._didCommit = !1;
	  this._onCommit = this._onCommit.bind(this);
	}

	lk.prototype.then = function (a) {
	  if (this._didCommit) a();else {
	    var b = this._callbacks;
	    null === b && (b = this._callbacks = []);
	    b.push(a);
	  }
	};

	lk.prototype._onCommit = function () {
	  if (!this._didCommit) {
	    this._didCommit = !0;
	    var a = this._callbacks;
	    if (null !== a) for (var b = 0; b < a.length; b++) {
	      var c = a[b];
	      if ("function" !== typeof c) throw t$1(Error(191), c);
	      c();
	    }
	  }
	};

	function mk(a, b, c) {
	  c = null != c && !0 === c.hydrate;
	  var d = new fk(a, b, c),
	      e = Sh(3, null, null, 2 === b ? 7 : 1 === b ? 3 : 0);
	  d.current = e;
	  e.stateNode = d;
	  a[oe] = d.current;
	  c && 0 !== b && nc(9 === a.nodeType ? a : a.ownerDocument);
	  return d;
	}

	function nk(a, b, c) {
	  this._internalRoot = mk(a, b, c);
	}

	function ok(a, b) {
	  this._internalRoot = mk(a, 2, b);
	}

	ok.prototype.render = nk.prototype.render = function (a, b) {
	  var c = this._internalRoot,
	      d = new lk();
	  b = void 0 === b ? null : b;
	  null !== b && d.then(b);
	  hk(a, c, null, d._onCommit);
	  return d;
	};

	ok.prototype.unmount = nk.prototype.unmount = function (a) {
	  var b = this._internalRoot,
	      c = new lk();
	  a = void 0 === a ? null : a;
	  null !== a && c.then(a);
	  hk(null, b, null, c._onCommit);
	  return c;
	};

	ok.prototype.createBatch = function () {
	  var a = new kk(this),
	      b = a._expirationTime,
	      c = this._internalRoot,
	      d = c.firstBatch;
	  if (null === d) c.firstBatch = a, a._next = null;else {
	    for (c = null; null !== d && d._expirationTime >= b;) {
	      c = d, d = d._next;
	    }

	    a._next = d;
	    null !== c && (c._next = a);
	  }
	  return a;
	};

	function qk(a) {
	  return !(!a || 1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType && (8 !== a.nodeType || " react-mount-point-unstable " !== a.nodeValue));
	}

	db = Pj;
	eb = Qj;
	fb = Nj;

	gb = function gb(a, b) {
	  var c = T$1;
	  T$1 |= 2;

	  try {
	    return a(b);
	  } finally {
	    T$1 = c, T$1 === S$1 && bg();
	  }
	};

	function rk(a, b) {
	  b || (b = a ? 9 === a.nodeType ? a.documentElement : a.firstChild : null, b = !(!b || 1 !== b.nodeType || !b.hasAttribute("data-reactroot")));
	  if (!b) for (var c; c = a.lastChild;) {
	    a.removeChild(c);
	  }
	  return new nk(a, 0, b ? {
	    hydrate: !0
	  } : void 0);
	}

	function sk(a, b, c, d, e) {
	  var f = c._reactRootContainer;

	  if (f) {
	    var g = f._internalRoot;

	    if ("function" === typeof e) {
	      var h = e;

	      e = function e() {
	        var a = ik(g);
	        h.call(a);
	      };
	    }

	    hk(b, g, a, e);
	  } else {
	    f = c._reactRootContainer = rk(c, d);
	    g = f._internalRoot;

	    if ("function" === typeof e) {
	      var k = e;

	      e = function e() {
	        var a = ik(g);
	        k.call(a);
	      };
	    }

	    Rj(function () {
	      hk(b, g, a, e);
	    });
	  }

	  return ik(g);
	}

	function tk(a, b) {
	  var c = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;
	  if (!qk(b)) throw t$1(Error(200));
	  return jk(a, b, null, c);
	}

	var wk = {
	  createPortal: tk,
	  findDOMNode: function findDOMNode(a) {
	    if (null == a) a = null;else if (1 !== a.nodeType) {
	      var b = a._reactInternalFiber;

	      if (void 0 === b) {
	        if ("function" === typeof a.render) throw t$1(Error(188));
	        throw t$1(Error(268), Object.keys(a));
	      }

	      a = Ec(b);
	      a = null === a ? null : a.stateNode;
	    }
	    return a;
	  },
	  hydrate: function hydrate(a, b, c) {
	    if (!qk(b)) throw t$1(Error(200));
	    return sk(null, a, b, !0, c);
	  },
	  render: function render(a, b, c) {
	    if (!qk(b)) throw t$1(Error(200));
	    return sk(null, a, b, !1, c);
	  },
	  unstable_renderSubtreeIntoContainer: function unstable_renderSubtreeIntoContainer(a, b, c, d) {
	    if (!qk(c)) throw t$1(Error(200));
	    if (null == a || void 0 === a._reactInternalFiber) throw t$1(Error(38));
	    return sk(a, b, c, !1, d);
	  },
	  unmountComponentAtNode: function unmountComponentAtNode(a) {
	    if (!qk(a)) throw t$1(Error(40));
	    return a._reactRootContainer ? (Rj(function () {
	      sk(null, null, a, !1, function () {
	        a._reactRootContainer = null;
	      });
	    }), !0) : !1;
	  },
	  unstable_createPortal: function unstable_createPortal() {
	    return tk.apply(void 0, arguments);
	  },
	  unstable_batchedUpdates: Pj,
	  unstable_interactiveUpdates: function unstable_interactiveUpdates(a, b, c, d) {
	    Nj();
	    return Qj(a, b, c, d);
	  },
	  unstable_discreteUpdates: Qj,
	  unstable_flushDiscreteUpdates: Nj,
	  flushSync: function flushSync(a, b) {
	    if ((T$1 & (Zi | $i)) !== S$1) throw t$1(Error(187));
	    var c = T$1;
	    T$1 |= 1;

	    try {
	      return Yf(99, a.bind(null, b));
	    } finally {
	      T$1 = c, bg();
	    }
	  },
	  unstable_createRoot: uk,
	  unstable_createSyncRoot: vk,
	  unstable_flushControlled: function unstable_flushControlled(a) {
	    var b = T$1;
	    T$1 |= 1;

	    try {
	      Yf(99, a);
	    } finally {
	      T$1 = b, T$1 === S$1 && bg();
	    }
	  },
	  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
	    Events: [pe, qe, re, Ba.injectEventPluginsByName, fa$1, Lc, function (a) {
	      xa(a, Kc);
	    }, bb, cb, Hd, Aa, Ej, {
	      current: !1
	    }]
	  }
	};

	function uk(a, b) {
	  if (!qk(a)) throw t$1(Error(299), "unstable_createRoot");
	  return new ok(a, b);
	}

	function vk(a, b) {
	  if (!qk(a)) throw t$1(Error(299), "unstable_createRoot");
	  return new nk(a, 1, b);
	}

	(function (a) {
	  var b = a.findFiberByHostInstance;
	  return dk(objectAssign({}, a, {
	    overrideHookState: null,
	    overrideProps: null,
	    setSuspenseHandler: null,
	    scheduleUpdate: null,
	    currentDispatcherRef: Da.ReactCurrentDispatcher,
	    findHostInstanceByFiber: function findHostInstanceByFiber(a) {
	      a = Ec(a);
	      return null === a ? null : a.stateNode;
	    },
	    findFiberByHostInstance: function findFiberByHostInstance(a) {
	      return b ? b(a) : null;
	    },
	    findHostInstancesForRefresh: null,
	    scheduleRefresh: null,
	    scheduleRoot: null,
	    setRefreshHandler: null,
	    getCurrentFiber: null
	  }));
	})({
	  findFiberByHostInstance: Cd,
	  bundleType: 0,
	  version: "16.10.2",
	  rendererPackageName: "react-dom"
	});

	var xk = {
	  "default": wk
	},
	    yk = xk && wk || xk;
	var reactDom_production_min = yk["default"] || yk;

	var reactDom = createCommonjsModule(function (module) {

	  function checkDCE() {
	    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
	    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function') {
	      return;
	    }

	    try {
	      // Verify that the code above has been dead code eliminated (DCE'd).
	      __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
	    } catch (err) {
	      // DevTools shouldn't crash React, no matter what.
	      // We should still report in case we break this code.
	      console.error(err);
	    }
	  }

	  {
	    // DCE check should happen before ReactDOM bundle executes so that
	    // DevTools can report bad minification during injection.
	    checkDCE();
	    module.exports = reactDom_production_min;
	  }
	});

	var domain; // This constructor is used to store event handlers. Instantiating this is
	// faster than explicitly calling `Object.create(null)` to get a "clean" empty
	// object (tested with v8 v4.9).

	function EventHandlers() {}

	EventHandlers.prototype = Object.create(null);

	function EventEmitter() {
	  EventEmitter.init.call(this);
	}
	// require('events') === require('events').EventEmitter

	EventEmitter.EventEmitter = EventEmitter;
	EventEmitter.usingDomains = false;
	EventEmitter.prototype.domain = undefined;
	EventEmitter.prototype._events = undefined;
	EventEmitter.prototype._maxListeners = undefined; // By default EventEmitters will print a warning if more than 10 listeners are
	// added to it. This is a useful default which helps finding memory leaks.

	EventEmitter.defaultMaxListeners = 10;

	EventEmitter.init = function () {
	  this.domain = null;

	  if (EventEmitter.usingDomains) {
	    // if there is an active domain, then attach to it.
	    if (domain.active && !(this instanceof domain.Domain)) ;
	  }

	  if (!this._events || this._events === Object.getPrototypeOf(this)._events) {
	    this._events = new EventHandlers();
	    this._eventsCount = 0;
	  }

	  this._maxListeners = this._maxListeners || undefined;
	}; // Obviously not all Emitters should be limited to 10. This function allows
	// that to be increased. Set to zero for unlimited.


	EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
	  if (typeof n !== 'number' || n < 0 || isNaN(n)) throw new TypeError('"n" argument must be a positive number');
	  this._maxListeners = n;
	  return this;
	};

	function $getMaxListeners(that) {
	  if (that._maxListeners === undefined) return EventEmitter.defaultMaxListeners;
	  return that._maxListeners;
	}

	EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
	  return $getMaxListeners(this);
	}; // These standalone emit* functions are used to optimize calling of event
	// handlers for fast cases because emit() itself often has a variable number of
	// arguments and can be deoptimized because of that. These functions always have
	// the same number of arguments and thus do not get deoptimized, so the code
	// inside them can execute faster.


	function emitNone(handler, isFn, self) {
	  if (isFn) handler.call(self);else {
	    var len = handler.length;
	    var listeners = arrayClone(handler, len);

	    for (var i = 0; i < len; ++i) {
	      listeners[i].call(self);
	    }
	  }
	}

	function emitOne(handler, isFn, self, arg1) {
	  if (isFn) handler.call(self, arg1);else {
	    var len = handler.length;
	    var listeners = arrayClone(handler, len);

	    for (var i = 0; i < len; ++i) {
	      listeners[i].call(self, arg1);
	    }
	  }
	}

	function emitTwo(handler, isFn, self, arg1, arg2) {
	  if (isFn) handler.call(self, arg1, arg2);else {
	    var len = handler.length;
	    var listeners = arrayClone(handler, len);

	    for (var i = 0; i < len; ++i) {
	      listeners[i].call(self, arg1, arg2);
	    }
	  }
	}

	function emitThree(handler, isFn, self, arg1, arg2, arg3) {
	  if (isFn) handler.call(self, arg1, arg2, arg3);else {
	    var len = handler.length;
	    var listeners = arrayClone(handler, len);

	    for (var i = 0; i < len; ++i) {
	      listeners[i].call(self, arg1, arg2, arg3);
	    }
	  }
	}

	function emitMany(handler, isFn, self, args) {
	  if (isFn) handler.apply(self, args);else {
	    var len = handler.length;
	    var listeners = arrayClone(handler, len);

	    for (var i = 0; i < len; ++i) {
	      listeners[i].apply(self, args);
	    }
	  }
	}

	EventEmitter.prototype.emit = function emit(type) {
	  var er, handler, len, args, i, events, domain;
	  var doError = type === 'error';
	  events = this._events;
	  if (events) doError = doError && events.error == null;else if (!doError) return false;
	  domain = this.domain; // If there is no 'error' event listener then throw.

	  if (doError) {
	    er = arguments[1];

	    if (domain) {
	      if (!er) er = new Error('Uncaught, unspecified "error" event');
	      er.domainEmitter = this;
	      er.domain = domain;
	      er.domainThrown = false;
	      domain.emit('error', er);
	    } else if (er instanceof Error) {
	      throw er; // Unhandled 'error' event
	    } else {
	      // At least give some kind of context to the user
	      var err = new Error('Uncaught, unspecified "error" event. (' + er + ')');
	      err.context = er;
	      throw err;
	    }

	    return false;
	  }

	  handler = events[type];
	  if (!handler) return false;
	  var isFn = typeof handler === 'function';
	  len = arguments.length;

	  switch (len) {
	    // fast cases
	    case 1:
	      emitNone(handler, isFn, this);
	      break;

	    case 2:
	      emitOne(handler, isFn, this, arguments[1]);
	      break;

	    case 3:
	      emitTwo(handler, isFn, this, arguments[1], arguments[2]);
	      break;

	    case 4:
	      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);
	      break;
	    // slower

	    default:
	      args = new Array(len - 1);

	      for (i = 1; i < len; i++) {
	        args[i - 1] = arguments[i];
	      }

	      emitMany(handler, isFn, this, args);
	  }
	  return true;
	};

	function _addListener(target, type, listener, prepend) {
	  var m;
	  var events;
	  var existing;
	  if (typeof listener !== 'function') throw new TypeError('"listener" argument must be a function');
	  events = target._events;

	  if (!events) {
	    events = target._events = new EventHandlers();
	    target._eventsCount = 0;
	  } else {
	    // To avoid recursion in the case that type === "newListener"! Before
	    // adding it to the listeners, first emit "newListener".
	    if (events.newListener) {
	      target.emit('newListener', type, listener.listener ? listener.listener : listener); // Re-assign `events` because a newListener handler could have caused the
	      // this._events to be assigned to a new object

	      events = target._events;
	    }

	    existing = events[type];
	  }

	  if (!existing) {
	    // Optimize the case of one listener. Don't need the extra array object.
	    existing = events[type] = listener;
	    ++target._eventsCount;
	  } else {
	    if (typeof existing === 'function') {
	      // Adding the second element, need to change to array.
	      existing = events[type] = prepend ? [listener, existing] : [existing, listener];
	    } else {
	      // If we've already got an array, just append.
	      if (prepend) {
	        existing.unshift(listener);
	      } else {
	        existing.push(listener);
	      }
	    } // Check for listener leak


	    if (!existing.warned) {
	      m = $getMaxListeners(target);

	      if (m && m > 0 && existing.length > m) {
	        existing.warned = true;
	        var w = new Error('Possible EventEmitter memory leak detected. ' + existing.length + ' ' + type + ' listeners added. ' + 'Use emitter.setMaxListeners() to increase limit');
	        w.name = 'MaxListenersExceededWarning';
	        w.emitter = target;
	        w.type = type;
	        w.count = existing.length;
	        emitWarning(w);
	      }
	    }
	  }

	  return target;
	}

	function emitWarning(e) {
	  typeof console.warn === 'function' ? console.warn(e) : console.log(e);
	}

	EventEmitter.prototype.addListener = function addListener(type, listener) {
	  return _addListener(this, type, listener, false);
	};

	EventEmitter.prototype.on = EventEmitter.prototype.addListener;

	EventEmitter.prototype.prependListener = function prependListener(type, listener) {
	  return _addListener(this, type, listener, true);
	};

	function _onceWrap(target, type, listener) {
	  var fired = false;

	  function g() {
	    target.removeListener(type, g);

	    if (!fired) {
	      fired = true;
	      listener.apply(target, arguments);
	    }
	  }

	  g.listener = listener;
	  return g;
	}

	EventEmitter.prototype.once = function once(type, listener) {
	  if (typeof listener !== 'function') throw new TypeError('"listener" argument must be a function');
	  this.on(type, _onceWrap(this, type, listener));
	  return this;
	};

	EventEmitter.prototype.prependOnceListener = function prependOnceListener(type, listener) {
	  if (typeof listener !== 'function') throw new TypeError('"listener" argument must be a function');
	  this.prependListener(type, _onceWrap(this, type, listener));
	  return this;
	}; // emits a 'removeListener' event iff the listener was removed


	EventEmitter.prototype.removeListener = function removeListener(type, listener) {
	  var list, events, position, i, originalListener;
	  if (typeof listener !== 'function') throw new TypeError('"listener" argument must be a function');
	  events = this._events;
	  if (!events) return this;
	  list = events[type];
	  if (!list) return this;

	  if (list === listener || list.listener && list.listener === listener) {
	    if (--this._eventsCount === 0) this._events = new EventHandlers();else {
	      delete events[type];
	      if (events.removeListener) this.emit('removeListener', type, list.listener || listener);
	    }
	  } else if (typeof list !== 'function') {
	    position = -1;

	    for (i = list.length; i-- > 0;) {
	      if (list[i] === listener || list[i].listener && list[i].listener === listener) {
	        originalListener = list[i].listener;
	        position = i;
	        break;
	      }
	    }

	    if (position < 0) return this;

	    if (list.length === 1) {
	      list[0] = undefined;

	      if (--this._eventsCount === 0) {
	        this._events = new EventHandlers();
	        return this;
	      } else {
	        delete events[type];
	      }
	    } else {
	      spliceOne(list, position);
	    }

	    if (events.removeListener) this.emit('removeListener', type, originalListener || listener);
	  }

	  return this;
	};

	EventEmitter.prototype.removeAllListeners = function removeAllListeners(type) {
	  var listeners, events;
	  events = this._events;
	  if (!events) return this; // not listening for removeListener, no need to emit

	  if (!events.removeListener) {
	    if (arguments.length === 0) {
	      this._events = new EventHandlers();
	      this._eventsCount = 0;
	    } else if (events[type]) {
	      if (--this._eventsCount === 0) this._events = new EventHandlers();else delete events[type];
	    }

	    return this;
	  } // emit removeListener for all listeners on all events


	  if (arguments.length === 0) {
	    var keys = Object.keys(events);

	    for (var i = 0, key; i < keys.length; ++i) {
	      key = keys[i];
	      if (key === 'removeListener') continue;
	      this.removeAllListeners(key);
	    }

	    this.removeAllListeners('removeListener');
	    this._events = new EventHandlers();
	    this._eventsCount = 0;
	    return this;
	  }

	  listeners = events[type];

	  if (typeof listeners === 'function') {
	    this.removeListener(type, listeners);
	  } else if (listeners) {
	    // LIFO order
	    do {
	      this.removeListener(type, listeners[listeners.length - 1]);
	    } while (listeners[0]);
	  }

	  return this;
	};

	EventEmitter.prototype.listeners = function listeners(type) {
	  var evlistener;
	  var ret;
	  var events = this._events;
	  if (!events) ret = [];else {
	    evlistener = events[type];
	    if (!evlistener) ret = [];else if (typeof evlistener === 'function') ret = [evlistener.listener || evlistener];else ret = unwrapListeners(evlistener);
	  }
	  return ret;
	};

	EventEmitter.listenerCount = function (emitter, type) {
	  if (typeof emitter.listenerCount === 'function') {
	    return emitter.listenerCount(type);
	  } else {
	    return listenerCount.call(emitter, type);
	  }
	};

	EventEmitter.prototype.listenerCount = listenerCount;

	function listenerCount(type) {
	  var events = this._events;

	  if (events) {
	    var evlistener = events[type];

	    if (typeof evlistener === 'function') {
	      return 1;
	    } else if (evlistener) {
	      return evlistener.length;
	    }
	  }

	  return 0;
	}

	EventEmitter.prototype.eventNames = function eventNames() {
	  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];
	}; // About 1.5x faster than the two-arg version of Array#splice().


	function spliceOne(list, index) {
	  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {
	    list[i] = list[k];
	  }

	  list.pop();
	}

	function arrayClone(arr, i) {
	  var copy = new Array(i);

	  while (i--) {
	    copy[i] = arr[i];
	  }

	  return copy;
	}

	function unwrapListeners(arr) {
	  var ret = new Array(arr.length);

	  for (var i = 0; i < ret.length; ++i) {
	    ret[i] = arr[i].listener || arr[i];
	  }

	  return ret;
	}

	var global$1 = typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {};

	var lookup = [];
	var revLookup = [];
	var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;
	var inited = false;

	function init() {
	  inited = true;
	  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';

	  for (var i = 0, len = code.length; i < len; ++i) {
	    lookup[i] = code[i];
	    revLookup[code.charCodeAt(i)] = i;
	  }

	  revLookup['-'.charCodeAt(0)] = 62;
	  revLookup['_'.charCodeAt(0)] = 63;
	}

	function toByteArray(b64) {
	  if (!inited) {
	    init();
	  }

	  var i, j, l, tmp, placeHolders, arr;
	  var len = b64.length;

	  if (len % 4 > 0) {
	    throw new Error('Invalid string. Length must be a multiple of 4');
	  } // the number of equal signs (place holders)
	  // if there are two placeholders, than the two characters before it
	  // represent one byte
	  // if there is only one, then the three characters before it represent 2 bytes
	  // this is just a cheap hack to not do indexOf twice


	  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0; // base64 is 4/3 + up to two characters of the original data

	  arr = new Arr(len * 3 / 4 - placeHolders); // if there are placeholders, only get up to the last complete 4 chars

	  l = placeHolders > 0 ? len - 4 : len;
	  var L = 0;

	  for (i = 0, j = 0; i < l; i += 4, j += 3) {
	    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];
	    arr[L++] = tmp >> 16 & 0xFF;
	    arr[L++] = tmp >> 8 & 0xFF;
	    arr[L++] = tmp & 0xFF;
	  }

	  if (placeHolders === 2) {
	    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;
	    arr[L++] = tmp & 0xFF;
	  } else if (placeHolders === 1) {
	    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;
	    arr[L++] = tmp >> 8 & 0xFF;
	    arr[L++] = tmp & 0xFF;
	  }

	  return arr;
	}

	function tripletToBase64(num) {
	  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];
	}

	function encodeChunk(uint8, start, end) {
	  var tmp;
	  var output = [];

	  for (var i = start; i < end; i += 3) {
	    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + uint8[i + 2];
	    output.push(tripletToBase64(tmp));
	  }

	  return output.join('');
	}

	function fromByteArray(uint8) {
	  if (!inited) {
	    init();
	  }

	  var tmp;
	  var len = uint8.length;
	  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes

	  var output = '';
	  var parts = [];
	  var maxChunkLength = 16383; // must be multiple of 3
	  // go through the array every three bytes, we'll deal with trailing stuff later

	  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
	    parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));
	  } // pad the end with zeros, but make sure to not forget the extra bytes


	  if (extraBytes === 1) {
	    tmp = uint8[len - 1];
	    output += lookup[tmp >> 2];
	    output += lookup[tmp << 4 & 0x3F];
	    output += '==';
	  } else if (extraBytes === 2) {
	    tmp = (uint8[len - 2] << 8) + uint8[len - 1];
	    output += lookup[tmp >> 10];
	    output += lookup[tmp >> 4 & 0x3F];
	    output += lookup[tmp << 2 & 0x3F];
	    output += '=';
	  }

	  parts.push(output);
	  return parts.join('');
	}

	function read(buffer, offset, isLE, mLen, nBytes) {
	  var e, m;
	  var eLen = nBytes * 8 - mLen - 1;
	  var eMax = (1 << eLen) - 1;
	  var eBias = eMax >> 1;
	  var nBits = -7;
	  var i = isLE ? nBytes - 1 : 0;
	  var d = isLE ? -1 : 1;
	  var s = buffer[offset + i];
	  i += d;
	  e = s & (1 << -nBits) - 1;
	  s >>= -nBits;
	  nBits += eLen;

	  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

	  m = e & (1 << -nBits) - 1;
	  e >>= -nBits;
	  nBits += mLen;

	  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

	  if (e === 0) {
	    e = 1 - eBias;
	  } else if (e === eMax) {
	    return m ? NaN : (s ? -1 : 1) * Infinity;
	  } else {
	    m = m + Math.pow(2, mLen);
	    e = e - eBias;
	  }

	  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);
	}
	function write(buffer, value, offset, isLE, mLen, nBytes) {
	  var e, m, c;
	  var eLen = nBytes * 8 - mLen - 1;
	  var eMax = (1 << eLen) - 1;
	  var eBias = eMax >> 1;
	  var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;
	  var i = isLE ? 0 : nBytes - 1;
	  var d = isLE ? 1 : -1;
	  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;
	  value = Math.abs(value);

	  if (isNaN(value) || value === Infinity) {
	    m = isNaN(value) ? 1 : 0;
	    e = eMax;
	  } else {
	    e = Math.floor(Math.log(value) / Math.LN2);

	    if (value * (c = Math.pow(2, -e)) < 1) {
	      e--;
	      c *= 2;
	    }

	    if (e + eBias >= 1) {
	      value += rt / c;
	    } else {
	      value += rt * Math.pow(2, 1 - eBias);
	    }

	    if (value * c >= 2) {
	      e++;
	      c /= 2;
	    }

	    if (e + eBias >= eMax) {
	      m = 0;
	      e = eMax;
	    } else if (e + eBias >= 1) {
	      m = (value * c - 1) * Math.pow(2, mLen);
	      e = e + eBias;
	    } else {
	      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
	      e = 0;
	    }
	  }

	  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

	  e = e << mLen | m;
	  eLen += mLen;

	  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

	  buffer[offset + i - d] |= s * 128;
	}

	var toString = {}.toString;
	var isArray = Array.isArray || function (arr) {
	  return toString.call(arr) == '[object Array]';
	};

	var INSPECT_MAX_BYTES = 50;
	/**
	 * If `Buffer.TYPED_ARRAY_SUPPORT`:
	 *   === true    Use Uint8Array implementation (fastest)
	 *   === false   Use Object implementation (most compatible, even IE6)
	 *
	 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
	 * Opera 11.6+, iOS 4.2+.
	 *
	 * Due to various browser bugs, sometimes the Object implementation will be used even
	 * when the browser supports typed arrays.
	 *
	 * Note:
	 *
	 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
	 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
	 *
	 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
	 *
	 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
	 *     incorrect length in some situations.

	 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
	 * get the Object implementation, which is slower but behaves correctly.
	 */

	Buffer.TYPED_ARRAY_SUPPORT = global$1.TYPED_ARRAY_SUPPORT !== undefined ? global$1.TYPED_ARRAY_SUPPORT : true;
	/*
	 * Export kMaxLength after typed array support is determined.
	 */

	var _kMaxLength = kMaxLength();

	function kMaxLength() {
	  return Buffer.TYPED_ARRAY_SUPPORT ? 0x7fffffff : 0x3fffffff;
	}

	function createBuffer(that, length) {
	  if (kMaxLength() < length) {
	    throw new RangeError('Invalid typed array length');
	  }

	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    // Return an augmented `Uint8Array` instance, for best performance
	    that = new Uint8Array(length);
	    that.__proto__ = Buffer.prototype;
	  } else {
	    // Fallback: Return an object instance of the Buffer class
	    if (that === null) {
	      that = new Buffer(length);
	    }

	    that.length = length;
	  }

	  return that;
	}
	/**
	 * The Buffer constructor returns instances of `Uint8Array` that have their
	 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
	 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
	 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
	 * returns a single octet.
	 *
	 * The `Uint8Array` prototype remains unmodified.
	 */


	function Buffer(arg, encodingOrOffset, length) {
	  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
	    return new Buffer(arg, encodingOrOffset, length);
	  } // Common case.


	  if (typeof arg === 'number') {
	    if (typeof encodingOrOffset === 'string') {
	      throw new Error('If encoding is specified then the first argument must be a string');
	    }

	    return allocUnsafe(this, arg);
	  }

	  return from(this, arg, encodingOrOffset, length);
	}
	Buffer.poolSize = 8192; // not used by this implementation
	// TODO: Legacy, not needed anymore. Remove in next major version.

	Buffer._augment = function (arr) {
	  arr.__proto__ = Buffer.prototype;
	  return arr;
	};

	function from(that, value, encodingOrOffset, length) {
	  if (typeof value === 'number') {
	    throw new TypeError('"value" argument must not be a number');
	  }

	  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
	    return fromArrayBuffer(that, value, encodingOrOffset, length);
	  }

	  if (typeof value === 'string') {
	    return fromString(that, value, encodingOrOffset);
	  }

	  return fromObject(that, value);
	}
	/**
	 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
	 * if value is a number.
	 * Buffer.from(str[, encoding])
	 * Buffer.from(array)
	 * Buffer.from(buffer)
	 * Buffer.from(arrayBuffer[, byteOffset[, length]])
	 **/


	Buffer.from = function (value, encodingOrOffset, length) {
	  return from(null, value, encodingOrOffset, length);
	};

	if (Buffer.TYPED_ARRAY_SUPPORT) {
	  Buffer.prototype.__proto__ = Uint8Array.prototype;
	  Buffer.__proto__ = Uint8Array;
	}

	function assertSize(size) {
	  if (typeof size !== 'number') {
	    throw new TypeError('"size" argument must be a number');
	  } else if (size < 0) {
	    throw new RangeError('"size" argument must not be negative');
	  }
	}

	function alloc(that, size, fill, encoding) {
	  assertSize(size);

	  if (size <= 0) {
	    return createBuffer(that, size);
	  }

	  if (fill !== undefined) {
	    // Only pay attention to encoding if it's a string. This
	    // prevents accidentally sending in a number that would
	    // be interpretted as a start offset.
	    return typeof encoding === 'string' ? createBuffer(that, size).fill(fill, encoding) : createBuffer(that, size).fill(fill);
	  }

	  return createBuffer(that, size);
	}
	/**
	 * Creates a new filled Buffer instance.
	 * alloc(size[, fill[, encoding]])
	 **/


	Buffer.alloc = function (size, fill, encoding) {
	  return alloc(null, size, fill, encoding);
	};

	function allocUnsafe(that, size) {
	  assertSize(size);
	  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);

	  if (!Buffer.TYPED_ARRAY_SUPPORT) {
	    for (var i = 0; i < size; ++i) {
	      that[i] = 0;
	    }
	  }

	  return that;
	}
	/**
	 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
	 * */


	Buffer.allocUnsafe = function (size) {
	  return allocUnsafe(null, size);
	};
	/**
	 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
	 */


	Buffer.allocUnsafeSlow = function (size) {
	  return allocUnsafe(null, size);
	};

	function fromString(that, string, encoding) {
	  if (typeof encoding !== 'string' || encoding === '') {
	    encoding = 'utf8';
	  }

	  if (!Buffer.isEncoding(encoding)) {
	    throw new TypeError('"encoding" must be a valid string encoding');
	  }

	  var length = byteLength(string, encoding) | 0;
	  that = createBuffer(that, length);
	  var actual = that.write(string, encoding);

	  if (actual !== length) {
	    // Writing a hex string, for example, that contains invalid characters will
	    // cause everything after the first invalid character to be ignored. (e.g.
	    // 'abxxcd' will be treated as 'ab')
	    that = that.slice(0, actual);
	  }

	  return that;
	}

	function fromArrayLike(that, array) {
	  var length = array.length < 0 ? 0 : checked(array.length) | 0;
	  that = createBuffer(that, length);

	  for (var i = 0; i < length; i += 1) {
	    that[i] = array[i] & 255;
	  }

	  return that;
	}

	function fromArrayBuffer(that, array, byteOffset, length) {
	  array.byteLength; // this throws if `array` is not a valid ArrayBuffer

	  if (byteOffset < 0 || array.byteLength < byteOffset) {
	    throw new RangeError('\'offset\' is out of bounds');
	  }

	  if (array.byteLength < byteOffset + (length || 0)) {
	    throw new RangeError('\'length\' is out of bounds');
	  }

	  if (byteOffset === undefined && length === undefined) {
	    array = new Uint8Array(array);
	  } else if (length === undefined) {
	    array = new Uint8Array(array, byteOffset);
	  } else {
	    array = new Uint8Array(array, byteOffset, length);
	  }

	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    // Return an augmented `Uint8Array` instance, for best performance
	    that = array;
	    that.__proto__ = Buffer.prototype;
	  } else {
	    // Fallback: Return an object instance of the Buffer class
	    that = fromArrayLike(that, array);
	  }

	  return that;
	}

	function fromObject(that, obj) {
	  if (internalIsBuffer(obj)) {
	    var len = checked(obj.length) | 0;
	    that = createBuffer(that, len);

	    if (that.length === 0) {
	      return that;
	    }

	    obj.copy(that, 0, 0, len);
	    return that;
	  }

	  if (obj) {
	    if (typeof ArrayBuffer !== 'undefined' && obj.buffer instanceof ArrayBuffer || 'length' in obj) {
	      if (typeof obj.length !== 'number' || isnan(obj.length)) {
	        return createBuffer(that, 0);
	      }

	      return fromArrayLike(that, obj);
	    }

	    if (obj.type === 'Buffer' && isArray(obj.data)) {
	      return fromArrayLike(that, obj.data);
	    }
	  }

	  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.');
	}

	function checked(length) {
	  // Note: cannot use `length < kMaxLength()` here because that fails when
	  // length is NaN (which is otherwise coerced to zero.)
	  if (length >= kMaxLength()) {
	    throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + kMaxLength().toString(16) + ' bytes');
	  }

	  return length | 0;
	}

	function SlowBuffer(length) {
	  if (+length != length) {
	    // eslint-disable-line eqeqeq
	    length = 0;
	  }

	  return Buffer.alloc(+length);
	}
	Buffer.isBuffer = isBuffer;

	function internalIsBuffer(b) {
	  return !!(b != null && b._isBuffer);
	}

	Buffer.compare = function compare(a, b) {
	  if (!internalIsBuffer(a) || !internalIsBuffer(b)) {
	    throw new TypeError('Arguments must be Buffers');
	  }

	  if (a === b) return 0;
	  var x = a.length;
	  var y = b.length;

	  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
	    if (a[i] !== b[i]) {
	      x = a[i];
	      y = b[i];
	      break;
	    }
	  }

	  if (x < y) return -1;
	  if (y < x) return 1;
	  return 0;
	};

	Buffer.isEncoding = function isEncoding(encoding) {
	  switch (String(encoding).toLowerCase()) {
	    case 'hex':
	    case 'utf8':
	    case 'utf-8':
	    case 'ascii':
	    case 'latin1':
	    case 'binary':
	    case 'base64':
	    case 'ucs2':
	    case 'ucs-2':
	    case 'utf16le':
	    case 'utf-16le':
	      return true;

	    default:
	      return false;
	  }
	};

	Buffer.concat = function concat(list, length) {
	  if (!isArray(list)) {
	    throw new TypeError('"list" argument must be an Array of Buffers');
	  }

	  if (list.length === 0) {
	    return Buffer.alloc(0);
	  }

	  var i;

	  if (length === undefined) {
	    length = 0;

	    for (i = 0; i < list.length; ++i) {
	      length += list[i].length;
	    }
	  }

	  var buffer = Buffer.allocUnsafe(length);
	  var pos = 0;

	  for (i = 0; i < list.length; ++i) {
	    var buf = list[i];

	    if (!internalIsBuffer(buf)) {
	      throw new TypeError('"list" argument must be an Array of Buffers');
	    }

	    buf.copy(buffer, pos);
	    pos += buf.length;
	  }

	  return buffer;
	};

	function byteLength(string, encoding) {
	  if (internalIsBuffer(string)) {
	    return string.length;
	  }

	  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' && (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
	    return string.byteLength;
	  }

	  if (typeof string !== 'string') {
	    string = '' + string;
	  }

	  var len = string.length;
	  if (len === 0) return 0; // Use a for loop to avoid recursion

	  var loweredCase = false;

	  for (;;) {
	    switch (encoding) {
	      case 'ascii':
	      case 'latin1':
	      case 'binary':
	        return len;

	      case 'utf8':
	      case 'utf-8':
	      case undefined:
	        return utf8ToBytes(string).length;

	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return len * 2;

	      case 'hex':
	        return len >>> 1;

	      case 'base64':
	        return base64ToBytes(string).length;

	      default:
	        if (loweredCase) return utf8ToBytes(string).length; // assume utf8

	        encoding = ('' + encoding).toLowerCase();
	        loweredCase = true;
	    }
	  }
	}

	Buffer.byteLength = byteLength;

	function slowToString(encoding, start, end) {
	  var loweredCase = false; // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
	  // property of a typed array.
	  // This behaves neither like String nor Uint8Array in that we set start/end
	  // to their upper/lower bounds if the value passed is out of range.
	  // undefined is handled specially as per ECMA-262 6th Edition,
	  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.

	  if (start === undefined || start < 0) {
	    start = 0;
	  } // Return early if start > this.length. Done here to prevent potential uint32
	  // coercion fail below.


	  if (start > this.length) {
	    return '';
	  }

	  if (end === undefined || end > this.length) {
	    end = this.length;
	  }

	  if (end <= 0) {
	    return '';
	  } // Force coersion to uint32. This will also coerce falsey/NaN values to 0.


	  end >>>= 0;
	  start >>>= 0;

	  if (end <= start) {
	    return '';
	  }

	  if (!encoding) encoding = 'utf8';

	  while (true) {
	    switch (encoding) {
	      case 'hex':
	        return hexSlice(this, start, end);

	      case 'utf8':
	      case 'utf-8':
	        return utf8Slice(this, start, end);

	      case 'ascii':
	        return asciiSlice(this, start, end);

	      case 'latin1':
	      case 'binary':
	        return latin1Slice(this, start, end);

	      case 'base64':
	        return base64Slice(this, start, end);

	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return utf16leSlice(this, start, end);

	      default:
	        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);
	        encoding = (encoding + '').toLowerCase();
	        loweredCase = true;
	    }
	  }
	} // The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
	// Buffer instances.


	Buffer.prototype._isBuffer = true;

	function swap(b, n, m) {
	  var i = b[n];
	  b[n] = b[m];
	  b[m] = i;
	}

	Buffer.prototype.swap16 = function swap16() {
	  var len = this.length;

	  if (len % 2 !== 0) {
	    throw new RangeError('Buffer size must be a multiple of 16-bits');
	  }

	  for (var i = 0; i < len; i += 2) {
	    swap(this, i, i + 1);
	  }

	  return this;
	};

	Buffer.prototype.swap32 = function swap32() {
	  var len = this.length;

	  if (len % 4 !== 0) {
	    throw new RangeError('Buffer size must be a multiple of 32-bits');
	  }

	  for (var i = 0; i < len; i += 4) {
	    swap(this, i, i + 3);
	    swap(this, i + 1, i + 2);
	  }

	  return this;
	};

	Buffer.prototype.swap64 = function swap64() {
	  var len = this.length;

	  if (len % 8 !== 0) {
	    throw new RangeError('Buffer size must be a multiple of 64-bits');
	  }

	  for (var i = 0; i < len; i += 8) {
	    swap(this, i, i + 7);
	    swap(this, i + 1, i + 6);
	    swap(this, i + 2, i + 5);
	    swap(this, i + 3, i + 4);
	  }

	  return this;
	};

	Buffer.prototype.toString = function toString() {
	  var length = this.length | 0;
	  if (length === 0) return '';
	  if (arguments.length === 0) return utf8Slice(this, 0, length);
	  return slowToString.apply(this, arguments);
	};

	Buffer.prototype.equals = function equals(b) {
	  if (!internalIsBuffer(b)) throw new TypeError('Argument must be a Buffer');
	  if (this === b) return true;
	  return Buffer.compare(this, b) === 0;
	};

	Buffer.prototype.inspect = function inspect() {
	  var str = '';
	  var max = INSPECT_MAX_BYTES;

	  if (this.length > 0) {
	    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');
	    if (this.length > max) str += ' ... ';
	  }

	  return '<Buffer ' + str + '>';
	};

	Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {
	  if (!internalIsBuffer(target)) {
	    throw new TypeError('Argument must be a Buffer');
	  }

	  if (start === undefined) {
	    start = 0;
	  }

	  if (end === undefined) {
	    end = target ? target.length : 0;
	  }

	  if (thisStart === undefined) {
	    thisStart = 0;
	  }

	  if (thisEnd === undefined) {
	    thisEnd = this.length;
	  }

	  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
	    throw new RangeError('out of range index');
	  }

	  if (thisStart >= thisEnd && start >= end) {
	    return 0;
	  }

	  if (thisStart >= thisEnd) {
	    return -1;
	  }

	  if (start >= end) {
	    return 1;
	  }

	  start >>>= 0;
	  end >>>= 0;
	  thisStart >>>= 0;
	  thisEnd >>>= 0;
	  if (this === target) return 0;
	  var x = thisEnd - thisStart;
	  var y = end - start;
	  var len = Math.min(x, y);
	  var thisCopy = this.slice(thisStart, thisEnd);
	  var targetCopy = target.slice(start, end);

	  for (var i = 0; i < len; ++i) {
	    if (thisCopy[i] !== targetCopy[i]) {
	      x = thisCopy[i];
	      y = targetCopy[i];
	      break;
	    }
	  }

	  if (x < y) return -1;
	  if (y < x) return 1;
	  return 0;
	}; // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
	// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
	//
	// Arguments:
	// - buffer - a Buffer to search
	// - val - a string, Buffer, or number
	// - byteOffset - an index into `buffer`; will be clamped to an int32
	// - encoding - an optional encoding, relevant is val is a string
	// - dir - true for indexOf, false for lastIndexOf


	function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {
	  // Empty buffer means no match
	  if (buffer.length === 0) return -1; // Normalize byteOffset

	  if (typeof byteOffset === 'string') {
	    encoding = byteOffset;
	    byteOffset = 0;
	  } else if (byteOffset > 0x7fffffff) {
	    byteOffset = 0x7fffffff;
	  } else if (byteOffset < -0x80000000) {
	    byteOffset = -0x80000000;
	  }

	  byteOffset = +byteOffset; // Coerce to Number.

	  if (isNaN(byteOffset)) {
	    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
	    byteOffset = dir ? 0 : buffer.length - 1;
	  } // Normalize byteOffset: negative offsets start from the end of the buffer


	  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;

	  if (byteOffset >= buffer.length) {
	    if (dir) return -1;else byteOffset = buffer.length - 1;
	  } else if (byteOffset < 0) {
	    if (dir) byteOffset = 0;else return -1;
	  } // Normalize val


	  if (typeof val === 'string') {
	    val = Buffer.from(val, encoding);
	  } // Finally, search either indexOf (if dir is true) or lastIndexOf


	  if (internalIsBuffer(val)) {
	    // Special case: looking for empty string/buffer always fails
	    if (val.length === 0) {
	      return -1;
	    }

	    return arrayIndexOf(buffer, val, byteOffset, encoding, dir);
	  } else if (typeof val === 'number') {
	    val = val & 0xFF; // Search for a byte value [0-255]

	    if (Buffer.TYPED_ARRAY_SUPPORT && typeof Uint8Array.prototype.indexOf === 'function') {
	      if (dir) {
	        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);
	      } else {
	        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);
	      }
	    }

	    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);
	  }

	  throw new TypeError('val must be string, number or Buffer');
	}

	function arrayIndexOf(arr, val, byteOffset, encoding, dir) {
	  var indexSize = 1;
	  var arrLength = arr.length;
	  var valLength = val.length;

	  if (encoding !== undefined) {
	    encoding = String(encoding).toLowerCase();

	    if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {
	      if (arr.length < 2 || val.length < 2) {
	        return -1;
	      }

	      indexSize = 2;
	      arrLength /= 2;
	      valLength /= 2;
	      byteOffset /= 2;
	    }
	  }

	  function read$$1(buf, i) {
	    if (indexSize === 1) {
	      return buf[i];
	    } else {
	      return buf.readUInt16BE(i * indexSize);
	    }
	  }

	  var i;

	  if (dir) {
	    var foundIndex = -1;

	    for (i = byteOffset; i < arrLength; i++) {
	      if (read$$1(arr, i) === read$$1(val, foundIndex === -1 ? 0 : i - foundIndex)) {
	        if (foundIndex === -1) foundIndex = i;
	        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;
	      } else {
	        if (foundIndex !== -1) i -= i - foundIndex;
	        foundIndex = -1;
	      }
	    }
	  } else {
	    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;

	    for (i = byteOffset; i >= 0; i--) {
	      var found = true;

	      for (var j = 0; j < valLength; j++) {
	        if (read$$1(arr, i + j) !== read$$1(val, j)) {
	          found = false;
	          break;
	        }
	      }

	      if (found) return i;
	    }
	  }

	  return -1;
	}

	Buffer.prototype.includes = function includes(val, byteOffset, encoding) {
	  return this.indexOf(val, byteOffset, encoding) !== -1;
	};

	Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {
	  return bidirectionalIndexOf(this, val, byteOffset, encoding, true);
	};

	Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {
	  return bidirectionalIndexOf(this, val, byteOffset, encoding, false);
	};

	function hexWrite(buf, string, offset, length) {
	  offset = Number(offset) || 0;
	  var remaining = buf.length - offset;

	  if (!length) {
	    length = remaining;
	  } else {
	    length = Number(length);

	    if (length > remaining) {
	      length = remaining;
	    }
	  } // must be an even number of digits


	  var strLen = string.length;
	  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string');

	  if (length > strLen / 2) {
	    length = strLen / 2;
	  }

	  for (var i = 0; i < length; ++i) {
	    var parsed = parseInt(string.substr(i * 2, 2), 16);
	    if (isNaN(parsed)) return i;
	    buf[offset + i] = parsed;
	  }

	  return i;
	}

	function utf8Write(buf, string, offset, length) {
	  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);
	}

	function asciiWrite(buf, string, offset, length) {
	  return blitBuffer(asciiToBytes(string), buf, offset, length);
	}

	function latin1Write(buf, string, offset, length) {
	  return asciiWrite(buf, string, offset, length);
	}

	function base64Write(buf, string, offset, length) {
	  return blitBuffer(base64ToBytes(string), buf, offset, length);
	}

	function ucs2Write(buf, string, offset, length) {
	  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);
	}

	Buffer.prototype.write = function write$$1(string, offset, length, encoding) {
	  // Buffer#write(string)
	  if (offset === undefined) {
	    encoding = 'utf8';
	    length = this.length;
	    offset = 0; // Buffer#write(string, encoding)
	  } else if (length === undefined && typeof offset === 'string') {
	    encoding = offset;
	    length = this.length;
	    offset = 0; // Buffer#write(string, offset[, length][, encoding])
	  } else if (isFinite(offset)) {
	    offset = offset | 0;

	    if (isFinite(length)) {
	      length = length | 0;
	      if (encoding === undefined) encoding = 'utf8';
	    } else {
	      encoding = length;
	      length = undefined;
	    } // legacy write(string, encoding, offset, length) - remove in v0.13

	  } else {
	    throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');
	  }

	  var remaining = this.length - offset;
	  if (length === undefined || length > remaining) length = remaining;

	  if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {
	    throw new RangeError('Attempt to write outside buffer bounds');
	  }

	  if (!encoding) encoding = 'utf8';
	  var loweredCase = false;

	  for (;;) {
	    switch (encoding) {
	      case 'hex':
	        return hexWrite(this, string, offset, length);

	      case 'utf8':
	      case 'utf-8':
	        return utf8Write(this, string, offset, length);

	      case 'ascii':
	        return asciiWrite(this, string, offset, length);

	      case 'latin1':
	      case 'binary':
	        return latin1Write(this, string, offset, length);

	      case 'base64':
	        // Warning: maxLength not taken into account in base64Write
	        return base64Write(this, string, offset, length);

	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return ucs2Write(this, string, offset, length);

	      default:
	        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);
	        encoding = ('' + encoding).toLowerCase();
	        loweredCase = true;
	    }
	  }
	};

	Buffer.prototype.toJSON = function toJSON() {
	  return {
	    type: 'Buffer',
	    data: Array.prototype.slice.call(this._arr || this, 0)
	  };
	};

	function base64Slice(buf, start, end) {
	  if (start === 0 && end === buf.length) {
	    return fromByteArray(buf);
	  } else {
	    return fromByteArray(buf.slice(start, end));
	  }
	}

	function utf8Slice(buf, start, end) {
	  end = Math.min(buf.length, end);
	  var res = [];
	  var i = start;

	  while (i < end) {
	    var firstByte = buf[i];
	    var codePoint = null;
	    var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;

	    if (i + bytesPerSequence <= end) {
	      var secondByte, thirdByte, fourthByte, tempCodePoint;

	      switch (bytesPerSequence) {
	        case 1:
	          if (firstByte < 0x80) {
	            codePoint = firstByte;
	          }

	          break;

	        case 2:
	          secondByte = buf[i + 1];

	          if ((secondByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;

	            if (tempCodePoint > 0x7F) {
	              codePoint = tempCodePoint;
	            }
	          }

	          break;

	        case 3:
	          secondByte = buf[i + 1];
	          thirdByte = buf[i + 2];

	          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;

	            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
	              codePoint = tempCodePoint;
	            }
	          }

	          break;

	        case 4:
	          secondByte = buf[i + 1];
	          thirdByte = buf[i + 2];
	          fourthByte = buf[i + 3];

	          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;

	            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
	              codePoint = tempCodePoint;
	            }
	          }

	      }
	    }

	    if (codePoint === null) {
	      // we did not generate a valid codePoint so insert a
	      // replacement char (U+FFFD) and advance only 1 byte
	      codePoint = 0xFFFD;
	      bytesPerSequence = 1;
	    } else if (codePoint > 0xFFFF) {
	      // encode to utf16 (surrogate pair dance)
	      codePoint -= 0x10000;
	      res.push(codePoint >>> 10 & 0x3FF | 0xD800);
	      codePoint = 0xDC00 | codePoint & 0x3FF;
	    }

	    res.push(codePoint);
	    i += bytesPerSequence;
	  }

	  return decodeCodePointsArray(res);
	} // Based on http://stackoverflow.com/a/22747272/680742, the browser with
	// the lowest limit is Chrome, with 0x10000 args.
	// We go 1 magnitude less, for safety


	var MAX_ARGUMENTS_LENGTH = 0x1000;

	function decodeCodePointsArray(codePoints) {
	  var len = codePoints.length;

	  if (len <= MAX_ARGUMENTS_LENGTH) {
	    return String.fromCharCode.apply(String, codePoints); // avoid extra slice()
	  } // Decode in chunks to avoid "call stack size exceeded".


	  var res = '';
	  var i = 0;

	  while (i < len) {
	    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));
	  }

	  return res;
	}

	function asciiSlice(buf, start, end) {
	  var ret = '';
	  end = Math.min(buf.length, end);

	  for (var i = start; i < end; ++i) {
	    ret += String.fromCharCode(buf[i] & 0x7F);
	  }

	  return ret;
	}

	function latin1Slice(buf, start, end) {
	  var ret = '';
	  end = Math.min(buf.length, end);

	  for (var i = start; i < end; ++i) {
	    ret += String.fromCharCode(buf[i]);
	  }

	  return ret;
	}

	function hexSlice(buf, start, end) {
	  var len = buf.length;
	  if (!start || start < 0) start = 0;
	  if (!end || end < 0 || end > len) end = len;
	  var out = '';

	  for (var i = start; i < end; ++i) {
	    out += toHex(buf[i]);
	  }

	  return out;
	}

	function utf16leSlice(buf, start, end) {
	  var bytes = buf.slice(start, end);
	  var res = '';

	  for (var i = 0; i < bytes.length; i += 2) {
	    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);
	  }

	  return res;
	}

	Buffer.prototype.slice = function slice(start, end) {
	  var len = this.length;
	  start = ~~start;
	  end = end === undefined ? len : ~~end;

	  if (start < 0) {
	    start += len;
	    if (start < 0) start = 0;
	  } else if (start > len) {
	    start = len;
	  }

	  if (end < 0) {
	    end += len;
	    if (end < 0) end = 0;
	  } else if (end > len) {
	    end = len;
	  }

	  if (end < start) end = start;
	  var newBuf;

	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    newBuf = this.subarray(start, end);
	    newBuf.__proto__ = Buffer.prototype;
	  } else {
	    var sliceLen = end - start;
	    newBuf = new Buffer(sliceLen, undefined);

	    for (var i = 0; i < sliceLen; ++i) {
	      newBuf[i] = this[i + start];
	    }
	  }

	  return newBuf;
	};
	/*
	 * Need to make sure that buffer isn't trying to write out of bounds.
	 */


	function checkOffset(offset, ext, length) {
	  if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');
	  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');
	}

	Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {
	  offset = offset | 0;
	  byteLength = byteLength | 0;
	  if (!noAssert) checkOffset(offset, byteLength, this.length);
	  var val = this[offset];
	  var mul = 1;
	  var i = 0;

	  while (++i < byteLength && (mul *= 0x100)) {
	    val += this[offset + i] * mul;
	  }

	  return val;
	};

	Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {
	  offset = offset | 0;
	  byteLength = byteLength | 0;

	  if (!noAssert) {
	    checkOffset(offset, byteLength, this.length);
	  }

	  var val = this[offset + --byteLength];
	  var mul = 1;

	  while (byteLength > 0 && (mul *= 0x100)) {
	    val += this[offset + --byteLength] * mul;
	  }

	  return val;
	};

	Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 1, this.length);
	  return this[offset];
	};

	Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length);
	  return this[offset] | this[offset + 1] << 8;
	};

	Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length);
	  return this[offset] << 8 | this[offset + 1];
	};

	Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length);
	  return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;
	};

	Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length);
	  return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);
	};

	Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {
	  offset = offset | 0;
	  byteLength = byteLength | 0;
	  if (!noAssert) checkOffset(offset, byteLength, this.length);
	  var val = this[offset];
	  var mul = 1;
	  var i = 0;

	  while (++i < byteLength && (mul *= 0x100)) {
	    val += this[offset + i] * mul;
	  }

	  mul *= 0x80;
	  if (val >= mul) val -= Math.pow(2, 8 * byteLength);
	  return val;
	};

	Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {
	  offset = offset | 0;
	  byteLength = byteLength | 0;
	  if (!noAssert) checkOffset(offset, byteLength, this.length);
	  var i = byteLength;
	  var mul = 1;
	  var val = this[offset + --i];

	  while (i > 0 && (mul *= 0x100)) {
	    val += this[offset + --i] * mul;
	  }

	  mul *= 0x80;
	  if (val >= mul) val -= Math.pow(2, 8 * byteLength);
	  return val;
	};

	Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 1, this.length);
	  if (!(this[offset] & 0x80)) return this[offset];
	  return (0xff - this[offset] + 1) * -1;
	};

	Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length);
	  var val = this[offset] | this[offset + 1] << 8;
	  return val & 0x8000 ? val | 0xFFFF0000 : val;
	};

	Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length);
	  var val = this[offset + 1] | this[offset] << 8;
	  return val & 0x8000 ? val | 0xFFFF0000 : val;
	};

	Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length);
	  return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;
	};

	Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length);
	  return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];
	};

	Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length);
	  return read(this, offset, true, 23, 4);
	};

	Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length);
	  return read(this, offset, false, 23, 4);
	};

	Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 8, this.length);
	  return read(this, offset, true, 52, 8);
	};

	Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 8, this.length);
	  return read(this, offset, false, 52, 8);
	};

	function checkInt(buf, value, offset, ext, max, min) {
	  if (!internalIsBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance');
	  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds');
	  if (offset + ext > buf.length) throw new RangeError('Index out of range');
	}

	Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {
	  value = +value;
	  offset = offset | 0;
	  byteLength = byteLength | 0;

	  if (!noAssert) {
	    var maxBytes = Math.pow(2, 8 * byteLength) - 1;
	    checkInt(this, value, offset, byteLength, maxBytes, 0);
	  }

	  var mul = 1;
	  var i = 0;
	  this[offset] = value & 0xFF;

	  while (++i < byteLength && (mul *= 0x100)) {
	    this[offset + i] = value / mul & 0xFF;
	  }

	  return offset + byteLength;
	};

	Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {
	  value = +value;
	  offset = offset | 0;
	  byteLength = byteLength | 0;

	  if (!noAssert) {
	    var maxBytes = Math.pow(2, 8 * byteLength) - 1;
	    checkInt(this, value, offset, byteLength, maxBytes, 0);
	  }

	  var i = byteLength - 1;
	  var mul = 1;
	  this[offset + i] = value & 0xFF;

	  while (--i >= 0 && (mul *= 0x100)) {
	    this[offset + i] = value / mul & 0xFF;
	  }

	  return offset + byteLength;
	};

	Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {
	  value = +value;
	  offset = offset | 0;
	  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);
	  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);
	  this[offset] = value & 0xff;
	  return offset + 1;
	};

	function objectWriteUInt16(buf, value, offset, littleEndian) {
	  if (value < 0) value = 0xffff + value + 1;

	  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
	    buf[offset + i] = (value & 0xff << 8 * (littleEndian ? i : 1 - i)) >>> (littleEndian ? i : 1 - i) * 8;
	  }
	}

	Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {
	  value = +value;
	  offset = offset | 0;
	  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);

	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = value & 0xff;
	    this[offset + 1] = value >>> 8;
	  } else {
	    objectWriteUInt16(this, value, offset, true);
	  }

	  return offset + 2;
	};

	Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {
	  value = +value;
	  offset = offset | 0;
	  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);

	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = value >>> 8;
	    this[offset + 1] = value & 0xff;
	  } else {
	    objectWriteUInt16(this, value, offset, false);
	  }

	  return offset + 2;
	};

	function objectWriteUInt32(buf, value, offset, littleEndian) {
	  if (value < 0) value = 0xffffffff + value + 1;

	  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
	    buf[offset + i] = value >>> (littleEndian ? i : 3 - i) * 8 & 0xff;
	  }
	}

	Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {
	  value = +value;
	  offset = offset | 0;
	  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);

	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset + 3] = value >>> 24;
	    this[offset + 2] = value >>> 16;
	    this[offset + 1] = value >>> 8;
	    this[offset] = value & 0xff;
	  } else {
	    objectWriteUInt32(this, value, offset, true);
	  }

	  return offset + 4;
	};

	Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {
	  value = +value;
	  offset = offset | 0;
	  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);

	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = value >>> 24;
	    this[offset + 1] = value >>> 16;
	    this[offset + 2] = value >>> 8;
	    this[offset + 3] = value & 0xff;
	  } else {
	    objectWriteUInt32(this, value, offset, false);
	  }

	  return offset + 4;
	};

	Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {
	  value = +value;
	  offset = offset | 0;

	  if (!noAssert) {
	    var limit = Math.pow(2, 8 * byteLength - 1);
	    checkInt(this, value, offset, byteLength, limit - 1, -limit);
	  }

	  var i = 0;
	  var mul = 1;
	  var sub = 0;
	  this[offset] = value & 0xFF;

	  while (++i < byteLength && (mul *= 0x100)) {
	    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
	      sub = 1;
	    }

	    this[offset + i] = (value / mul >> 0) - sub & 0xFF;
	  }

	  return offset + byteLength;
	};

	Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {
	  value = +value;
	  offset = offset | 0;

	  if (!noAssert) {
	    var limit = Math.pow(2, 8 * byteLength - 1);
	    checkInt(this, value, offset, byteLength, limit - 1, -limit);
	  }

	  var i = byteLength - 1;
	  var mul = 1;
	  var sub = 0;
	  this[offset + i] = value & 0xFF;

	  while (--i >= 0 && (mul *= 0x100)) {
	    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
	      sub = 1;
	    }

	    this[offset + i] = (value / mul >> 0) - sub & 0xFF;
	  }

	  return offset + byteLength;
	};

	Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {
	  value = +value;
	  offset = offset | 0;
	  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);
	  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);
	  if (value < 0) value = 0xff + value + 1;
	  this[offset] = value & 0xff;
	  return offset + 1;
	};

	Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {
	  value = +value;
	  offset = offset | 0;
	  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);

	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = value & 0xff;
	    this[offset + 1] = value >>> 8;
	  } else {
	    objectWriteUInt16(this, value, offset, true);
	  }

	  return offset + 2;
	};

	Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {
	  value = +value;
	  offset = offset | 0;
	  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);

	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = value >>> 8;
	    this[offset + 1] = value & 0xff;
	  } else {
	    objectWriteUInt16(this, value, offset, false);
	  }

	  return offset + 2;
	};

	Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {
	  value = +value;
	  offset = offset | 0;
	  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);

	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = value & 0xff;
	    this[offset + 1] = value >>> 8;
	    this[offset + 2] = value >>> 16;
	    this[offset + 3] = value >>> 24;
	  } else {
	    objectWriteUInt32(this, value, offset, true);
	  }

	  return offset + 4;
	};

	Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {
	  value = +value;
	  offset = offset | 0;
	  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);
	  if (value < 0) value = 0xffffffff + value + 1;

	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = value >>> 24;
	    this[offset + 1] = value >>> 16;
	    this[offset + 2] = value >>> 8;
	    this[offset + 3] = value & 0xff;
	  } else {
	    objectWriteUInt32(this, value, offset, false);
	  }

	  return offset + 4;
	};

	function checkIEEE754(buf, value, offset, ext, max, min) {
	  if (offset + ext > buf.length) throw new RangeError('Index out of range');
	  if (offset < 0) throw new RangeError('Index out of range');
	}

	function writeFloat(buf, value, offset, littleEndian, noAssert) {
	  if (!noAssert) {
	    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);
	  }

	  write(buf, value, offset, littleEndian, 23, 4);
	  return offset + 4;
	}

	Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {
	  return writeFloat(this, value, offset, true, noAssert);
	};

	Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {
	  return writeFloat(this, value, offset, false, noAssert);
	};

	function writeDouble(buf, value, offset, littleEndian, noAssert) {
	  if (!noAssert) {
	    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);
	  }

	  write(buf, value, offset, littleEndian, 52, 8);
	  return offset + 8;
	}

	Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {
	  return writeDouble(this, value, offset, true, noAssert);
	};

	Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {
	  return writeDouble(this, value, offset, false, noAssert);
	}; // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)


	Buffer.prototype.copy = function copy(target, targetStart, start, end) {
	  if (!start) start = 0;
	  if (!end && end !== 0) end = this.length;
	  if (targetStart >= target.length) targetStart = target.length;
	  if (!targetStart) targetStart = 0;
	  if (end > 0 && end < start) end = start; // Copy 0 bytes; we're done

	  if (end === start) return 0;
	  if (target.length === 0 || this.length === 0) return 0; // Fatal error conditions

	  if (targetStart < 0) {
	    throw new RangeError('targetStart out of bounds');
	  }

	  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds');
	  if (end < 0) throw new RangeError('sourceEnd out of bounds'); // Are we oob?

	  if (end > this.length) end = this.length;

	  if (target.length - targetStart < end - start) {
	    end = target.length - targetStart + start;
	  }

	  var len = end - start;
	  var i;

	  if (this === target && start < targetStart && targetStart < end) {
	    // descending copy from end
	    for (i = len - 1; i >= 0; --i) {
	      target[i + targetStart] = this[i + start];
	    }
	  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
	    // ascending copy from start
	    for (i = 0; i < len; ++i) {
	      target[i + targetStart] = this[i + start];
	    }
	  } else {
	    Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);
	  }

	  return len;
	}; // Usage:
	//    buffer.fill(number[, offset[, end]])
	//    buffer.fill(buffer[, offset[, end]])
	//    buffer.fill(string[, offset[, end]][, encoding])


	Buffer.prototype.fill = function fill(val, start, end, encoding) {
	  // Handle string cases:
	  if (typeof val === 'string') {
	    if (typeof start === 'string') {
	      encoding = start;
	      start = 0;
	      end = this.length;
	    } else if (typeof end === 'string') {
	      encoding = end;
	      end = this.length;
	    }

	    if (val.length === 1) {
	      var code = val.charCodeAt(0);

	      if (code < 256) {
	        val = code;
	      }
	    }

	    if (encoding !== undefined && typeof encoding !== 'string') {
	      throw new TypeError('encoding must be a string');
	    }

	    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
	      throw new TypeError('Unknown encoding: ' + encoding);
	    }
	  } else if (typeof val === 'number') {
	    val = val & 255;
	  } // Invalid ranges are not set to a default, so can range check early.


	  if (start < 0 || this.length < start || this.length < end) {
	    throw new RangeError('Out of range index');
	  }

	  if (end <= start) {
	    return this;
	  }

	  start = start >>> 0;
	  end = end === undefined ? this.length : end >>> 0;
	  if (!val) val = 0;
	  var i;

	  if (typeof val === 'number') {
	    for (i = start; i < end; ++i) {
	      this[i] = val;
	    }
	  } else {
	    var bytes = internalIsBuffer(val) ? val : utf8ToBytes(new Buffer(val, encoding).toString());
	    var len = bytes.length;

	    for (i = 0; i < end - start; ++i) {
	      this[i + start] = bytes[i % len];
	    }
	  }

	  return this;
	}; // HELPER FUNCTIONS
	// ================


	var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g;

	function base64clean(str) {
	  // Node strips out invalid characters like \n and \t from the string, base64-js does not
	  str = stringtrim(str).replace(INVALID_BASE64_RE, ''); // Node converts strings with length < 2 to ''

	  if (str.length < 2) return ''; // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not

	  while (str.length % 4 !== 0) {
	    str = str + '=';
	  }

	  return str;
	}

	function stringtrim(str) {
	  if (str.trim) return str.trim();
	  return str.replace(/^\s+|\s+$/g, '');
	}

	function toHex(n) {
	  if (n < 16) return '0' + n.toString(16);
	  return n.toString(16);
	}

	function utf8ToBytes(string, units) {
	  units = units || Infinity;
	  var codePoint;
	  var length = string.length;
	  var leadSurrogate = null;
	  var bytes = [];

	  for (var i = 0; i < length; ++i) {
	    codePoint = string.charCodeAt(i); // is surrogate component

	    if (codePoint > 0xD7FF && codePoint < 0xE000) {
	      // last char was a lead
	      if (!leadSurrogate) {
	        // no lead yet
	        if (codePoint > 0xDBFF) {
	          // unexpected trail
	          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
	          continue;
	        } else if (i + 1 === length) {
	          // unpaired lead
	          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
	          continue;
	        } // valid lead


	        leadSurrogate = codePoint;
	        continue;
	      } // 2 leads in a row


	      if (codePoint < 0xDC00) {
	        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
	        leadSurrogate = codePoint;
	        continue;
	      } // valid surrogate pair


	      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;
	    } else if (leadSurrogate) {
	      // valid bmp char, but last char was a lead
	      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
	    }

	    leadSurrogate = null; // encode utf8

	    if (codePoint < 0x80) {
	      if ((units -= 1) < 0) break;
	      bytes.push(codePoint);
	    } else if (codePoint < 0x800) {
	      if ((units -= 2) < 0) break;
	      bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);
	    } else if (codePoint < 0x10000) {
	      if ((units -= 3) < 0) break;
	      bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);
	    } else if (codePoint < 0x110000) {
	      if ((units -= 4) < 0) break;
	      bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);
	    } else {
	      throw new Error('Invalid code point');
	    }
	  }

	  return bytes;
	}

	function asciiToBytes(str) {
	  var byteArray = [];

	  for (var i = 0; i < str.length; ++i) {
	    // Node's code seems to be doing this and not & 0x7F..
	    byteArray.push(str.charCodeAt(i) & 0xFF);
	  }

	  return byteArray;
	}

	function utf16leToBytes(str, units) {
	  var c, hi, lo;
	  var byteArray = [];

	  for (var i = 0; i < str.length; ++i) {
	    if ((units -= 2) < 0) break;
	    c = str.charCodeAt(i);
	    hi = c >> 8;
	    lo = c % 256;
	    byteArray.push(lo);
	    byteArray.push(hi);
	  }

	  return byteArray;
	}

	function base64ToBytes(str) {
	  return toByteArray(base64clean(str));
	}

	function blitBuffer(src, dst, offset, length) {
	  for (var i = 0; i < length; ++i) {
	    if (i + offset >= dst.length || i >= src.length) break;
	    dst[i + offset] = src[i];
	  }

	  return i;
	}

	function isnan(val) {
	  return val !== val; // eslint-disable-line no-self-compare
	} // the following is from is-buffer, also by Feross Aboukhadijeh and with same lisence
	// The _isBuffer check is for Safari 5-7 support, because it's missing
	// Object.prototype.constructor. Remove this eventually


	function isBuffer(obj) {
	  return obj != null && (!!obj._isBuffer || isFastBuffer(obj) || isSlowBuffer(obj));
	}

	function isFastBuffer(obj) {
	  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj);
	} // For Node v0.10 support. Remove this eventually.


	function isSlowBuffer(obj) {
	  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isFastBuffer(obj.slice(0, 0));
	}

	var bufferEs6 = /*#__PURE__*/Object.freeze({
		INSPECT_MAX_BYTES: INSPECT_MAX_BYTES,
		kMaxLength: _kMaxLength,
		Buffer: Buffer,
		SlowBuffer: SlowBuffer,
		isBuffer: isBuffer
	});

	// based off https://github.com/defunctzombie/node-process/blob/master/browser.js

	function defaultSetTimout() {
	  throw new Error('setTimeout has not been defined');
	}

	function defaultClearTimeout() {
	  throw new Error('clearTimeout has not been defined');
	}

	var cachedSetTimeout = defaultSetTimout;
	var cachedClearTimeout = defaultClearTimeout;

	if (typeof global$1.setTimeout === 'function') {
	  cachedSetTimeout = setTimeout;
	}

	if (typeof global$1.clearTimeout === 'function') {
	  cachedClearTimeout = clearTimeout;
	}

	function runTimeout(fun) {
	  if (cachedSetTimeout === setTimeout) {
	    //normal enviroments in sane situations
	    return setTimeout(fun, 0);
	  } // if setTimeout wasn't available but was latter defined


	  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
	    cachedSetTimeout = setTimeout;
	    return setTimeout(fun, 0);
	  }

	  try {
	    // when when somebody has screwed with setTimeout but no I.E. maddness
	    return cachedSetTimeout(fun, 0);
	  } catch (e) {
	    try {
	      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	      return cachedSetTimeout.call(null, fun, 0);
	    } catch (e) {
	      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	      return cachedSetTimeout.call(this, fun, 0);
	    }
	  }
	}

	function runClearTimeout(marker) {
	  if (cachedClearTimeout === clearTimeout) {
	    //normal enviroments in sane situations
	    return clearTimeout(marker);
	  } // if clearTimeout wasn't available but was latter defined


	  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
	    cachedClearTimeout = clearTimeout;
	    return clearTimeout(marker);
	  }

	  try {
	    // when when somebody has screwed with setTimeout but no I.E. maddness
	    return cachedClearTimeout(marker);
	  } catch (e) {
	    try {
	      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	      return cachedClearTimeout.call(null, marker);
	    } catch (e) {
	      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	      // Some versions of I.E. have different rules for clearTimeout vs setTimeout
	      return cachedClearTimeout.call(this, marker);
	    }
	  }
	}

	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;

	function cleanUpNextTick() {
	  if (!draining || !currentQueue) {
	    return;
	  }

	  draining = false;

	  if (currentQueue.length) {
	    queue = currentQueue.concat(queue);
	  } else {
	    queueIndex = -1;
	  }

	  if (queue.length) {
	    drainQueue();
	  }
	}

	function drainQueue() {
	  if (draining) {
	    return;
	  }

	  var timeout = runTimeout(cleanUpNextTick);
	  draining = true;
	  var len = queue.length;

	  while (len) {
	    currentQueue = queue;
	    queue = [];

	    while (++queueIndex < len) {
	      if (currentQueue) {
	        currentQueue[queueIndex].run();
	      }
	    }

	    queueIndex = -1;
	    len = queue.length;
	  }

	  currentQueue = null;
	  draining = false;
	  runClearTimeout(timeout);
	}

	function nextTick(fun) {
	  var args = new Array(arguments.length - 1);

	  if (arguments.length > 1) {
	    for (var i = 1; i < arguments.length; i++) {
	      args[i - 1] = arguments[i];
	    }
	  }

	  queue.push(new Item(fun, args));

	  if (queue.length === 1 && !draining) {
	    runTimeout(drainQueue);
	  }
	} // v8 likes predictible objects

	function Item(fun, array) {
	  this.fun = fun;
	  this.array = array;
	}

	Item.prototype.run = function () {
	  this.fun.apply(null, this.array);
	};

	var title = 'browser';
	var platform = 'browser';
	var browser = true;
	var env = {};
	var argv = [];
	var version = ''; // empty string to avoid regexp issues

	var versions = {};
	var release = {};
	var config = {};

	function noop() {}

	var on = noop;
	var addListener = noop;
	var once = noop;
	var off = noop;
	var removeListener = noop;
	var removeAllListeners = noop;
	var emit = noop;
	function binding(name) {
	  throw new Error('process.binding is not supported');
	}
	function cwd() {
	  return '/';
	}
	function chdir(dir) {
	  throw new Error('process.chdir is not supported');
	}
	function umask() {
	  return 0;
	} // from https://github.com/kumavis/browser-process-hrtime/blob/master/index.js

	var performance = global$1.performance || {};

	var performanceNow = performance.now || performance.mozNow || performance.msNow || performance.oNow || performance.webkitNow || function () {
	  return new Date().getTime();
	}; // generate timestamp or delta
	// see http://nodejs.org/api/process.html#process_process_hrtime


	function hrtime(previousTimestamp) {
	  var clocktime = performanceNow.call(performance) * 1e-3;
	  var seconds = Math.floor(clocktime);
	  var nanoseconds = Math.floor(clocktime % 1 * 1e9);

	  if (previousTimestamp) {
	    seconds = seconds - previousTimestamp[0];
	    nanoseconds = nanoseconds - previousTimestamp[1];

	    if (nanoseconds < 0) {
	      seconds--;
	      nanoseconds += 1e9;
	    }
	  }

	  return [seconds, nanoseconds];
	}
	var startTime = new Date();
	function uptime() {
	  var currentTime = new Date();
	  var dif = currentTime - startTime;
	  return dif / 1000;
	}
	var process = {
	  nextTick: nextTick,
	  title: title,
	  browser: browser,
	  env: env,
	  argv: argv,
	  version: version,
	  versions: versions,
	  on: on,
	  addListener: addListener,
	  once: once,
	  off: off,
	  removeListener: removeListener,
	  removeAllListeners: removeAllListeners,
	  emit: emit,
	  binding: binding,
	  cwd: cwd,
	  chdir: chdir,
	  umask: umask,
	  hrtime: hrtime,
	  platform: platform,
	  release: release,
	  config: config,
	  uptime: uptime
	};

	var inherits;

	if (typeof Object.create === 'function') {
	  inherits = function inherits(ctor, superCtor) {
	    // implementation from standard node.js 'util' module
	    ctor.super_ = superCtor;
	    ctor.prototype = Object.create(superCtor.prototype, {
	      constructor: {
	        value: ctor,
	        enumerable: false,
	        writable: true,
	        configurable: true
	      }
	    });
	  };
	} else {
	  inherits = function inherits(ctor, superCtor) {
	    ctor.super_ = superCtor;

	    var TempCtor = function TempCtor() {};

	    TempCtor.prototype = superCtor.prototype;
	    ctor.prototype = new TempCtor();
	    ctor.prototype.constructor = ctor;
	  };
	}

	var inherits$1 = inherits;

	var formatRegExp = /%[sdj%]/g;
	function format(f) {
	  if (!isString(f)) {
	    var objects = [];

	    for (var i = 0; i < arguments.length; i++) {
	      objects.push(inspect(arguments[i]));
	    }

	    return objects.join(' ');
	  }

	  var i = 1;
	  var args = arguments;
	  var len = args.length;
	  var str = String(f).replace(formatRegExp, function (x) {
	    if (x === '%%') return '%';
	    if (i >= len) return x;

	    switch (x) {
	      case '%s':
	        return String(args[i++]);

	      case '%d':
	        return Number(args[i++]);

	      case '%j':
	        try {
	          return JSON.stringify(args[i++]);
	        } catch (_) {
	          return '[Circular]';
	        }

	      default:
	        return x;
	    }
	  });

	  for (var x = args[i]; i < len; x = args[++i]) {
	    if (isNull(x) || !isObject(x)) {
	      str += ' ' + x;
	    } else {
	      str += ' ' + inspect(x);
	    }
	  }

	  return str;
	}
	// Returns a modified function which warns once by default.
	// If --no-deprecation is set, then it is a no-op.

	function deprecate(fn, msg) {
	  // Allow for deprecating things in the process of starting up.
	  if (isUndefined(global$1.process)) {
	    return function () {
	      return deprecate(fn, msg).apply(this, arguments);
	    };
	  }

	  var warned = false;

	  function deprecated() {
	    if (!warned) {
	      {
	        console.error(msg);
	      }

	      warned = true;
	    }

	    return fn.apply(this, arguments);
	  }

	  return deprecated;
	}
	var debugs = {};
	var debugEnviron;
	function debuglog(set) {
	  if (isUndefined(debugEnviron)) debugEnviron = process.env.NODE_DEBUG || '';
	  set = set.toUpperCase();

	  if (!debugs[set]) {
	    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
	      var pid = 0;

	      debugs[set] = function () {
	        var msg = format.apply(null, arguments);
	        console.error('%s %d: %s', set, pid, msg);
	      };
	    } else {
	      debugs[set] = function () {};
	    }
	  }

	  return debugs[set];
	}
	/**
	 * Echos the value of a value. Trys to print the value out
	 * in the best way possible given the different types.
	 *
	 * @param {Object} obj The object to print out.
	 * @param {Object} opts Optional options object that alters the output.
	 */

	/* legacy: obj, showHidden, depth, colors*/

	function inspect(obj, opts) {
	  // default options
	  var ctx = {
	    seen: [],
	    stylize: stylizeNoColor
	  }; // legacy...

	  if (arguments.length >= 3) ctx.depth = arguments[2];
	  if (arguments.length >= 4) ctx.colors = arguments[3];

	  if (isBoolean(opts)) {
	    // legacy...
	    ctx.showHidden = opts;
	  } else if (opts) {
	    // got an "options" object
	    _extend(ctx, opts);
	  } // set default options


	  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
	  if (isUndefined(ctx.depth)) ctx.depth = 2;
	  if (isUndefined(ctx.colors)) ctx.colors = false;
	  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
	  if (ctx.colors) ctx.stylize = stylizeWithColor;
	  return formatValue(ctx, obj, ctx.depth);
	} // http://en.wikipedia.org/wiki/ANSI_escape_code#graphics

	inspect.colors = {
	  'bold': [1, 22],
	  'italic': [3, 23],
	  'underline': [4, 24],
	  'inverse': [7, 27],
	  'white': [37, 39],
	  'grey': [90, 39],
	  'black': [30, 39],
	  'blue': [34, 39],
	  'cyan': [36, 39],
	  'green': [32, 39],
	  'magenta': [35, 39],
	  'red': [31, 39],
	  'yellow': [33, 39]
	}; // Don't use 'blue' not visible on cmd.exe

	inspect.styles = {
	  'special': 'cyan',
	  'number': 'yellow',
	  'boolean': 'yellow',
	  'undefined': 'grey',
	  'null': 'bold',
	  'string': 'green',
	  'date': 'magenta',
	  // "name": intentionally not styling
	  'regexp': 'red'
	};

	function stylizeWithColor(str, styleType) {
	  var style = inspect.styles[styleType];

	  if (style) {
	    return "\x1B[" + inspect.colors[style][0] + 'm' + str + "\x1B[" + inspect.colors[style][1] + 'm';
	  } else {
	    return str;
	  }
	}

	function stylizeNoColor(str, styleType) {
	  return str;
	}

	function arrayToHash(array) {
	  var hash = {};
	  array.forEach(function (val, idx) {
	    hash[val] = true;
	  });
	  return hash;
	}

	function formatValue(ctx, value, recurseTimes) {
	  // Provide a hook for user-specified inspect functions.
	  // Check that value is an object with an inspect function on it
	  if (ctx.customInspect && value && isFunction(value.inspect) && // Filter out the util module, it's inspect function is special
	  value.inspect !== inspect && // Also filter out any prototype objects using the circular check.
	  !(value.constructor && value.constructor.prototype === value)) {
	    var ret = value.inspect(recurseTimes, ctx);

	    if (!isString(ret)) {
	      ret = formatValue(ctx, ret, recurseTimes);
	    }

	    return ret;
	  } // Primitive types cannot have properties


	  var primitive = formatPrimitive(ctx, value);

	  if (primitive) {
	    return primitive;
	  } // Look up the keys of the object.


	  var keys = Object.keys(value);
	  var visibleKeys = arrayToHash(keys);

	  if (ctx.showHidden) {
	    keys = Object.getOwnPropertyNames(value);
	  } // IE doesn't make error fields non-enumerable
	  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx


	  if (isError(value) && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
	    return formatError(value);
	  } // Some type of object without properties can be shortcutted.


	  if (keys.length === 0) {
	    if (isFunction(value)) {
	      var name = value.name ? ': ' + value.name : '';
	      return ctx.stylize('[Function' + name + ']', 'special');
	    }

	    if (isRegExp(value)) {
	      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
	    }

	    if (isDate(value)) {
	      return ctx.stylize(Date.prototype.toString.call(value), 'date');
	    }

	    if (isError(value)) {
	      return formatError(value);
	    }
	  }

	  var base = '',
	      array = false,
	      braces = ['{', '}']; // Make Array say that they are Array

	  if (isArray$1(value)) {
	    array = true;
	    braces = ['[', ']'];
	  } // Make functions say that they are functions


	  if (isFunction(value)) {
	    var n = value.name ? ': ' + value.name : '';
	    base = ' [Function' + n + ']';
	  } // Make RegExps say that they are RegExps


	  if (isRegExp(value)) {
	    base = ' ' + RegExp.prototype.toString.call(value);
	  } // Make dates with properties first say the date


	  if (isDate(value)) {
	    base = ' ' + Date.prototype.toUTCString.call(value);
	  } // Make error with message first say the error


	  if (isError(value)) {
	    base = ' ' + formatError(value);
	  }

	  if (keys.length === 0 && (!array || value.length == 0)) {
	    return braces[0] + base + braces[1];
	  }

	  if (recurseTimes < 0) {
	    if (isRegExp(value)) {
	      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
	    } else {
	      return ctx.stylize('[Object]', 'special');
	    }
	  }

	  ctx.seen.push(value);
	  var output;

	  if (array) {
	    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
	  } else {
	    output = keys.map(function (key) {
	      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
	    });
	  }

	  ctx.seen.pop();
	  return reduceToSingleString(output, base, braces);
	}

	function formatPrimitive(ctx, value) {
	  if (isUndefined(value)) return ctx.stylize('undefined', 'undefined');

	  if (isString(value)) {
	    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '').replace(/'/g, "\\'").replace(/\\"/g, '"') + '\'';
	    return ctx.stylize(simple, 'string');
	  }

	  if (isNumber(value)) return ctx.stylize('' + value, 'number');
	  if (isBoolean(value)) return ctx.stylize('' + value, 'boolean'); // For some reason typeof null is "object", so special case here.

	  if (isNull(value)) return ctx.stylize('null', 'null');
	}

	function formatError(value) {
	  return '[' + Error.prototype.toString.call(value) + ']';
	}

	function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
	  var output = [];

	  for (var i = 0, l = value.length; i < l; ++i) {
	    if (hasOwnProperty$1(value, String(i))) {
	      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, String(i), true));
	    } else {
	      output.push('');
	    }
	  }

	  keys.forEach(function (key) {
	    if (!key.match(/^\d+$/)) {
	      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, key, true));
	    }
	  });
	  return output;
	}

	function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
	  var name, str, desc;
	  desc = Object.getOwnPropertyDescriptor(value, key) || {
	    value: value[key]
	  };

	  if (desc.get) {
	    if (desc.set) {
	      str = ctx.stylize('[Getter/Setter]', 'special');
	    } else {
	      str = ctx.stylize('[Getter]', 'special');
	    }
	  } else {
	    if (desc.set) {
	      str = ctx.stylize('[Setter]', 'special');
	    }
	  }

	  if (!hasOwnProperty$1(visibleKeys, key)) {
	    name = '[' + key + ']';
	  }

	  if (!str) {
	    if (ctx.seen.indexOf(desc.value) < 0) {
	      if (isNull(recurseTimes)) {
	        str = formatValue(ctx, desc.value, null);
	      } else {
	        str = formatValue(ctx, desc.value, recurseTimes - 1);
	      }

	      if (str.indexOf('\n') > -1) {
	        if (array) {
	          str = str.split('\n').map(function (line) {
	            return '  ' + line;
	          }).join('\n').substr(2);
	        } else {
	          str = '\n' + str.split('\n').map(function (line) {
	            return '   ' + line;
	          }).join('\n');
	        }
	      }
	    } else {
	      str = ctx.stylize('[Circular]', 'special');
	    }
	  }

	  if (isUndefined(name)) {
	    if (array && key.match(/^\d+$/)) {
	      return str;
	    }

	    name = JSON.stringify('' + key);

	    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
	      name = name.substr(1, name.length - 2);
	      name = ctx.stylize(name, 'name');
	    } else {
	      name = name.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'");
	      name = ctx.stylize(name, 'string');
	    }
	  }

	  return name + ': ' + str;
	}

	function reduceToSingleString(output, base, braces) {
	  var length = output.reduce(function (prev, cur) {
	    if (cur.indexOf('\n') >= 0) ;
	    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
	  }, 0);

	  if (length > 60) {
	    return braces[0] + (base === '' ? '' : base + '\n ') + ' ' + output.join(',\n  ') + ' ' + braces[1];
	  }

	  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
	} // NOTE: These type checking functions intentionally don't use `instanceof`
	// because it is fragile and can be easily faked with `Object.create()`.


	function isArray$1(ar) {
	  return Array.isArray(ar);
	}
	function isBoolean(arg) {
	  return typeof arg === 'boolean';
	}
	function isNull(arg) {
	  return arg === null;
	}
	function isNumber(arg) {
	  return typeof arg === 'number';
	}
	function isString(arg) {
	  return typeof arg === 'string';
	}
	function isUndefined(arg) {
	  return arg === void 0;
	}
	function isRegExp(re) {
	  return isObject(re) && objectToString(re) === '[object RegExp]';
	}
	function isObject(arg) {
	  return _typeof_1(arg) === 'object' && arg !== null;
	}
	function isDate(d) {
	  return isObject(d) && objectToString(d) === '[object Date]';
	}
	function isError(e) {
	  return isObject(e) && (objectToString(e) === '[object Error]' || e instanceof Error);
	}
	function isFunction(arg) {
	  return typeof arg === 'function';
	}

	function objectToString(o) {
	  return Object.prototype.toString.call(o);
	}
	function _extend(origin, add) {
	  // Don't do anything if add isn't an object
	  if (!add || !isObject(add)) return origin;
	  var keys = Object.keys(add);
	  var i = keys.length;

	  while (i--) {
	    origin[keys[i]] = add[keys[i]];
	  }

	  return origin;
	}

	function hasOwnProperty$1(obj, prop) {
	  return Object.prototype.hasOwnProperty.call(obj, prop);
	}

	function BufferList() {
	  this.head = null;
	  this.tail = null;
	  this.length = 0;
	}

	BufferList.prototype.push = function (v) {
	  var entry = {
	    data: v,
	    next: null
	  };
	  if (this.length > 0) this.tail.next = entry;else this.head = entry;
	  this.tail = entry;
	  ++this.length;
	};

	BufferList.prototype.unshift = function (v) {
	  var entry = {
	    data: v,
	    next: this.head
	  };
	  if (this.length === 0) this.tail = entry;
	  this.head = entry;
	  ++this.length;
	};

	BufferList.prototype.shift = function () {
	  if (this.length === 0) return;
	  var ret = this.head.data;
	  if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;
	  --this.length;
	  return ret;
	};

	BufferList.prototype.clear = function () {
	  this.head = this.tail = null;
	  this.length = 0;
	};

	BufferList.prototype.join = function (s) {
	  if (this.length === 0) return '';
	  var p = this.head;
	  var ret = '' + p.data;

	  while (p = p.next) {
	    ret += s + p.data;
	  }

	  return ret;
	};

	BufferList.prototype.concat = function (n) {
	  if (this.length === 0) return Buffer.alloc(0);
	  if (this.length === 1) return this.head.data;
	  var ret = Buffer.allocUnsafe(n >>> 0);
	  var p = this.head;
	  var i = 0;

	  while (p) {
	    p.data.copy(ret, i);
	    i += p.data.length;
	    p = p.next;
	  }

	  return ret;
	};

	var string_decoder = createCommonjsModule(function (module, exports) {
	  // Copyright Joyent, Inc. and other Node contributors.
	  //
	  // Permission is hereby granted, free of charge, to any person obtaining a
	  // copy of this software and associated documentation files (the
	  // "Software"), to deal in the Software without restriction, including
	  // without limitation the rights to use, copy, modify, merge, publish,
	  // distribute, sublicense, and/or sell copies of the Software, and to permit
	  // persons to whom the Software is furnished to do so, subject to the
	  // following conditions:
	  //
	  // The above copyright notice and this permission notice shall be included
	  // in all copies or substantial portions of the Software.
	  //
	  // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	  // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	  // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	  // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	  // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	  // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	  // USE OR OTHER DEALINGS IN THE SOFTWARE.
	  var Buffer = bufferEs6.Buffer;

	  var isBufferEncoding = Buffer.isEncoding || function (encoding) {
	    switch (encoding && encoding.toLowerCase()) {
	      case 'hex':
	      case 'utf8':
	      case 'utf-8':
	      case 'ascii':
	      case 'binary':
	      case 'base64':
	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	      case 'raw':
	        return true;

	      default:
	        return false;
	    }
	  };

	  function assertEncoding(encoding) {
	    if (encoding && !isBufferEncoding(encoding)) {
	      throw new Error('Unknown encoding: ' + encoding);
	    }
	  } // StringDecoder provides an interface for efficiently splitting a series of
	  // buffers into a series of JS strings without breaking apart multi-byte
	  // characters. CESU-8 is handled as part of the UTF-8 encoding.
	  //
	  // @TODO Handling all encodings inside a single object makes it very difficult
	  // to reason about this code, so it should be split up in the future.
	  // @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code
	  // points as used by CESU-8.


	  var StringDecoder = exports.StringDecoder = function (encoding) {
	    this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');
	    assertEncoding(encoding);

	    switch (this.encoding) {
	      case 'utf8':
	        // CESU-8 represents each of Surrogate Pair by 3-bytes
	        this.surrogateSize = 3;
	        break;

	      case 'ucs2':
	      case 'utf16le':
	        // UTF-16 represents each of Surrogate Pair by 2-bytes
	        this.surrogateSize = 2;
	        this.detectIncompleteChar = utf16DetectIncompleteChar;
	        break;

	      case 'base64':
	        // Base-64 stores 3 bytes in 4 chars, and pads the remainder.
	        this.surrogateSize = 3;
	        this.detectIncompleteChar = base64DetectIncompleteChar;
	        break;

	      default:
	        this.write = passThroughWrite;
	        return;
	    } // Enough space to store all bytes of a single character. UTF-8 needs 4
	    // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).


	    this.charBuffer = new Buffer(6); // Number of bytes received for the current incomplete multi-byte character.

	    this.charReceived = 0; // Number of bytes expected for the current incomplete multi-byte character.

	    this.charLength = 0;
	  }; // write decodes the given buffer and returns it as JS string that is
	  // guaranteed to not contain any partial multi-byte characters. Any partial
	  // character found at the end of the buffer is buffered up, and will be
	  // returned when calling write again with the remaining bytes.
	  //
	  // Note: Converting a Buffer containing an orphan surrogate to a String
	  // currently works, but converting a String to a Buffer (via `new Buffer`, or
	  // Buffer#write) will replace incomplete surrogates with the unicode
	  // replacement character. See https://codereview.chromium.org/121173009/ .


	  StringDecoder.prototype.write = function (buffer) {
	    var charStr = ''; // if our last write ended with an incomplete multibyte character

	    while (this.charLength) {
	      // determine how many remaining bytes this buffer has to offer for this char
	      var available = buffer.length >= this.charLength - this.charReceived ? this.charLength - this.charReceived : buffer.length; // add the new bytes to the char buffer

	      buffer.copy(this.charBuffer, this.charReceived, 0, available);
	      this.charReceived += available;

	      if (this.charReceived < this.charLength) {
	        // still not enough chars in this buffer? wait for more ...
	        return '';
	      } // remove bytes belonging to the current character from the buffer


	      buffer = buffer.slice(available, buffer.length); // get the character that was split

	      charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding); // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character

	      var charCode = charStr.charCodeAt(charStr.length - 1);

	      if (charCode >= 0xD800 && charCode <= 0xDBFF) {
	        this.charLength += this.surrogateSize;
	        charStr = '';
	        continue;
	      }

	      this.charReceived = this.charLength = 0; // if there are no more bytes in this buffer, just emit our char

	      if (buffer.length === 0) {
	        return charStr;
	      }

	      break;
	    } // determine and set charLength / charReceived


	    this.detectIncompleteChar(buffer);
	    var end = buffer.length;

	    if (this.charLength) {
	      // buffer the incomplete character bytes we got
	      buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);
	      end -= this.charReceived;
	    }

	    charStr += buffer.toString(this.encoding, 0, end);
	    var end = charStr.length - 1;
	    var charCode = charStr.charCodeAt(end); // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character

	    if (charCode >= 0xD800 && charCode <= 0xDBFF) {
	      var size = this.surrogateSize;
	      this.charLength += size;
	      this.charReceived += size;
	      this.charBuffer.copy(this.charBuffer, size, 0, size);
	      buffer.copy(this.charBuffer, 0, 0, size);
	      return charStr.substring(0, end);
	    } // or just emit the charStr


	    return charStr;
	  }; // detectIncompleteChar determines if there is an incomplete UTF-8 character at
	  // the end of the given buffer. If so, it sets this.charLength to the byte
	  // length that character, and sets this.charReceived to the number of bytes
	  // that are available for this character.


	  StringDecoder.prototype.detectIncompleteChar = function (buffer) {
	    // determine how many bytes we have to check at the end of this buffer
	    var i = buffer.length >= 3 ? 3 : buffer.length; // Figure out if one of the last i bytes of our buffer announces an
	    // incomplete char.

	    for (; i > 0; i--) {
	      var c = buffer[buffer.length - i]; // See http://en.wikipedia.org/wiki/UTF-8#Description
	      // 110XXXXX

	      if (i == 1 && c >> 5 == 0x06) {
	        this.charLength = 2;
	        break;
	      } // 1110XXXX


	      if (i <= 2 && c >> 4 == 0x0E) {
	        this.charLength = 3;
	        break;
	      } // 11110XXX


	      if (i <= 3 && c >> 3 == 0x1E) {
	        this.charLength = 4;
	        break;
	      }
	    }

	    this.charReceived = i;
	  };

	  StringDecoder.prototype.end = function (buffer) {
	    var res = '';
	    if (buffer && buffer.length) res = this.write(buffer);

	    if (this.charReceived) {
	      var cr = this.charReceived;
	      var buf = this.charBuffer;
	      var enc = this.encoding;
	      res += buf.slice(0, cr).toString(enc);
	    }

	    return res;
	  };

	  function passThroughWrite(buffer) {
	    return buffer.toString(this.encoding);
	  }

	  function utf16DetectIncompleteChar(buffer) {
	    this.charReceived = buffer.length % 2;
	    this.charLength = this.charReceived ? 2 : 0;
	  }

	  function base64DetectIncompleteChar(buffer) {
	    this.charReceived = buffer.length % 3;
	    this.charLength = this.charReceived ? 3 : 0;
	  }
	});
	var string_decoder_1 = string_decoder.StringDecoder;

	Readable.ReadableState = ReadableState;
	var debug = debuglog('stream');
	inherits$1(Readable, EventEmitter);

	function prependListener(emitter, event, fn) {
	  // Sadly this is not cacheable as some libraries bundle their own
	  // event emitter implementation with them.
	  if (typeof emitter.prependListener === 'function') {
	    return emitter.prependListener(event, fn);
	  } else {
	    // This is a hack to make sure that our error handler is attached before any
	    // userland ones.  NEVER DO THIS. This is here only because this code needs
	    // to continue to work with older versions of Node.js that do not include
	    // the prependListener() method. The goal is to eventually remove this hack.
	    if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];
	  }
	}

	function listenerCount$1(emitter, type) {
	  return emitter.listeners(type).length;
	}

	function ReadableState(options, stream) {
	  options = options || {}; // object stream flag. Used to make read(n) ignore n and to
	  // make all the buffer merging and length checks go away

	  this.objectMode = !!options.objectMode;
	  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer
	  // Note: 0 is a valid value, means "don't call _read preemptively ever"

	  var hwm = options.highWaterMark;
	  var defaultHwm = this.objectMode ? 16 : 16 * 1024;
	  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm; // cast to ints.

	  this.highWaterMark = ~~this.highWaterMark; // A linked list is used to store data chunks instead of an array because the
	  // linked list can remove elements from the beginning faster than
	  // array.shift()

	  this.buffer = new BufferList();
	  this.length = 0;
	  this.pipes = null;
	  this.pipesCount = 0;
	  this.flowing = null;
	  this.ended = false;
	  this.endEmitted = false;
	  this.reading = false; // a flag to be able to tell if the onwrite cb is called immediately,
	  // or on a later tick.  We set this to true at first, because any
	  // actions that shouldn't happen until "later" should generally also
	  // not happen before the first write call.

	  this.sync = true; // whenever we return null, then we set a flag to say
	  // that we're awaiting a 'readable' event emission.

	  this.needReadable = false;
	  this.emittedReadable = false;
	  this.readableListening = false;
	  this.resumeScheduled = false; // Crypto is kind of old and crusty.  Historically, its default string
	  // encoding is 'binary' so we have to make this configurable.
	  // Everything else in the universe uses 'utf8', though.

	  this.defaultEncoding = options.defaultEncoding || 'utf8'; // when piping, we only care about 'readable' events that happen
	  // after read()ing all the bytes and not getting any pushback.

	  this.ranOut = false; // the number of writers that are awaiting a drain event in .pipe()s

	  this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled

	  this.readingMore = false;
	  this.decoder = null;
	  this.encoding = null;

	  if (options.encoding) {
	    this.decoder = new string_decoder_1(options.encoding);
	    this.encoding = options.encoding;
	  }
	}
	function Readable(options) {
	  if (!(this instanceof Readable)) return new Readable(options);
	  this._readableState = new ReadableState(options, this); // legacy

	  this.readable = true;
	  if (options && typeof options.read === 'function') this._read = options.read;
	  EventEmitter.call(this);
	} // Manually shove something into the read() buffer.
	// This returns true if the highWaterMark has not been hit yet,
	// similar to how Writable.write() returns true if you should
	// write() some more.

	Readable.prototype.push = function (chunk, encoding) {
	  var state = this._readableState;

	  if (!state.objectMode && typeof chunk === 'string') {
	    encoding = encoding || state.defaultEncoding;

	    if (encoding !== state.encoding) {
	      chunk = Buffer.from(chunk, encoding);
	      encoding = '';
	    }
	  }

	  return readableAddChunk(this, state, chunk, encoding, false);
	}; // Unshift should *always* be something directly out of read()


	Readable.prototype.unshift = function (chunk) {
	  var state = this._readableState;
	  return readableAddChunk(this, state, chunk, '', true);
	};

	Readable.prototype.isPaused = function () {
	  return this._readableState.flowing === false;
	};

	function readableAddChunk(stream, state, chunk, encoding, addToFront) {
	  var er = chunkInvalid(state, chunk);

	  if (er) {
	    stream.emit('error', er);
	  } else if (chunk === null) {
	    state.reading = false;
	    onEofChunk(stream, state);
	  } else if (state.objectMode || chunk && chunk.length > 0) {
	    if (state.ended && !addToFront) {
	      var e = new Error('stream.push() after EOF');
	      stream.emit('error', e);
	    } else if (state.endEmitted && addToFront) {
	      var _e = new Error('stream.unshift() after end event');

	      stream.emit('error', _e);
	    } else {
	      var skipAdd;

	      if (state.decoder && !addToFront && !encoding) {
	        chunk = state.decoder.write(chunk);
	        skipAdd = !state.objectMode && chunk.length === 0;
	      }

	      if (!addToFront) state.reading = false; // Don't add to the buffer if we've decoded to an empty string chunk and
	      // we're not in object mode

	      if (!skipAdd) {
	        // if we want the data now, just emit it.
	        if (state.flowing && state.length === 0 && !state.sync) {
	          stream.emit('data', chunk);
	          stream.read(0);
	        } else {
	          // update the buffer info.
	          state.length += state.objectMode ? 1 : chunk.length;
	          if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);
	          if (state.needReadable) emitReadable(stream);
	        }
	      }

	      maybeReadMore(stream, state);
	    }
	  } else if (!addToFront) {
	    state.reading = false;
	  }

	  return needMoreData(state);
	} // if it's past the high water mark, we can push in some more.
	// Also, if we have no data yet, we can stand some
	// more bytes.  This is to work around cases where hwm=0,
	// such as the repl.  Also, if the push() triggered a
	// readable event, and the user called read(largeNumber) such that
	// needReadable was set, then we ought to push more, so that another
	// 'readable' event will be triggered.


	function needMoreData(state) {
	  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);
	} // backwards compatibility.


	Readable.prototype.setEncoding = function (enc) {
	  this._readableState.decoder = new string_decoder_1(enc);
	  this._readableState.encoding = enc;
	  return this;
	}; // Don't raise the hwm > 8MB


	var MAX_HWM = 0x800000;

	function computeNewHighWaterMark(n) {
	  if (n >= MAX_HWM) {
	    n = MAX_HWM;
	  } else {
	    // Get the next highest power of 2 to prevent increasing hwm excessively in
	    // tiny amounts
	    n--;
	    n |= n >>> 1;
	    n |= n >>> 2;
	    n |= n >>> 4;
	    n |= n >>> 8;
	    n |= n >>> 16;
	    n++;
	  }

	  return n;
	} // This function is designed to be inlinable, so please take care when making
	// changes to the function body.


	function howMuchToRead(n, state) {
	  if (n <= 0 || state.length === 0 && state.ended) return 0;
	  if (state.objectMode) return 1;

	  if (n !== n) {
	    // Only flow one buffer at a time
	    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;
	  } // If we're asking for more than the current hwm, then raise the hwm.


	  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
	  if (n <= state.length) return n; // Don't have enough

	  if (!state.ended) {
	    state.needReadable = true;
	    return 0;
	  }

	  return state.length;
	} // you can override either this method, or the async _read(n) below.


	Readable.prototype.read = function (n) {
	  debug('read', n);
	  n = parseInt(n, 10);
	  var state = this._readableState;
	  var nOrig = n;
	  if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we
	  // already have a bunch of data in the buffer, then just trigger
	  // the 'readable' event and move on.

	  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {
	    debug('read: emitReadable', state.length, state.ended);
	    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);
	    return null;
	  }

	  n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.

	  if (n === 0 && state.ended) {
	    if (state.length === 0) endReadable(this);
	    return null;
	  } // All the actual chunk generation logic needs to be
	  // *below* the call to _read.  The reason is that in certain
	  // synthetic stream cases, such as passthrough streams, _read
	  // may be a completely synchronous operation which may change
	  // the state of the read buffer, providing enough data when
	  // before there was *not* enough.
	  //
	  // So, the steps are:
	  // 1. Figure out what the state of things will be after we do
	  // a read from the buffer.
	  //
	  // 2. If that resulting state will trigger a _read, then call _read.
	  // Note that this may be asynchronous, or synchronous.  Yes, it is
	  // deeply ugly to write APIs this way, but that still doesn't mean
	  // that the Readable class should behave improperly, as streams are
	  // designed to be sync/async agnostic.
	  // Take note if the _read call is sync or async (ie, if the read call
	  // has returned yet), so that we know whether or not it's safe to emit
	  // 'readable' etc.
	  //
	  // 3. Actually pull the requested chunks out of the buffer and return.
	  // if we need a readable event, then we need to do some reading.


	  var doRead = state.needReadable;
	  debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some

	  if (state.length === 0 || state.length - n < state.highWaterMark) {
	    doRead = true;
	    debug('length less than watermark', doRead);
	  } // however, if we've ended, then there's no point, and if we're already
	  // reading, then it's unnecessary.


	  if (state.ended || state.reading) {
	    doRead = false;
	    debug('reading or ended', doRead);
	  } else if (doRead) {
	    debug('do read');
	    state.reading = true;
	    state.sync = true; // if the length is currently zero, then we *need* a readable event.

	    if (state.length === 0) state.needReadable = true; // call internal read method

	    this._read(state.highWaterMark);

	    state.sync = false; // If _read pushed data synchronously, then `reading` will be false,
	    // and we need to re-evaluate how much data we can return to the user.

	    if (!state.reading) n = howMuchToRead(nOrig, state);
	  }

	  var ret;
	  if (n > 0) ret = fromList(n, state);else ret = null;

	  if (ret === null) {
	    state.needReadable = true;
	    n = 0;
	  } else {
	    state.length -= n;
	  }

	  if (state.length === 0) {
	    // If we have nothing in the buffer, then we want to know
	    // as soon as we *do* get something into the buffer.
	    if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.

	    if (nOrig !== n && state.ended) endReadable(this);
	  }

	  if (ret !== null) this.emit('data', ret);
	  return ret;
	};

	function chunkInvalid(state, chunk) {
	  var er = null;

	  if (!isBuffer(chunk) && typeof chunk !== 'string' && chunk !== null && chunk !== undefined && !state.objectMode) {
	    er = new TypeError('Invalid non-string/buffer chunk');
	  }

	  return er;
	}

	function onEofChunk(stream, state) {
	  if (state.ended) return;

	  if (state.decoder) {
	    var chunk = state.decoder.end();

	    if (chunk && chunk.length) {
	      state.buffer.push(chunk);
	      state.length += state.objectMode ? 1 : chunk.length;
	    }
	  }

	  state.ended = true; // emit 'readable' now to make sure it gets picked up.

	  emitReadable(stream);
	} // Don't emit readable right away in sync mode, because this can trigger
	// another read() call => stack overflow.  This way, it might trigger
	// a nextTick recursion warning, but that's not so bad.


	function emitReadable(stream) {
	  var state = stream._readableState;
	  state.needReadable = false;

	  if (!state.emittedReadable) {
	    debug('emitReadable', state.flowing);
	    state.emittedReadable = true;
	    if (state.sync) nextTick(emitReadable_, stream);else emitReadable_(stream);
	  }
	}

	function emitReadable_(stream) {
	  debug('emit readable');
	  stream.emit('readable');
	  flow(stream);
	} // at this point, the user has presumably seen the 'readable' event,
	// and called read() to consume some data.  that may have triggered
	// in turn another _read(n) call, in which case reading = true if
	// it's in progress.
	// However, if we're not ended, or reading, and the length < hwm,
	// then go ahead and try to read some more preemptively.


	function maybeReadMore(stream, state) {
	  if (!state.readingMore) {
	    state.readingMore = true;
	    nextTick(maybeReadMore_, stream, state);
	  }
	}

	function maybeReadMore_(stream, state) {
	  var len = state.length;

	  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {
	    debug('maybeReadMore read 0');
	    stream.read(0);
	    if (len === state.length) // didn't get any data, stop spinning.
	      break;else len = state.length;
	  }

	  state.readingMore = false;
	} // abstract method.  to be overridden in specific implementation classes.
	// call cb(er, data) where data is <= n in length.
	// for virtual (non-string, non-buffer) streams, "length" is somewhat
	// arbitrary, and perhaps not very meaningful.


	Readable.prototype._read = function (n) {
	  this.emit('error', new Error('not implemented'));
	};

	Readable.prototype.pipe = function (dest, pipeOpts) {
	  var src = this;
	  var state = this._readableState;

	  switch (state.pipesCount) {
	    case 0:
	      state.pipes = dest;
	      break;

	    case 1:
	      state.pipes = [state.pipes, dest];
	      break;

	    default:
	      state.pipes.push(dest);
	      break;
	  }

	  state.pipesCount += 1;
	  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);
	  var doEnd = !pipeOpts || pipeOpts.end !== false;
	  var endFn = doEnd ? onend : cleanup;
	  if (state.endEmitted) nextTick(endFn);else src.once('end', endFn);
	  dest.on('unpipe', onunpipe);

	  function onunpipe(readable) {
	    debug('onunpipe');

	    if (readable === src) {
	      cleanup();
	    }
	  }

	  function onend() {
	    debug('onend');
	    dest.end();
	  } // when the dest drains, it reduces the awaitDrain counter
	  // on the source.  This would be more elegant with a .once()
	  // handler in flow(), but adding and removing repeatedly is
	  // too slow.


	  var ondrain = pipeOnDrain(src);
	  dest.on('drain', ondrain);
	  var cleanedUp = false;

	  function cleanup() {
	    debug('cleanup'); // cleanup event handlers once the pipe is broken

	    dest.removeListener('close', onclose);
	    dest.removeListener('finish', onfinish);
	    dest.removeListener('drain', ondrain);
	    dest.removeListener('error', onerror);
	    dest.removeListener('unpipe', onunpipe);
	    src.removeListener('end', onend);
	    src.removeListener('end', cleanup);
	    src.removeListener('data', ondata);
	    cleanedUp = true; // if the reader is waiting for a drain event from this
	    // specific writer, then it would cause it to never start
	    // flowing again.
	    // So, if this is awaiting a drain, then we just call it now.
	    // If we don't know, then assume that we are waiting for one.

	    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
	  } // If the user pushes more data while we're writing to dest then we'll end up
	  // in ondata again. However, we only want to increase awaitDrain once because
	  // dest will only emit one 'drain' event for the multiple writes.
	  // => Introduce a guard on increasing awaitDrain.


	  var increasedAwaitDrain = false;
	  src.on('data', ondata);

	  function ondata(chunk) {
	    debug('ondata');
	    increasedAwaitDrain = false;
	    var ret = dest.write(chunk);

	    if (false === ret && !increasedAwaitDrain) {
	      // If the user unpiped during `dest.write()`, it is possible
	      // to get stuck in a permanently paused state if that write
	      // also returned false.
	      // => Check whether `dest` is still a piping destination.
	      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
	        debug('false write response, pause', src._readableState.awaitDrain);
	        src._readableState.awaitDrain++;
	        increasedAwaitDrain = true;
	      }

	      src.pause();
	    }
	  } // if the dest has an error, then stop piping into it.
	  // however, don't suppress the throwing behavior for this.


	  function onerror(er) {
	    debug('onerror', er);
	    unpipe();
	    dest.removeListener('error', onerror);
	    if (listenerCount$1(dest, 'error') === 0) dest.emit('error', er);
	  } // Make sure our error handler is attached before userland ones.


	  prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.

	  function onclose() {
	    dest.removeListener('finish', onfinish);
	    unpipe();
	  }

	  dest.once('close', onclose);

	  function onfinish() {
	    debug('onfinish');
	    dest.removeListener('close', onclose);
	    unpipe();
	  }

	  dest.once('finish', onfinish);

	  function unpipe() {
	    debug('unpipe');
	    src.unpipe(dest);
	  } // tell the dest that it's being piped to


	  dest.emit('pipe', src); // start the flow if it hasn't been started already.

	  if (!state.flowing) {
	    debug('pipe resume');
	    src.resume();
	  }

	  return dest;
	};

	function pipeOnDrain(src) {
	  return function () {
	    var state = src._readableState;
	    debug('pipeOnDrain', state.awaitDrain);
	    if (state.awaitDrain) state.awaitDrain--;

	    if (state.awaitDrain === 0 && src.listeners('data').length) {
	      state.flowing = true;
	      flow(src);
	    }
	  };
	}

	Readable.prototype.unpipe = function (dest) {
	  var state = this._readableState; // if we're not piping anywhere, then do nothing.

	  if (state.pipesCount === 0) return this; // just one destination.  most common case.

	  if (state.pipesCount === 1) {
	    // passed in one, but it's not the right one.
	    if (dest && dest !== state.pipes) return this;
	    if (!dest) dest = state.pipes; // got a match.

	    state.pipes = null;
	    state.pipesCount = 0;
	    state.flowing = false;
	    if (dest) dest.emit('unpipe', this);
	    return this;
	  } // slow case. multiple pipe destinations.


	  if (!dest) {
	    // remove all.
	    var dests = state.pipes;
	    var len = state.pipesCount;
	    state.pipes = null;
	    state.pipesCount = 0;
	    state.flowing = false;

	    for (var _i = 0; _i < len; _i++) {
	      dests[_i].emit('unpipe', this);
	    }

	    return this;
	  } // try to find the right one.


	  var i = indexOf(state.pipes, dest);
	  if (i === -1) return this;
	  state.pipes.splice(i, 1);
	  state.pipesCount -= 1;
	  if (state.pipesCount === 1) state.pipes = state.pipes[0];
	  dest.emit('unpipe', this);
	  return this;
	}; // set up data events if they are asked for
	// Ensure readable listeners eventually get something


	Readable.prototype.on = function (ev, fn) {
	  var res = EventEmitter.prototype.on.call(this, ev, fn);

	  if (ev === 'data') {
	    // Start flowing on next tick if stream isn't explicitly paused
	    if (this._readableState.flowing !== false) this.resume();
	  } else if (ev === 'readable') {
	    var state = this._readableState;

	    if (!state.endEmitted && !state.readableListening) {
	      state.readableListening = state.needReadable = true;
	      state.emittedReadable = false;

	      if (!state.reading) {
	        nextTick(nReadingNextTick, this);
	      } else if (state.length) {
	        emitReadable(this, state);
	      }
	    }
	  }

	  return res;
	};

	Readable.prototype.addListener = Readable.prototype.on;

	function nReadingNextTick(self) {
	  debug('readable nexttick read 0');
	  self.read(0);
	} // pause() and resume() are remnants of the legacy readable stream API
	// If the user uses them, then switch into old mode.


	Readable.prototype.resume = function () {
	  var state = this._readableState;

	  if (!state.flowing) {
	    debug('resume');
	    state.flowing = true;
	    resume(this, state);
	  }

	  return this;
	};

	function resume(stream, state) {
	  if (!state.resumeScheduled) {
	    state.resumeScheduled = true;
	    nextTick(resume_, stream, state);
	  }
	}

	function resume_(stream, state) {
	  if (!state.reading) {
	    debug('resume read 0');
	    stream.read(0);
	  }

	  state.resumeScheduled = false;
	  state.awaitDrain = 0;
	  stream.emit('resume');
	  flow(stream);
	  if (state.flowing && !state.reading) stream.read(0);
	}

	Readable.prototype.pause = function () {
	  debug('call pause flowing=%j', this._readableState.flowing);

	  if (false !== this._readableState.flowing) {
	    debug('pause');
	    this._readableState.flowing = false;
	    this.emit('pause');
	  }

	  return this;
	};

	function flow(stream) {
	  var state = stream._readableState;
	  debug('flow', state.flowing);

	  while (state.flowing && stream.read() !== null) {}
	} // wrap an old-style stream as the async data source.
	// This is *not* part of the readable stream interface.
	// It is an ugly unfortunate mess of history.


	Readable.prototype.wrap = function (stream) {
	  var state = this._readableState;
	  var paused = false;
	  var self = this;
	  stream.on('end', function () {
	    debug('wrapped end');

	    if (state.decoder && !state.ended) {
	      var chunk = state.decoder.end();
	      if (chunk && chunk.length) self.push(chunk);
	    }

	    self.push(null);
	  });
	  stream.on('data', function (chunk) {
	    debug('wrapped data');
	    if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode

	    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;
	    var ret = self.push(chunk);

	    if (!ret) {
	      paused = true;
	      stream.pause();
	    }
	  }); // proxy all the other methods.
	  // important when wrapping filters and duplexes.

	  for (var i in stream) {
	    if (this[i] === undefined && typeof stream[i] === 'function') {
	      this[i] = function (method) {
	        return function () {
	          return stream[method].apply(stream, arguments);
	        };
	      }(i);
	    }
	  } // proxy certain important events.


	  var events = ['error', 'close', 'destroy', 'pause', 'resume'];
	  forEach(events, function (ev) {
	    stream.on(ev, self.emit.bind(self, ev));
	  }); // when we try to consume some more bytes, simply unpause the
	  // underlying stream.

	  self._read = function (n) {
	    debug('wrapped _read', n);

	    if (paused) {
	      paused = false;
	      stream.resume();
	    }
	  };

	  return self;
	}; // exposed for testing purposes only.


	Readable._fromList = fromList; // Pluck off n bytes from an array of buffers.
	// Length is the combined lengths of all the buffers in the list.
	// This function is designed to be inlinable, so please take care when making
	// changes to the function body.

	function fromList(n, state) {
	  // nothing buffered
	  if (state.length === 0) return null;
	  var ret;
	  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {
	    // read it all, truncate the list
	    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);
	    state.buffer.clear();
	  } else {
	    // read part of list
	    ret = fromListPartial(n, state.buffer, state.decoder);
	  }
	  return ret;
	} // Extracts only enough buffered data to satisfy the amount requested.
	// This function is designed to be inlinable, so please take care when making
	// changes to the function body.


	function fromListPartial(n, list, hasStrings) {
	  var ret;

	  if (n < list.head.data.length) {
	    // slice is the same for buffers and strings
	    ret = list.head.data.slice(0, n);
	    list.head.data = list.head.data.slice(n);
	  } else if (n === list.head.data.length) {
	    // first chunk is a perfect match
	    ret = list.shift();
	  } else {
	    // result spans more than one buffer
	    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);
	  }

	  return ret;
	} // Copies a specified amount of characters from the list of buffered data
	// chunks.
	// This function is designed to be inlinable, so please take care when making
	// changes to the function body.


	function copyFromBufferString(n, list) {
	  var p = list.head;
	  var c = 1;
	  var ret = p.data;
	  n -= ret.length;

	  while (p = p.next) {
	    var str = p.data;
	    var nb = n > str.length ? str.length : n;
	    if (nb === str.length) ret += str;else ret += str.slice(0, n);
	    n -= nb;

	    if (n === 0) {
	      if (nb === str.length) {
	        ++c;
	        if (p.next) list.head = p.next;else list.head = list.tail = null;
	      } else {
	        list.head = p;
	        p.data = str.slice(nb);
	      }

	      break;
	    }

	    ++c;
	  }

	  list.length -= c;
	  return ret;
	} // Copies a specified amount of bytes from the list of buffered data chunks.
	// This function is designed to be inlinable, so please take care when making
	// changes to the function body.


	function copyFromBuffer(n, list) {
	  var ret = Buffer.allocUnsafe(n);
	  var p = list.head;
	  var c = 1;
	  p.data.copy(ret);
	  n -= p.data.length;

	  while (p = p.next) {
	    var buf = p.data;
	    var nb = n > buf.length ? buf.length : n;
	    buf.copy(ret, ret.length - n, 0, nb);
	    n -= nb;

	    if (n === 0) {
	      if (nb === buf.length) {
	        ++c;
	        if (p.next) list.head = p.next;else list.head = list.tail = null;
	      } else {
	        list.head = p;
	        p.data = buf.slice(nb);
	      }

	      break;
	    }

	    ++c;
	  }

	  list.length -= c;
	  return ret;
	}

	function endReadable(stream) {
	  var state = stream._readableState; // If we get here before consuming all the bytes, then that is a
	  // bug in node.  Should never happen.

	  if (state.length > 0) throw new Error('"endReadable()" called on non-empty stream');

	  if (!state.endEmitted) {
	    state.ended = true;
	    nextTick(endReadableNT, state, stream);
	  }
	}

	function endReadableNT(state, stream) {
	  // Check that we didn't get one last unshift.
	  if (!state.endEmitted && state.length === 0) {
	    state.endEmitted = true;
	    stream.readable = false;
	    stream.emit('end');
	  }
	}

	function forEach(xs, f) {
	  for (var i = 0, l = xs.length; i < l; i++) {
	    f(xs[i], i);
	  }
	}

	function indexOf(xs, x) {
	  for (var i = 0, l = xs.length; i < l; i++) {
	    if (xs[i] === x) return i;
	  }

	  return -1;
	}

	// A bit simpler than readable streams.
	Writable.WritableState = WritableState;
	inherits$1(Writable, EventEmitter);

	function nop() {}

	function WriteReq(chunk, encoding, cb) {
	  this.chunk = chunk;
	  this.encoding = encoding;
	  this.callback = cb;
	  this.next = null;
	}

	function WritableState(options, stream) {
	  Object.defineProperty(this, 'buffer', {
	    get: deprecate(function () {
	      return this.getBuffer();
	    }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.')
	  });
	  options = options || {}; // object stream flag to indicate whether or not this stream
	  // contains buffers or objects.

	  this.objectMode = !!options.objectMode;
	  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false
	  // Note: 0 is a valid value, means that we always return false if
	  // the entire buffer is not flushed immediately on write()

	  var hwm = options.highWaterMark;
	  var defaultHwm = this.objectMode ? 16 : 16 * 1024;
	  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm; // cast to ints.

	  this.highWaterMark = ~~this.highWaterMark;
	  this.needDrain = false; // at the start of calling end()

	  this.ending = false; // when end() has been called, and returned

	  this.ended = false; // when 'finish' is emitted

	  this.finished = false; // should we decode strings into buffers before passing to _write?
	  // this is here so that some node-core streams can optimize string
	  // handling at a lower level.

	  var noDecode = options.decodeStrings === false;
	  this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string
	  // encoding is 'binary' so we have to make this configurable.
	  // Everything else in the universe uses 'utf8', though.

	  this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement
	  // of how much we're waiting to get pushed to some underlying
	  // socket or file.

	  this.length = 0; // a flag to see when we're in the middle of a write.

	  this.writing = false; // when true all writes will be buffered until .uncork() call

	  this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,
	  // or on a later tick.  We set this to true at first, because any
	  // actions that shouldn't happen until "later" should generally also
	  // not happen before the first write call.

	  this.sync = true; // a flag to know if we're processing previously buffered items, which
	  // may call the _write() callback in the same tick, so that we don't
	  // end up in an overlapped onwrite situation.

	  this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)

	  this.onwrite = function (er) {
	    onwrite(stream, er);
	  }; // the callback that the user supplies to write(chunk,encoding,cb)


	  this.writecb = null; // the amount that is being written when _write is called.

	  this.writelen = 0;
	  this.bufferedRequest = null;
	  this.lastBufferedRequest = null; // number of pending user-supplied write callbacks
	  // this must be 0 before 'finish' can be emitted

	  this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs
	  // This is relevant for synchronous Transform streams

	  this.prefinished = false; // True if the error was already emitted and should not be thrown again

	  this.errorEmitted = false; // count buffered requests

	  this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always
	  // one allocated and free to use, and we maintain at most two

	  this.corkedRequestsFree = new CorkedRequest(this);
	}

	WritableState.prototype.getBuffer = function writableStateGetBuffer() {
	  var current = this.bufferedRequest;
	  var out = [];

	  while (current) {
	    out.push(current);
	    current = current.next;
	  }

	  return out;
	};
	function Writable(options) {
	  // Writable ctor is applied to Duplexes, though they're not
	  // instanceof Writable, they're instanceof Readable.
	  if (!(this instanceof Writable) && !(this instanceof Duplex)) return new Writable(options);
	  this._writableState = new WritableState(options, this); // legacy.

	  this.writable = true;

	  if (options) {
	    if (typeof options.write === 'function') this._write = options.write;
	    if (typeof options.writev === 'function') this._writev = options.writev;
	  }

	  EventEmitter.call(this);
	} // Otherwise people can pipe Writable streams, which is just wrong.

	Writable.prototype.pipe = function () {
	  this.emit('error', new Error('Cannot pipe, not readable'));
	};

	function writeAfterEnd(stream, cb) {
	  var er = new Error('write after end'); // TODO: defer error events consistently everywhere, not just the cb

	  stream.emit('error', er);
	  nextTick(cb, er);
	} // If we get something that is not a buffer, string, null, or undefined,
	// and we're not in objectMode, then that's an error.
	// Otherwise stream chunks are all considered to be of length=1, and the
	// watermarks determine how many objects to keep in the buffer, rather than
	// how many bytes or characters.


	function validChunk(stream, state, chunk, cb) {
	  var valid = true;
	  var er = false; // Always throw error if a null is written
	  // if we are not in object mode then throw
	  // if it is not a buffer, string, or undefined.

	  if (chunk === null) {
	    er = new TypeError('May not write null values to stream');
	  } else if (!Buffer.isBuffer(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
	    er = new TypeError('Invalid non-string/buffer chunk');
	  }

	  if (er) {
	    stream.emit('error', er);
	    nextTick(cb, er);
	    valid = false;
	  }

	  return valid;
	}

	Writable.prototype.write = function (chunk, encoding, cb) {
	  var state = this._writableState;
	  var ret = false;

	  if (typeof encoding === 'function') {
	    cb = encoding;
	    encoding = null;
	  }

	  if (Buffer.isBuffer(chunk)) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;
	  if (typeof cb !== 'function') cb = nop;
	  if (state.ended) writeAfterEnd(this, cb);else if (validChunk(this, state, chunk, cb)) {
	    state.pendingcb++;
	    ret = writeOrBuffer(this, state, chunk, encoding, cb);
	  }
	  return ret;
	};

	Writable.prototype.cork = function () {
	  var state = this._writableState;
	  state.corked++;
	};

	Writable.prototype.uncork = function () {
	  var state = this._writableState;

	  if (state.corked) {
	    state.corked--;
	    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
	  }
	};

	Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
	  // node::ParseEncoding() requires lower case.
	  if (typeof encoding === 'string') encoding = encoding.toLowerCase();
	  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);
	  this._writableState.defaultEncoding = encoding;
	  return this;
	};

	function decodeChunk(state, chunk, encoding) {
	  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
	    chunk = Buffer.from(chunk, encoding);
	  }

	  return chunk;
	} // if we're already writing something, then just put this
	// in the queue, and wait our turn.  Otherwise, call _write
	// If we return false, then we need a drain event, so set that flag.


	function writeOrBuffer(stream, state, chunk, encoding, cb) {
	  chunk = decodeChunk(state, chunk, encoding);
	  if (Buffer.isBuffer(chunk)) encoding = 'buffer';
	  var len = state.objectMode ? 1 : chunk.length;
	  state.length += len;
	  var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.

	  if (!ret) state.needDrain = true;

	  if (state.writing || state.corked) {
	    var last = state.lastBufferedRequest;
	    state.lastBufferedRequest = new WriteReq(chunk, encoding, cb);

	    if (last) {
	      last.next = state.lastBufferedRequest;
	    } else {
	      state.bufferedRequest = state.lastBufferedRequest;
	    }

	    state.bufferedRequestCount += 1;
	  } else {
	    doWrite(stream, state, false, len, chunk, encoding, cb);
	  }

	  return ret;
	}

	function doWrite(stream, state, writev, len, chunk, encoding, cb) {
	  state.writelen = len;
	  state.writecb = cb;
	  state.writing = true;
	  state.sync = true;
	  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);
	  state.sync = false;
	}

	function onwriteError(stream, state, sync, er, cb) {
	  --state.pendingcb;
	  if (sync) nextTick(cb, er);else cb(er);
	  stream._writableState.errorEmitted = true;
	  stream.emit('error', er);
	}

	function onwriteStateUpdate(state) {
	  state.writing = false;
	  state.writecb = null;
	  state.length -= state.writelen;
	  state.writelen = 0;
	}

	function onwrite(stream, er) {
	  var state = stream._writableState;
	  var sync = state.sync;
	  var cb = state.writecb;
	  onwriteStateUpdate(state);
	  if (er) onwriteError(stream, state, sync, er, cb);else {
	    // Check if we're actually ready to finish, but don't emit yet
	    var finished = needFinish(state);

	    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
	      clearBuffer(stream, state);
	    }

	    if (sync) {
	      /*<replacement>*/
	      nextTick(afterWrite, stream, state, finished, cb);
	      /*</replacement>*/
	    } else {
	      afterWrite(stream, state, finished, cb);
	    }
	  }
	}

	function afterWrite(stream, state, finished, cb) {
	  if (!finished) onwriteDrain(stream, state);
	  state.pendingcb--;
	  cb();
	  finishMaybe(stream, state);
	} // Must force callback to be called on nextTick, so that we don't
	// emit 'drain' before the write() consumer gets the 'false' return
	// value, and has a chance to attach a 'drain' listener.


	function onwriteDrain(stream, state) {
	  if (state.length === 0 && state.needDrain) {
	    state.needDrain = false;
	    stream.emit('drain');
	  }
	} // if there's something in the buffer waiting, then process it


	function clearBuffer(stream, state) {
	  state.bufferProcessing = true;
	  var entry = state.bufferedRequest;

	  if (stream._writev && entry && entry.next) {
	    // Fast case, write everything using _writev()
	    var l = state.bufferedRequestCount;
	    var buffer = new Array(l);
	    var holder = state.corkedRequestsFree;
	    holder.entry = entry;
	    var count = 0;

	    while (entry) {
	      buffer[count] = entry;
	      entry = entry.next;
	      count += 1;
	    }

	    doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time
	    // as the hot path ends with doWrite

	    state.pendingcb++;
	    state.lastBufferedRequest = null;

	    if (holder.next) {
	      state.corkedRequestsFree = holder.next;
	      holder.next = null;
	    } else {
	      state.corkedRequestsFree = new CorkedRequest(state);
	    }
	  } else {
	    // Slow case, write chunks one-by-one
	    while (entry) {
	      var chunk = entry.chunk;
	      var encoding = entry.encoding;
	      var cb = entry.callback;
	      var len = state.objectMode ? 1 : chunk.length;
	      doWrite(stream, state, false, len, chunk, encoding, cb);
	      entry = entry.next; // if we didn't call the onwrite immediately, then
	      // it means that we need to wait until it does.
	      // also, that means that the chunk and cb are currently
	      // being processed, so move the buffer counter past them.

	      if (state.writing) {
	        break;
	      }
	    }

	    if (entry === null) state.lastBufferedRequest = null;
	  }

	  state.bufferedRequestCount = 0;
	  state.bufferedRequest = entry;
	  state.bufferProcessing = false;
	}

	Writable.prototype._write = function (chunk, encoding, cb) {
	  cb(new Error('not implemented'));
	};

	Writable.prototype._writev = null;

	Writable.prototype.end = function (chunk, encoding, cb) {
	  var state = this._writableState;

	  if (typeof chunk === 'function') {
	    cb = chunk;
	    chunk = null;
	    encoding = null;
	  } else if (typeof encoding === 'function') {
	    cb = encoding;
	    encoding = null;
	  }

	  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks

	  if (state.corked) {
	    state.corked = 1;
	    this.uncork();
	  } // ignore unnecessary end() calls.


	  if (!state.ending && !state.finished) endWritable(this, state, cb);
	};

	function needFinish(state) {
	  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
	}

	function prefinish(stream, state) {
	  if (!state.prefinished) {
	    state.prefinished = true;
	    stream.emit('prefinish');
	  }
	}

	function finishMaybe(stream, state) {
	  var need = needFinish(state);

	  if (need) {
	    if (state.pendingcb === 0) {
	      prefinish(stream, state);
	      state.finished = true;
	      stream.emit('finish');
	    } else {
	      prefinish(stream, state);
	    }
	  }

	  return need;
	}

	function endWritable(stream, state, cb) {
	  state.ending = true;
	  finishMaybe(stream, state);

	  if (cb) {
	    if (state.finished) nextTick(cb);else stream.once('finish', cb);
	  }

	  state.ended = true;
	  stream.writable = false;
	} // It seems a linked list but it is not
	// there will be only 2 of these for each stream


	function CorkedRequest(state) {
	  var _this = this;

	  this.next = null;
	  this.entry = null;

	  this.finish = function (err) {
	    var entry = _this.entry;
	    _this.entry = null;

	    while (entry) {
	      var cb = entry.callback;
	      state.pendingcb--;
	      cb(err);
	      entry = entry.next;
	    }

	    if (state.corkedRequestsFree) {
	      state.corkedRequestsFree.next = _this;
	    } else {
	      state.corkedRequestsFree = _this;
	    }
	  };
	}

	inherits$1(Duplex, Readable);
	var keys = Object.keys(Writable.prototype);

	for (var v$1 = 0; v$1 < keys.length; v$1++) {
	  var method = keys[v$1];
	  if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
	}
	function Duplex(options) {
	  if (!(this instanceof Duplex)) return new Duplex(options);
	  Readable.call(this, options);
	  Writable.call(this, options);
	  if (options && options.readable === false) this.readable = false;
	  if (options && options.writable === false) this.writable = false;
	  this.allowHalfOpen = true;
	  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;
	  this.once('end', onend);
	} // the no-half-open enforcer

	function onend() {
	  // if we allow half-open state, or if the writable side ended,
	  // then we're ok.
	  if (this.allowHalfOpen || this._writableState.ended) return; // no more data can be written.
	  // But allow more writes to happen in this tick.

	  nextTick(onEndNT, this);
	}

	function onEndNT(self) {
	  self.end();
	}

	// a transform stream is a readable/writable stream where you do
	inherits$1(Transform, Duplex);

	function TransformState(stream) {
	  this.afterTransform = function (er, data) {
	    return afterTransform(stream, er, data);
	  };

	  this.needTransform = false;
	  this.transforming = false;
	  this.writecb = null;
	  this.writechunk = null;
	  this.writeencoding = null;
	}

	function afterTransform(stream, er, data) {
	  var ts = stream._transformState;
	  ts.transforming = false;
	  var cb = ts.writecb;
	  if (!cb) return stream.emit('error', new Error('no writecb in Transform class'));
	  ts.writechunk = null;
	  ts.writecb = null;
	  if (data !== null && data !== undefined) stream.push(data);
	  cb(er);
	  var rs = stream._readableState;
	  rs.reading = false;

	  if (rs.needReadable || rs.length < rs.highWaterMark) {
	    stream._read(rs.highWaterMark);
	  }
	}
	function Transform(options) {
	  if (!(this instanceof Transform)) return new Transform(options);
	  Duplex.call(this, options);
	  this._transformState = new TransformState(this); // when the writable side finishes, then flush out anything remaining.

	  var stream = this; // start out asking for a readable event once data is transformed.

	  this._readableState.needReadable = true; // we have implemented the _read method, and done the other things
	  // that Readable wants before the first _read call, so unset the
	  // sync guard flag.

	  this._readableState.sync = false;

	  if (options) {
	    if (typeof options.transform === 'function') this._transform = options.transform;
	    if (typeof options.flush === 'function') this._flush = options.flush;
	  }

	  this.once('prefinish', function () {
	    if (typeof this._flush === 'function') this._flush(function (er) {
	      done(stream, er);
	    });else done(stream);
	  });
	}

	Transform.prototype.push = function (chunk, encoding) {
	  this._transformState.needTransform = false;
	  return Duplex.prototype.push.call(this, chunk, encoding);
	}; // This is the part where you do stuff!
	// override this function in implementation classes.
	// 'chunk' is an input chunk.
	//
	// Call `push(newChunk)` to pass along transformed output
	// to the readable side.  You may call 'push' zero or more times.
	//
	// Call `cb(err)` when you are done with this chunk.  If you pass
	// an error, then that'll put the hurt on the whole operation.  If you
	// never call cb(), then you'll never get another chunk.


	Transform.prototype._transform = function (chunk, encoding, cb) {
	  throw new Error('Not implemented');
	};

	Transform.prototype._write = function (chunk, encoding, cb) {
	  var ts = this._transformState;
	  ts.writecb = cb;
	  ts.writechunk = chunk;
	  ts.writeencoding = encoding;

	  if (!ts.transforming) {
	    var rs = this._readableState;
	    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
	  }
	}; // Doesn't matter what the args are here.
	// _transform does all the work.
	// That we got here means that the readable side wants more data.


	Transform.prototype._read = function (n) {
	  var ts = this._transformState;

	  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
	    ts.transforming = true;

	    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
	  } else {
	    // mark that we need a transform, so that any data that comes in
	    // will get processed, now that we've asked for it.
	    ts.needTransform = true;
	  }
	};

	function done(stream, er) {
	  if (er) return stream.emit('error', er); // if there's nothing in the write buffer, then that means
	  // that nothing more will ever be provided

	  var ws = stream._writableState;
	  var ts = stream._transformState;
	  if (ws.length) throw new Error('Calling transform done when ws.length != 0');
	  if (ts.transforming) throw new Error('Calling transform done when still transforming');
	  return stream.push(null);
	}

	inherits$1(PassThrough, Transform);
	function PassThrough(options) {
	  if (!(this instanceof PassThrough)) return new PassThrough(options);
	  Transform.call(this, options);
	}

	PassThrough.prototype._transform = function (chunk, encoding, cb) {
	  cb(null, chunk);
	};

	inherits$1(Stream, EventEmitter);
	Stream.Readable = Readable;
	Stream.Writable = Writable;
	Stream.Duplex = Duplex;
	Stream.Transform = Transform;
	Stream.PassThrough = PassThrough; // Backwards-compat with node 0.4.x

	Stream.Stream = Stream;
	// part of this class) is overridden in the Readable class.

	function Stream() {
	  EventEmitter.call(this);
	}

	Stream.prototype.pipe = function (dest, options) {
	  var source = this;

	  function ondata(chunk) {
	    if (dest.writable) {
	      if (false === dest.write(chunk) && source.pause) {
	        source.pause();
	      }
	    }
	  }

	  source.on('data', ondata);

	  function ondrain() {
	    if (source.readable && source.resume) {
	      source.resume();
	    }
	  }

	  dest.on('drain', ondrain); // If the 'end' option is not supplied, dest.end() will be called when
	  // source gets the 'end' or 'close' events.  Only dest.end() once.

	  if (!dest._isStdio && (!options || options.end !== false)) {
	    source.on('end', onend);
	    source.on('close', onclose);
	  }

	  var didOnEnd = false;

	  function onend() {
	    if (didOnEnd) return;
	    didOnEnd = true;
	    dest.end();
	  }

	  function onclose() {
	    if (didOnEnd) return;
	    didOnEnd = true;
	    if (typeof dest.destroy === 'function') dest.destroy();
	  } // don't leave dangling pipes when there are errors.


	  function onerror(er) {
	    cleanup();

	    if (EventEmitter.listenerCount(this, 'error') === 0) {
	      throw er; // Unhandled stream error in pipe.
	    }
	  }

	  source.on('error', onerror);
	  dest.on('error', onerror); // remove all the event listeners that were added.

	  function cleanup() {
	    source.removeListener('data', ondata);
	    dest.removeListener('drain', ondrain);
	    source.removeListener('end', onend);
	    source.removeListener('close', onclose);
	    source.removeListener('error', onerror);
	    dest.removeListener('error', onerror);
	    source.removeListener('end', cleanup);
	    source.removeListener('close', cleanup);
	    dest.removeListener('close', cleanup);
	  }

	  source.on('end', cleanup);
	  source.on('close', cleanup);
	  dest.on('close', cleanup);
	  dest.emit('pipe', source); // Allow for unix-like usage: A.pipe(B).pipe(C)

	  return dest;
	};

	function r$1(a) {
	  for (var b = a.message, c = "https://reactjs.org/docs/error-decoder.html?invariant=" + b, d = 1; d < arguments.length; d++) {
	    c += "&args[]=" + encodeURIComponent(arguments[d]);
	  }

	  a.message = "Minified React error #" + b + "; visit " + c + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ";
	  return a;
	}

	var u$1 = "function" === typeof Symbol && Symbol["for"],
	    ba$2 = u$1 ? Symbol["for"]("react.portal") : 60106,
	    v$2 = u$1 ? Symbol["for"]("react.fragment") : 60107,
	    ca$2 = u$1 ? Symbol["for"]("react.strict_mode") : 60108,
	    da$2 = u$1 ? Symbol["for"]("react.profiler") : 60114,
	    x$2 = u$1 ? Symbol["for"]("react.provider") : 60109,
	    ea$2 = u$1 ? Symbol["for"]("react.context") : 60110,
	    fa$2 = u$1 ? Symbol["for"]("react.concurrent_mode") : 60111,
	    ha$1 = u$1 ? Symbol["for"]("react.forward_ref") : 60112,
	    B$2 = u$1 ? Symbol["for"]("react.suspense") : 60113,
	    ia$1 = u$1 ? Symbol["for"]("react.suspense_list") : 60120,
	    ja$1 = u$1 ? Symbol["for"]("react.memo") : 60115,
	    ka$1 = u$1 ? Symbol["for"]("react.lazy") : 60116,
	    la$1 = u$1 ? Symbol["for"]("react.fundamental") : 60117,
	    ma$1 = u$1 ? Symbol["for"]("react.scope") : 60119,
	    C$2 = react.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
	C$2.hasOwnProperty("ReactCurrentDispatcher") || (C$2.ReactCurrentDispatcher = {
	  current: null
	});
	C$2.hasOwnProperty("ReactCurrentBatchConfig") || (C$2.ReactCurrentBatchConfig = {
	  suspense: null
	});

	function na$1(a) {
	  if (-1 === a._status) {
	    a._status = 0;
	    var b = a._ctor;
	    b = b();
	    a._result = b;
	    b.then(function (c) {
	      0 === a._status && (c = c["default"], a._status = 1, a._result = c);
	    }, function (c) {
	      0 === a._status && (a._status = 2, a._result = c);
	    });
	  }
	}

	function D$2(a) {
	  if (null == a) return null;
	  if ("function" === typeof a) return a.displayName || a.name || null;
	  if ("string" === typeof a) return a;

	  switch (a) {
	    case v$2:
	      return "Fragment";

	    case ba$2:
	      return "Portal";

	    case da$2:
	      return "Profiler";

	    case ca$2:
	      return "StrictMode";

	    case B$2:
	      return "Suspense";

	    case ia$1:
	      return "SuspenseList";
	  }

	  if ("object" === _typeof_1(a)) switch (a.$$typeof) {
	    case ea$2:
	      return "Context.Consumer";

	    case x$2:
	      return "Context.Provider";

	    case ha$1:
	      var b = a.render;
	      b = b.displayName || b.name || "";
	      return a.displayName || ("" !== b ? "ForwardRef(" + b + ")" : "ForwardRef");

	    case ja$1:
	      return D$2(a.type);

	    case ka$1:
	      if (a = 1 === a._status ? a._result : null) return D$2(a);
	  }
	  return null;
	}

	var oa$1 = {};

	function E$2(a, b) {
	  for (var c = a._threadCount | 0; c <= b; c++) {
	    a[c] = a._currentValue2, a._threadCount = c + 1;
	  }
	}

	function pa$1(a, b, c, d) {
	  if (d && (d = a.contextType, "object" === _typeof_1(d) && null !== d)) return E$2(d, c), d[c];

	  if (a = a.contextTypes) {
	    c = {};

	    for (var f in a) {
	      c[f] = b[f];
	    }

	    b = c;
	  } else b = oa$1;

	  return b;
	}

	for (var F$2 = new Uint16Array(16), H$2 = 0; 15 > H$2; H$2++) {
	  F$2[H$2] = H$2 + 1;
	}

	F$2[15] = 0;
	var qa$1 = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
	    ra$1 = Object.prototype.hasOwnProperty,
	    sa$1 = {},
	    ta$1 = {};

	function ua$1(a) {
	  if (ra$1.call(ta$1, a)) return !0;
	  if (ra$1.call(sa$1, a)) return !1;
	  if (qa$1.test(a)) return ta$1[a] = !0;
	  sa$1[a] = !0;
	  return !1;
	}

	function va$1(a, b, c, d) {
	  if (null !== c && 0 === c.type) return !1;

	  switch (_typeof_1(b)) {
	    case "function":
	    case "symbol":
	      return !0;

	    case "boolean":
	      if (d) return !1;
	      if (null !== c) return !c.acceptsBooleans;
	      a = a.toLowerCase().slice(0, 5);
	      return "data-" !== a && "aria-" !== a;

	    default:
	      return !1;
	  }
	}

	function wa$1(a, b, c, d) {
	  if (null === b || "undefined" === typeof b || va$1(a, b, c, d)) return !0;
	  if (d) return !1;
	  if (null !== c) switch (c.type) {
	    case 3:
	      return !b;

	    case 4:
	      return !1 === b;

	    case 5:
	      return isNaN(b);

	    case 6:
	      return isNaN(b) || 1 > b;
	  }
	  return !1;
	}

	function J$2(a, b, c, d, f, h) {
	  this.acceptsBooleans = 2 === b || 3 === b || 4 === b;
	  this.attributeName = d;
	  this.attributeNamespace = f;
	  this.mustUseProperty = c;
	  this.propertyName = a;
	  this.type = b;
	  this.sanitizeURL = h;
	}

	var K$2 = {};
	"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function (a) {
	  K$2[a] = new J$2(a, 0, !1, a, null, !1);
	});
	[["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function (a) {
	  var b = a[0];
	  K$2[b] = new J$2(b, 1, !1, a[1], null, !1);
	});
	["contentEditable", "draggable", "spellCheck", "value"].forEach(function (a) {
	  K$2[a] = new J$2(a, 2, !1, a.toLowerCase(), null, !1);
	});
	["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function (a) {
	  K$2[a] = new J$2(a, 2, !1, a, null, !1);
	});
	"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function (a) {
	  K$2[a] = new J$2(a, 3, !1, a.toLowerCase(), null, !1);
	});
	["checked", "multiple", "muted", "selected"].forEach(function (a) {
	  K$2[a] = new J$2(a, 3, !0, a, null, !1);
	});
	["capture", "download"].forEach(function (a) {
	  K$2[a] = new J$2(a, 4, !1, a, null, !1);
	});
	["cols", "rows", "size", "span"].forEach(function (a) {
	  K$2[a] = new J$2(a, 6, !1, a, null, !1);
	});
	["rowSpan", "start"].forEach(function (a) {
	  K$2[a] = new J$2(a, 5, !1, a.toLowerCase(), null, !1);
	});
	var L$1 = /[\-:]([a-z])/g;

	function M$1(a) {
	  return a[1].toUpperCase();
	}

	"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function (a) {
	  var b = a.replace(L$1, M$1);
	  K$2[b] = new J$2(b, 1, !1, a, null, !1);
	});
	"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function (a) {
	  var b = a.replace(L$1, M$1);
	  K$2[b] = new J$2(b, 1, !1, a, "http://www.w3.org/1999/xlink", !1);
	});
	["xml:base", "xml:lang", "xml:space"].forEach(function (a) {
	  var b = a.replace(L$1, M$1);
	  K$2[b] = new J$2(b, 1, !1, a, "http://www.w3.org/XML/1998/namespace", !1);
	});
	["tabIndex", "crossOrigin"].forEach(function (a) {
	  K$2[a] = new J$2(a, 1, !1, a.toLowerCase(), null, !1);
	});
	K$2.xlinkHref = new J$2("xlinkHref", 1, !1, "xlink:href", "http://www.w3.org/1999/xlink", !0);
	["src", "href", "action", "formAction"].forEach(function (a) {
	  K$2[a] = new J$2(a, 1, !1, a.toLowerCase(), null, !0);
	});
	var xa$1 = /["'&<>]/;

	function N$2(a) {
	  if ("boolean" === typeof a || "number" === typeof a) return "" + a;
	  a = "" + a;
	  var b = xa$1.exec(a);

	  if (b) {
	    var c = "",
	        d,
	        f = 0;

	    for (d = b.index; d < a.length; d++) {
	      switch (a.charCodeAt(d)) {
	        case 34:
	          b = "&quot;";
	          break;

	        case 38:
	          b = "&amp;";
	          break;

	        case 39:
	          b = "&#x27;";
	          break;

	        case 60:
	          b = "&lt;";
	          break;

	        case 62:
	          b = "&gt;";
	          break;

	        default:
	          continue;
	      }

	      f !== d && (c += a.substring(f, d));
	      f = d + 1;
	      c += b;
	    }

	    a = f !== d ? c + a.substring(f, d) : c;
	  }

	  return a;
	}

	function ya$1(a, b) {
	  var c = K$2.hasOwnProperty(a) ? K$2[a] : null;
	  var d;
	  if (d = "style" !== a) d = null !== c ? 0 === c.type : !(2 < a.length) || "o" !== a[0] && "O" !== a[0] || "n" !== a[1] && "N" !== a[1] ? !1 : !0;
	  if (d || wa$1(a, b, c, !1)) return "";

	  if (null !== c) {
	    a = c.attributeName;
	    d = c.type;
	    if (3 === d || 4 === d && !0 === b) return a + '=""';
	    c.sanitizeURL && (b = "" + b);
	    return a + "=" + ('"' + N$2(b) + '"');
	  }

	  return ua$1(a) ? a + "=" + ('"' + N$2(b) + '"') : "";
	}

	function za$1(a, b) {
	  return a === b && (0 !== a || 1 / a === 1 / b) || a !== a && b !== b;
	}

	var Aa$1 = "function" === typeof Object.is ? Object.is : za$1,
	    O$2 = null,
	    P$2 = null,
	    Q$2 = null,
	    R$2 = !1,
	    S$2 = !1,
	    U$2 = null,
	    V$2 = 0;

	function W$2() {
	  if (null === O$2) throw r$1(Error(321));
	  return O$2;
	}

	function Ba$1() {
	  if (0 < V$2) throw r$1(Error(312));
	  return {
	    memoizedState: null,
	    queue: null,
	    next: null
	  };
	}

	function Ca$1() {
	  null === Q$2 ? null === P$2 ? (R$2 = !1, P$2 = Q$2 = Ba$1()) : (R$2 = !0, Q$2 = P$2) : null === Q$2.next ? (R$2 = !1, Q$2 = Q$2.next = Ba$1()) : (R$2 = !0, Q$2 = Q$2.next);
	  return Q$2;
	}

	function Da$1(a, b, c, d) {
	  for (; S$2;) {
	    S$2 = !1, V$2 += 1, Q$2 = null, c = a(b, d);
	  }

	  P$2 = O$2 = null;
	  V$2 = 0;
	  Q$2 = U$2 = null;
	  return c;
	}

	function Ea$1(a, b) {
	  return "function" === typeof b ? b(a) : b;
	}

	function Fa$1(a, b, c) {
	  O$2 = W$2();
	  Q$2 = Ca$1();

	  if (R$2) {
	    var d = Q$2.queue;
	    b = d.dispatch;

	    if (null !== U$2 && (c = U$2.get(d), void 0 !== c)) {
	      U$2["delete"](d);
	      d = Q$2.memoizedState;

	      do {
	        d = a(d, c.action), c = c.next;
	      } while (null !== c);

	      Q$2.memoizedState = d;
	      return [d, b];
	    }

	    return [Q$2.memoizedState, b];
	  }

	  a = a === Ea$1 ? "function" === typeof b ? b() : b : void 0 !== c ? c(b) : b;
	  Q$2.memoizedState = a;
	  a = Q$2.queue = {
	    last: null,
	    dispatch: null
	  };
	  a = a.dispatch = Ga$1.bind(null, O$2, a);
	  return [Q$2.memoizedState, a];
	}

	function Ga$1(a, b, c) {
	  if (!(25 > V$2)) throw r$1(Error(301));
	  if (a === O$2) if (S$2 = !0, a = {
	    action: c,
	    next: null
	  }, null === U$2 && (U$2 = new Map()), c = U$2.get(b), void 0 === c) U$2.set(b, a);else {
	    for (b = c; null !== b.next;) {
	      b = b.next;
	    }

	    b.next = a;
	  }
	}

	function Ha$1() {}

	var X$2 = 0,
	    Ia$1 = {
	  readContext: function readContext(a) {
	    var b = X$2;
	    E$2(a, b);
	    return a[b];
	  },
	  useContext: function useContext(a) {
	    W$2();
	    var b = X$2;
	    E$2(a, b);
	    return a[b];
	  },
	  useMemo: function useMemo(a, b) {
	    O$2 = W$2();
	    Q$2 = Ca$1();
	    b = void 0 === b ? null : b;

	    if (null !== Q$2) {
	      var c = Q$2.memoizedState;

	      if (null !== c && null !== b) {
	        a: {
	          var d = c[1];
	          if (null === d) d = !1;else {
	            for (var f = 0; f < d.length && f < b.length; f++) {
	              if (!Aa$1(b[f], d[f])) {
	                d = !1;
	                break a;
	              }
	            }

	            d = !0;
	          }
	        }

	        if (d) return c[0];
	      }
	    }

	    a = a();
	    Q$2.memoizedState = [a, b];
	    return a;
	  },
	  useReducer: Fa$1,
	  useRef: function useRef(a) {
	    O$2 = W$2();
	    Q$2 = Ca$1();
	    var b = Q$2.memoizedState;
	    return null === b ? (a = {
	      current: a
	    }, Q$2.memoizedState = a) : b;
	  },
	  useState: function useState(a) {
	    return Fa$1(Ea$1, a);
	  },
	  useLayoutEffect: function useLayoutEffect() {},
	  useCallback: function useCallback(a) {
	    return a;
	  },
	  useImperativeHandle: Ha$1,
	  useEffect: Ha$1,
	  useDebugValue: Ha$1,
	  useResponder: function useResponder(a, b) {
	    return {
	      props: b,
	      responder: a
	    };
	  }
	},
	    Ja$1 = {
	  html: "http://www.w3.org/1999/xhtml",
	  mathml: "http://www.w3.org/1998/Math/MathML",
	  svg: "http://www.w3.org/2000/svg"
	};

	function Ka$1(a) {
	  switch (a) {
	    case "svg":
	      return "http://www.w3.org/2000/svg";

	    case "math":
	      return "http://www.w3.org/1998/Math/MathML";

	    default:
	      return "http://www.w3.org/1999/xhtml";
	  }
	}

	var La$1 = {
	  area: !0,
	  base: !0,
	  br: !0,
	  col: !0,
	  embed: !0,
	  hr: !0,
	  img: !0,
	  input: !0,
	  keygen: !0,
	  link: !0,
	  meta: !0,
	  param: !0,
	  source: !0,
	  track: !0,
	  wbr: !0
	},
	    Ma$1 = objectAssign({
	  menuitem: !0
	}, La$1),
	    Y$2 = {
	  animationIterationCount: !0,
	  borderImageOutset: !0,
	  borderImageSlice: !0,
	  borderImageWidth: !0,
	  boxFlex: !0,
	  boxFlexGroup: !0,
	  boxOrdinalGroup: !0,
	  columnCount: !0,
	  columns: !0,
	  flex: !0,
	  flexGrow: !0,
	  flexPositive: !0,
	  flexShrink: !0,
	  flexNegative: !0,
	  flexOrder: !0,
	  gridArea: !0,
	  gridRow: !0,
	  gridRowEnd: !0,
	  gridRowSpan: !0,
	  gridRowStart: !0,
	  gridColumn: !0,
	  gridColumnEnd: !0,
	  gridColumnSpan: !0,
	  gridColumnStart: !0,
	  fontWeight: !0,
	  lineClamp: !0,
	  lineHeight: !0,
	  opacity: !0,
	  order: !0,
	  orphans: !0,
	  tabSize: !0,
	  widows: !0,
	  zIndex: !0,
	  zoom: !0,
	  fillOpacity: !0,
	  floodOpacity: !0,
	  stopOpacity: !0,
	  strokeDasharray: !0,
	  strokeDashoffset: !0,
	  strokeMiterlimit: !0,
	  strokeOpacity: !0,
	  strokeWidth: !0
	},
	    Na$1 = ["Webkit", "ms", "Moz", "O"];
	Object.keys(Y$2).forEach(function (a) {
	  Na$1.forEach(function (b) {
	    b = b + a.charAt(0).toUpperCase() + a.substring(1);
	    Y$2[b] = Y$2[a];
	  });
	});
	var Oa$1 = /([A-Z])/g,
	    Pa$1 = /^ms-/,
	    Z$2 = react.Children.toArray,
	    Qa$1 = C$2.ReactCurrentDispatcher,
	    Ra$1 = {
	  listing: !0,
	  pre: !0,
	  textarea: !0
	},
	    Sa$1 = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/,
	    Ta$1 = {},
	    Ua$1 = {};

	function Va$1(a) {
	  if (void 0 === a || null === a) return a;
	  var b = "";
	  react.Children.forEach(a, function (a) {
	    null != a && (b += a);
	  });
	  return b;
	}

	var Wa$1 = Object.prototype.hasOwnProperty,
	    Xa$1 = {
	  children: null,
	  dangerouslySetInnerHTML: null,
	  suppressContentEditableWarning: null,
	  suppressHydrationWarning: null
	};

	function Ya$1(a, b) {
	  if (void 0 === a) throw r$1(Error(152), D$2(b) || "Component");
	}

	function Za$1(a, b, c) {
	  function d(d, h) {
	    var e = h.prototype && h.prototype.isReactComponent,
	        f = pa$1(h, b, c, e),
	        p = [],
	        g = !1,
	        l = {
	      isMounted: function isMounted() {
	        return !1;
	      },
	      enqueueForceUpdate: function enqueueForceUpdate() {
	        if (null === p) return null;
	      },
	      enqueueReplaceState: function enqueueReplaceState(a, c) {
	        g = !0;
	        p = [c];
	      },
	      enqueueSetState: function enqueueSetState(a, c) {
	        if (null === p) return null;
	        p.push(c);
	      }
	    };

	    if (e) {
	      if (e = new h(d.props, f, l), "function" === typeof h.getDerivedStateFromProps) {
	        var w = h.getDerivedStateFromProps.call(null, d.props, e.state);
	        null != w && (e.state = objectAssign({}, e.state, w));
	      }
	    } else if (O$2 = {}, e = h(d.props, f, l), e = Da$1(h, d.props, e, f), null == e || null == e.render) {
	      a = e;
	      Ya$1(a, h);
	      return;
	    }

	    e.props = d.props;
	    e.context = f;
	    e.updater = l;
	    l = e.state;
	    void 0 === l && (e.state = l = null);
	    if ("function" === typeof e.UNSAFE_componentWillMount || "function" === typeof e.componentWillMount) if ("function" === typeof e.componentWillMount && "function" !== typeof h.getDerivedStateFromProps && e.componentWillMount(), "function" === typeof e.UNSAFE_componentWillMount && "function" !== typeof h.getDerivedStateFromProps && e.UNSAFE_componentWillMount(), p.length) {
	      l = p;
	      var t = g;
	      p = null;
	      g = !1;
	      if (t && 1 === l.length) e.state = l[0];else {
	        w = t ? l[0] : e.state;
	        var y = !0;

	        for (t = t ? 1 : 0; t < l.length; t++) {
	          var q = l[t];
	          q = "function" === typeof q ? q.call(e, w, d.props, f) : q;
	          null != q && (y ? (y = !1, w = objectAssign({}, w, q)) : objectAssign(w, q));
	        }

	        e.state = w;
	      }
	    } else p = null;
	    a = e.render();
	    Ya$1(a, h);

	    if ("function" === typeof e.getChildContext && (d = h.childContextTypes, "object" === _typeof_1(d))) {
	      var A = e.getChildContext();

	      for (var T in A) {
	        if (!(T in d)) throw r$1(Error(108), D$2(h) || "Unknown", T);
	      }
	    }

	    A && (b = objectAssign({}, b, A));
	  }

	  for (; react.isValidElement(a);) {
	    var f = a,
	        h = f.type;
	    if ("function" !== typeof h) break;
	    d(f, h);
	  }

	  return {
	    child: a,
	    context: b
	  };
	}

	var $a$1 = function () {
	  function a(a, b) {
	    react.isValidElement(a) ? a.type !== v$2 ? a = [a] : (a = a.props.children, a = react.isValidElement(a) ? [a] : Z$2(a)) : a = Z$2(a);
	    a = {
	      type: null,
	      domNamespace: Ja$1.html,
	      children: a,
	      childIndex: 0,
	      context: oa$1,
	      footer: ""
	    };
	    var c = F$2[0];

	    if (0 === c) {
	      var d = F$2;
	      c = d.length;
	      var p = 2 * c;
	      if (!(65536 >= p)) throw r$1(Error(304));
	      var g = new Uint16Array(p);
	      g.set(d);
	      F$2 = g;
	      F$2[0] = c + 1;

	      for (d = c; d < p - 1; d++) {
	        F$2[d] = d + 1;
	      }

	      F$2[p - 1] = 0;
	    } else F$2[0] = F$2[c];

	    this.threadID = c;
	    this.stack = [a];
	    this.exhausted = !1;
	    this.currentSelectValue = null;
	    this.previousWasTextNode = !1;
	    this.makeStaticMarkup = b;
	    this.suspenseDepth = 0;
	    this.contextIndex = -1;
	    this.contextStack = [];
	    this.contextValueStack = [];
	  }

	  var b = a.prototype;

	  b.destroy = function () {
	    if (!this.exhausted) {
	      this.exhausted = !0;
	      this.clearProviders();
	      var a = this.threadID;
	      F$2[a] = F$2[0];
	      F$2[0] = a;
	    }
	  };

	  b.pushProvider = function (a) {
	    var b = ++this.contextIndex,
	        c = a.type._context,
	        h = this.threadID;
	    E$2(c, h);
	    var p = c[h];
	    this.contextStack[b] = c;
	    this.contextValueStack[b] = p;
	    c[h] = a.props.value;
	  };

	  b.popProvider = function () {
	    var a = this.contextIndex,
	        b = this.contextStack[a],
	        f = this.contextValueStack[a];
	    this.contextStack[a] = null;
	    this.contextValueStack[a] = null;
	    this.contextIndex--;
	    b[this.threadID] = f;
	  };

	  b.clearProviders = function () {
	    for (var a = this.contextIndex; 0 <= a; a--) {
	      this.contextStack[a][this.threadID] = this.contextValueStack[a];
	    }
	  };

	  b.read = function (a) {
	    if (this.exhausted) return null;
	    var b = X$2;
	    X$2 = this.threadID;
	    var c = Qa$1.current;
	    Qa$1.current = Ia$1;

	    try {
	      for (var h = [""], p = !1; h[0].length < a;) {
	        if (0 === this.stack.length) {
	          this.exhausted = !0;
	          var g = this.threadID;
	          F$2[g] = F$2[0];
	          F$2[0] = g;
	          break;
	        }

	        var e = this.stack[this.stack.length - 1];

	        if (p || e.childIndex >= e.children.length) {
	          var I = e.footer;
	          "" !== I && (this.previousWasTextNode = !1);
	          this.stack.pop();
	          if ("select" === e.type) this.currentSelectValue = null;else if (null != e.type && null != e.type.type && e.type.type.$$typeof === x$2) this.popProvider(e.type);else if (e.type === B$2) {
	            this.suspenseDepth--;
	            var G = h.pop();

	            if (p) {
	              p = !1;
	              var n = e.fallbackFrame;
	              if (!n) throw r$1(Error(303));
	              this.stack.push(n);
	              h[this.suspenseDepth] += "\x3c!--$!--\x3e";
	              continue;
	            } else h[this.suspenseDepth] += G;
	          }
	          h[this.suspenseDepth] += I;
	        } else {
	          var l = e.children[e.childIndex++],
	              w = "";

	          try {
	            w += this.render(l, e.context, e.domNamespace);
	          } catch (t) {
	            if (null != t && "function" === typeof t.then) throw r$1(Error(294));
	            throw t;
	          } finally {}

	          h.length <= this.suspenseDepth && h.push("");
	          h[this.suspenseDepth] += w;
	        }
	      }

	      return h[0];
	    } finally {
	      Qa$1.current = c, X$2 = b;
	    }
	  };

	  b.render = function (a, b, f) {
	    if ("string" === typeof a || "number" === typeof a) {
	      f = "" + a;
	      if ("" === f) return "";
	      if (this.makeStaticMarkup) return N$2(f);
	      if (this.previousWasTextNode) return "\x3c!-- --\x3e" + N$2(f);
	      this.previousWasTextNode = !0;
	      return N$2(f);
	    }

	    b = Za$1(a, b, this.threadID);
	    a = b.child;
	    b = b.context;
	    if (null === a || !1 === a) return "";

	    if (!react.isValidElement(a)) {
	      if (null != a && null != a.$$typeof) {
	        f = a.$$typeof;
	        if (f === ba$2) throw r$1(Error(257));
	        throw r$1(Error(258), f.toString());
	      }

	      a = Z$2(a);
	      this.stack.push({
	        type: null,
	        domNamespace: f,
	        children: a,
	        childIndex: 0,
	        context: b,
	        footer: ""
	      });
	      return "";
	    }

	    var c = a.type;
	    if ("string" === typeof c) return this.renderDOM(a, b, f);

	    switch (c) {
	      case ca$2:
	      case fa$2:
	      case da$2:
	      case ia$1:
	      case v$2:
	        return a = Z$2(a.props.children), this.stack.push({
	          type: null,
	          domNamespace: f,
	          children: a,
	          childIndex: 0,
	          context: b,
	          footer: ""
	        }), "";

	      case B$2:
	        throw r$1(Error(294));
	    }

	    if ("object" === _typeof_1(c) && null !== c) switch (c.$$typeof) {
	      case ha$1:
	        O$2 = {};
	        var d = c.render(a.props, a.ref);
	        d = Da$1(c.render, a.props, d, a.ref);
	        d = Z$2(d);
	        this.stack.push({
	          type: null,
	          domNamespace: f,
	          children: d,
	          childIndex: 0,
	          context: b,
	          footer: ""
	        });
	        return "";

	      case ja$1:
	        return a = [react.createElement(c.type, objectAssign({
	          ref: a.ref
	        }, a.props))], this.stack.push({
	          type: null,
	          domNamespace: f,
	          children: a,
	          childIndex: 0,
	          context: b,
	          footer: ""
	        }), "";

	      case x$2:
	        return c = Z$2(a.props.children), f = {
	          type: a,
	          domNamespace: f,
	          children: c,
	          childIndex: 0,
	          context: b,
	          footer: ""
	        }, this.pushProvider(a), this.stack.push(f), "";

	      case ea$2:
	        c = a.type;
	        d = a.props;
	        var g = this.threadID;
	        E$2(c, g);
	        c = Z$2(d.children(c[g]));
	        this.stack.push({
	          type: a,
	          domNamespace: f,
	          children: c,
	          childIndex: 0,
	          context: b,
	          footer: ""
	        });
	        return "";

	      case la$1:
	        throw r$1(Error(338));

	      case ka$1:
	        switch (c = a.type, na$1(c), c._status) {
	          case 1:
	            return a = [react.createElement(c._result, objectAssign({
	              ref: a.ref
	            }, a.props))], this.stack.push({
	              type: null,
	              domNamespace: f,
	              children: a,
	              childIndex: 0,
	              context: b,
	              footer: ""
	            }), "";

	          case 2:
	            throw c._result;

	          default:
	            throw r$1(Error(295));
	        }

	      case ma$1:
	        throw r$1(Error(343));
	    }
	    throw r$1(Error(130), null == c ? c : _typeof_1(c), "");
	  };

	  b.renderDOM = function (a, b, f) {
	    var c = a.type.toLowerCase();

	    if (!Ta$1.hasOwnProperty(c)) {
	      if (!Sa$1.test(c)) throw r$1(Error(65), c);
	      Ta$1[c] = !0;
	    }

	    var d = a.props;
	    if ("input" === c) d = objectAssign({
	      type: void 0
	    }, d, {
	      defaultChecked: void 0,
	      defaultValue: void 0,
	      value: null != d.value ? d.value : d.defaultValue,
	      checked: null != d.checked ? d.checked : d.defaultChecked
	    });else if ("textarea" === c) {
	      var g = d.value;

	      if (null == g) {
	        g = d.defaultValue;
	        var e = d.children;

	        if (null != e) {
	          if (null != g) throw r$1(Error(92));

	          if (Array.isArray(e)) {
	            if (!(1 >= e.length)) throw r$1(Error(93));
	            e = e[0];
	          }

	          g = "" + e;
	        }

	        null == g && (g = "");
	      }

	      d = objectAssign({}, d, {
	        value: void 0,
	        children: "" + g
	      });
	    } else if ("select" === c) this.currentSelectValue = null != d.value ? d.value : d.defaultValue, d = objectAssign({}, d, {
	      value: void 0
	    });else if ("option" === c) {
	      e = this.currentSelectValue;
	      var I = Va$1(d.children);

	      if (null != e) {
	        var G = null != d.value ? d.value + "" : I;
	        g = !1;
	        if (Array.isArray(e)) for (var n = 0; n < e.length; n++) {
	          if ("" + e[n] === G) {
	            g = !0;
	            break;
	          }
	        } else g = "" + e === G;
	        d = objectAssign({
	          selected: void 0,
	          children: void 0
	        }, d, {
	          selected: g,
	          children: I
	        });
	      }
	    }

	    if (g = d) {
	      if (Ma$1[c] && (null != g.children || null != g.dangerouslySetInnerHTML)) throw r$1(Error(137), c, "");

	      if (null != g.dangerouslySetInnerHTML) {
	        if (null != g.children) throw r$1(Error(60));
	        if (!("object" === _typeof_1(g.dangerouslySetInnerHTML) && "__html" in g.dangerouslySetInnerHTML)) throw r$1(Error(61));
	      }

	      if (null != g.style && "object" !== _typeof_1(g.style)) throw r$1(Error(62), "");
	    }

	    g = d;
	    e = this.makeStaticMarkup;
	    I = 1 === this.stack.length;
	    G = "<" + a.type;

	    for (z in g) {
	      if (Wa$1.call(g, z)) {
	        var l = g[z];

	        if (null != l) {
	          if ("style" === z) {
	            n = void 0;
	            var w = "",
	                t = "";

	            for (n in l) {
	              if (l.hasOwnProperty(n)) {
	                var y = 0 === n.indexOf("--"),
	                    q = l[n];

	                if (null != q) {
	                  if (y) var A = n;else if (A = n, Ua$1.hasOwnProperty(A)) A = Ua$1[A];else {
	                    var T = A.replace(Oa$1, "-$1").toLowerCase().replace(Pa$1, "-ms-");
	                    A = Ua$1[A] = T;
	                  }
	                  w += t + A + ":";
	                  t = n;
	                  y = null == q || "boolean" === typeof q || "" === q ? "" : y || "number" !== typeof q || 0 === q || Y$2.hasOwnProperty(t) && Y$2[t] ? ("" + q).trim() : q + "px";
	                  w += y;
	                  t = ";";
	                }
	              }
	            }

	            l = w || null;
	          }

	          n = null;

	          b: if (y = c, q = g, -1 === y.indexOf("-")) y = "string" === typeof q.is;else switch (y) {
	            case "annotation-xml":
	            case "color-profile":
	            case "font-face":
	            case "font-face-src":
	            case "font-face-uri":
	            case "font-face-format":
	            case "font-face-name":
	            case "missing-glyph":
	              y = !1;
	              break b;

	            default:
	              y = !0;
	          }

	          y ? Xa$1.hasOwnProperty(z) || (n = z, n = ua$1(n) && null != l ? n + "=" + ('"' + N$2(l) + '"') : "") : n = ya$1(z, l);
	          n && (G += " " + n);
	        }
	      }
	    }

	    e || I && (G += ' data-reactroot=""');
	    var z = G;
	    g = "";
	    La$1.hasOwnProperty(c) ? z += "/>" : (z += ">", g = "</" + a.type + ">");

	    a: {
	      e = d.dangerouslySetInnerHTML;

	      if (null != e) {
	        if (null != e.__html) {
	          e = e.__html;
	          break a;
	        }
	      } else if (e = d.children, "string" === typeof e || "number" === typeof e) {
	        e = N$2(e);
	        break a;
	      }

	      e = null;
	    }

	    null != e ? (d = [], Ra$1[c] && "\n" === e.charAt(0) && (z += "\n"), z += e) : d = Z$2(d.children);
	    a = a.type;
	    f = null == f || "http://www.w3.org/1999/xhtml" === f ? Ka$1(a) : "http://www.w3.org/2000/svg" === f && "foreignObject" === a ? "http://www.w3.org/1999/xhtml" : f;
	    this.stack.push({
	      domNamespace: f,
	      type: c,
	      children: d,
	      childIndex: 0,
	      context: b,
	      footer: g
	    });
	    this.previousWasTextNode = !1;
	    return z;
	  };

	  return a;
	}();

	function ab$1(a, b) {
	  a.prototype = Object.create(b.prototype);
	  a.prototype.constructor = a;
	  a.__proto__ = b;
	}

	var bb$1 = function (a) {
	  function b(b, c) {
	    var d = a.call(this, {}) || this;
	    d.partialRenderer = new $a$1(b, c);
	    return d;
	  }

	  ab$1(b, a);
	  var c = b.prototype;

	  c._destroy = function (a, b) {
	    this.partialRenderer.destroy();
	    b(a);
	  };

	  c._read = function (a) {
	    try {
	      this.push(this.partialRenderer.read(a));
	    } catch (f) {
	      this.destroy(f);
	    }
	  };

	  return b;
	}(Stream.Readable),
	    cb$1 = {
	  renderToString: function renderToString(a) {
	    a = new $a$1(a, !1);

	    try {
	      return a.read(Infinity);
	    } finally {
	      a.destroy();
	    }
	  },
	  renderToStaticMarkup: function renderToStaticMarkup(a) {
	    a = new $a$1(a, !0);

	    try {
	      return a.read(Infinity);
	    } finally {
	      a.destroy();
	    }
	  },
	  renderToNodeStream: function renderToNodeStream(a) {
	    return new bb$1(a, !1);
	  },
	  renderToStaticNodeStream: function renderToStaticNodeStream(a) {
	    return new bb$1(a, !0);
	  },
	  version: "16.10.2"
	},
	    db$1 = {
	  "default": cb$1
	},
	    eb$1 = db$1 && cb$1 || db$1;

	var reactDomServer_node_production_min = eb$1["default"] || eb$1;

	var server_node = createCommonjsModule(function (module) {

	  {
	    module.exports = reactDomServer_node_production_min;
	  }
	});

	var server = server_node;

	function Cache() {
	  var _cache = Object.create(null);

	  var _hitCount = 0;
	  var _missCount = 0;
	  var _size = 0;
	  var _debug = false;

	  this.put = function (key, value, time, timeoutCallback) {
	    if (_debug) {
	      console.log('caching: %s = %j (@%s)', key, value, time);
	    }

	    if (typeof time !== 'undefined' && (typeof time !== 'number' || isNaN(time) || time <= 0)) {
	      throw new Error('Cache timeout must be a positive number');
	    } else if (typeof timeoutCallback !== 'undefined' && typeof timeoutCallback !== 'function') {
	      throw new Error('Cache timeout callback must be a function');
	    }

	    var oldRecord = _cache[key];

	    if (oldRecord) {
	      clearTimeout(oldRecord.timeout);
	    } else {
	      _size++;
	    }

	    var record = {
	      value: value,
	      expire: time + Date.now()
	    };

	    if (!isNaN(record.expire)) {
	      record.timeout = setTimeout(function () {
	        _del(key);

	        if (timeoutCallback) {
	          timeoutCallback(key, value);
	        }
	      }.bind(this), time);
	    }

	    _cache[key] = record;
	    return value;
	  };

	  this.del = function (key) {
	    var canDelete = true;
	    var oldRecord = _cache[key];

	    if (oldRecord) {
	      clearTimeout(oldRecord.timeout);

	      if (!isNaN(oldRecord.expire) && oldRecord.expire < Date.now()) {
	        canDelete = false;
	      }
	    } else {
	      canDelete = false;
	    }

	    if (canDelete) {
	      _del(key);
	    }

	    return canDelete;
	  };

	  function _del(key) {
	    _size--;
	    delete _cache[key];
	  }

	  this.clear = function () {
	    for (var key in _cache) {
	      clearTimeout(_cache[key].timeout);
	    }

	    _size = 0;
	    _cache = Object.create(null);

	    if (_debug) {
	      _hitCount = 0;
	      _missCount = 0;
	    }
	  };

	  this.get = function (key) {
	    var data = _cache[key];

	    if (typeof data != "undefined") {
	      if (isNaN(data.expire) || data.expire >= Date.now()) {
	        if (_debug) _hitCount++;
	        return data.value;
	      } else {
	        // free some space
	        if (_debug) _missCount++;
	        _size--;
	        delete _cache[key];
	      }
	    } else if (_debug) {
	      _missCount++;
	    }

	    return null;
	  };

	  this.size = function () {
	    return _size;
	  };

	  this.memsize = function () {
	    var size = 0,
	        key;

	    for (key in _cache) {
	      size++;
	    }

	    return size;
	  };

	  this.debug = function (bool) {
	    _debug = bool;
	  };

	  this.hits = function () {
	    return _hitCount;
	  };

	  this.misses = function () {
	    return _missCount;
	  };

	  this.keys = function () {
	    return Object.keys(_cache);
	  };

	  this.exportJson = function () {
	    var plainJsCache = {}; // Discard the `timeout` property.
	    // Note: JSON doesn't support `NaN`, so convert it to `'NaN'`.

	    for (var key in _cache) {
	      var record = _cache[key];
	      plainJsCache[key] = {
	        value: record.value,
	        expire: record.expire || 'NaN'
	      };
	    }

	    return JSON.stringify(plainJsCache);
	  };

	  this.importJson = function (jsonToImport, options) {
	    var cacheToImport = JSON.parse(jsonToImport);
	    var currTime = Date.now();
	    var skipDuplicates = options && options.skipDuplicates;

	    for (var key in cacheToImport) {
	      if (cacheToImport.hasOwnProperty(key)) {
	        if (skipDuplicates) {
	          var existingRecord = _cache[key];

	          if (existingRecord) {
	            if (_debug) {
	              console.log('Skipping duplicate imported key \'%s\'', key);
	            }

	            continue;
	          }
	        }

	        var record = cacheToImport[key]; // record.expire could be `'NaN'` if no expiry was set.
	        // Try to subtract from it; a string minus a number is `NaN`, which is perfectly fine here.

	        var remainingTime = record.expire - currTime;

	        if (remainingTime <= 0) {
	          // Delete any record that might exist with the same key, since this key is expired.
	          this.del(key);
	          continue;
	        } // Remaining time must now be either positive or `NaN`,
	        // but `put` will throw an error if we try to give it `NaN`.


	        remainingTime = remainingTime > 0 ? remainingTime : undefined;
	        this.put(key, record.value, remainingTime);
	      }
	    }

	    return this.size();
	  };
	}

	var memoryCache = new Cache();
	var Cache_1 = Cache;
	memoryCache.Cache = Cache_1;

	var reactDomFactories = createCommonjsModule(function (module, exports) {
	  /**
	   * Copyright (c) 2015-present, Facebook, Inc.
	   *
	   * This source code is licensed under the MIT license found in the
	   * LICENSE file in the root directory of this source tree.
	   */

	  (function (f) {
	    {
	      module.exports = f(react);
	      /* global define */
	    }
	  })(function (React) {
	    /**
	     * Create a factory that creates HTML tag elements.
	     */
	    function createDOMFactory(type) {
	      var factory = React.createElement.bind(null, type); // Expose the type on the factory and the prototype so that it can be
	      // easily accessed on elements. E.g. `<Foo />.type === Foo`.
	      // This should not be named `constructor` since this may not be the function
	      // that created the element, and it may not even be a constructor.

	      factory.type = type;
	      return factory;
	    }
	    /**
	     * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
	     */

	    var ReactDOMFactories = {
	      a: createDOMFactory('a'),
	      abbr: createDOMFactory('abbr'),
	      address: createDOMFactory('address'),
	      area: createDOMFactory('area'),
	      article: createDOMFactory('article'),
	      aside: createDOMFactory('aside'),
	      audio: createDOMFactory('audio'),
	      b: createDOMFactory('b'),
	      base: createDOMFactory('base'),
	      bdi: createDOMFactory('bdi'),
	      bdo: createDOMFactory('bdo'),
	      big: createDOMFactory('big'),
	      blockquote: createDOMFactory('blockquote'),
	      body: createDOMFactory('body'),
	      br: createDOMFactory('br'),
	      button: createDOMFactory('button'),
	      canvas: createDOMFactory('canvas'),
	      caption: createDOMFactory('caption'),
	      cite: createDOMFactory('cite'),
	      code: createDOMFactory('code'),
	      col: createDOMFactory('col'),
	      colgroup: createDOMFactory('colgroup'),
	      data: createDOMFactory('data'),
	      datalist: createDOMFactory('datalist'),
	      dd: createDOMFactory('dd'),
	      del: createDOMFactory('del'),
	      details: createDOMFactory('details'),
	      dfn: createDOMFactory('dfn'),
	      dialog: createDOMFactory('dialog'),
	      div: createDOMFactory('div'),
	      dl: createDOMFactory('dl'),
	      dt: createDOMFactory('dt'),
	      em: createDOMFactory('em'),
	      embed: createDOMFactory('embed'),
	      fieldset: createDOMFactory('fieldset'),
	      figcaption: createDOMFactory('figcaption'),
	      figure: createDOMFactory('figure'),
	      footer: createDOMFactory('footer'),
	      form: createDOMFactory('form'),
	      h1: createDOMFactory('h1'),
	      h2: createDOMFactory('h2'),
	      h3: createDOMFactory('h3'),
	      h4: createDOMFactory('h4'),
	      h5: createDOMFactory('h5'),
	      h6: createDOMFactory('h6'),
	      head: createDOMFactory('head'),
	      header: createDOMFactory('header'),
	      hgroup: createDOMFactory('hgroup'),
	      hr: createDOMFactory('hr'),
	      html: createDOMFactory('html'),
	      i: createDOMFactory('i'),
	      iframe: createDOMFactory('iframe'),
	      img: createDOMFactory('img'),
	      input: createDOMFactory('input'),
	      ins: createDOMFactory('ins'),
	      kbd: createDOMFactory('kbd'),
	      keygen: createDOMFactory('keygen'),
	      label: createDOMFactory('label'),
	      legend: createDOMFactory('legend'),
	      li: createDOMFactory('li'),
	      link: createDOMFactory('link'),
	      main: createDOMFactory('main'),
	      map: createDOMFactory('map'),
	      mark: createDOMFactory('mark'),
	      menu: createDOMFactory('menu'),
	      menuitem: createDOMFactory('menuitem'),
	      meta: createDOMFactory('meta'),
	      meter: createDOMFactory('meter'),
	      nav: createDOMFactory('nav'),
	      noscript: createDOMFactory('noscript'),
	      object: createDOMFactory('object'),
	      ol: createDOMFactory('ol'),
	      optgroup: createDOMFactory('optgroup'),
	      option: createDOMFactory('option'),
	      output: createDOMFactory('output'),
	      p: createDOMFactory('p'),
	      param: createDOMFactory('param'),
	      picture: createDOMFactory('picture'),
	      pre: createDOMFactory('pre'),
	      progress: createDOMFactory('progress'),
	      q: createDOMFactory('q'),
	      rp: createDOMFactory('rp'),
	      rt: createDOMFactory('rt'),
	      ruby: createDOMFactory('ruby'),
	      s: createDOMFactory('s'),
	      samp: createDOMFactory('samp'),
	      script: createDOMFactory('script'),
	      section: createDOMFactory('section'),
	      select: createDOMFactory('select'),
	      small: createDOMFactory('small'),
	      source: createDOMFactory('source'),
	      span: createDOMFactory('span'),
	      strong: createDOMFactory('strong'),
	      style: createDOMFactory('style'),
	      sub: createDOMFactory('sub'),
	      summary: createDOMFactory('summary'),
	      sup: createDOMFactory('sup'),
	      table: createDOMFactory('table'),
	      tbody: createDOMFactory('tbody'),
	      td: createDOMFactory('td'),
	      textarea: createDOMFactory('textarea'),
	      tfoot: createDOMFactory('tfoot'),
	      th: createDOMFactory('th'),
	      thead: createDOMFactory('thead'),
	      time: createDOMFactory('time'),
	      title: createDOMFactory('title'),
	      tr: createDOMFactory('tr'),
	      track: createDOMFactory('track'),
	      u: createDOMFactory('u'),
	      ul: createDOMFactory('ul'),
	      "var": createDOMFactory('var'),
	      video: createDOMFactory('video'),
	      wbr: createDOMFactory('wbr'),
	      // SVG
	      circle: createDOMFactory('circle'),
	      clipPath: createDOMFactory('clipPath'),
	      defs: createDOMFactory('defs'),
	      ellipse: createDOMFactory('ellipse'),
	      g: createDOMFactory('g'),
	      image: createDOMFactory('image'),
	      line: createDOMFactory('line'),
	      linearGradient: createDOMFactory('linearGradient'),
	      mask: createDOMFactory('mask'),
	      path: createDOMFactory('path'),
	      pattern: createDOMFactory('pattern'),
	      polygon: createDOMFactory('polygon'),
	      polyline: createDOMFactory('polyline'),
	      radialGradient: createDOMFactory('radialGradient'),
	      rect: createDOMFactory('rect'),
	      stop: createDOMFactory('stop'),
	      svg: createDOMFactory('svg'),
	      text: createDOMFactory('text'),
	      tspan: createDOMFactory('tspan')
	    }; // due to wrapper and conditionals at the top, this will either become
	    // `module.exports ReactDOMFactories` if that is available,
	    // otherwise it will be defined via `define(['react'], ReactDOMFactories)`
	    // if that is available,
	    // otherwise it will be defined as global variable.

	    return ReactDOMFactories;
	  });
	});

	var uaParser = createCommonjsModule(function (module, exports) {
	  /*!
	   * UAParser.js v0.7.20
	   * Lightweight JavaScript-based User-Agent string parser
	   * https://github.com/faisalman/ua-parser-js
	   *
	   * Copyright © 2012-2019 Faisal Salman <f@faisalman.com>
	   * Licensed under MIT License
	   */
	  (function (window, undefined) {
	    // Constants
	    /////////////

	    var LIBVERSION = '0.7.20',
	        EMPTY = '',
	        UNKNOWN = '?',
	        FUNC_TYPE = 'function',
	        UNDEF_TYPE = 'undefined',
	        OBJ_TYPE = 'object',
	        STR_TYPE = 'string',
	        MAJOR = 'major',
	        // deprecated
	    MODEL = 'model',
	        NAME = 'name',
	        TYPE = 'type',
	        VENDOR = 'vendor',
	        VERSION = 'version',
	        ARCHITECTURE = 'architecture',
	        CONSOLE = 'console',
	        MOBILE = 'mobile',
	        TABLET = 'tablet',
	        SMARTTV = 'smarttv',
	        WEARABLE = 'wearable',
	        EMBEDDED = 'embedded'; ///////////
	    // Helper
	    //////////

	    var util = {
	      extend: function extend(regexes, extensions) {
	        var mergedRegexes = {};

	        for (var i in regexes) {
	          if (extensions[i] && extensions[i].length % 2 === 0) {
	            mergedRegexes[i] = extensions[i].concat(regexes[i]);
	          } else {
	            mergedRegexes[i] = regexes[i];
	          }
	        }

	        return mergedRegexes;
	      },
	      has: function has(str1, str2) {
	        if (typeof str1 === "string") {
	          return str2.toLowerCase().indexOf(str1.toLowerCase()) !== -1;
	        } else {
	          return false;
	        }
	      },
	      lowerize: function lowerize(str) {
	        return str.toLowerCase();
	      },
	      major: function major(version) {
	        return _typeof_1(version) === STR_TYPE ? version.replace(/[^\d\.]/g, '').split(".")[0] : undefined;
	      },
	      trim: function trim(str) {
	        return str.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, '');
	      }
	    }; ///////////////
	    // Map helper
	    //////////////

	    var mapper = {
	      rgx: function rgx(ua, arrays) {
	        var i = 0,
	            j,
	            k,
	            p,
	            q,
	            matches,
	            match; // loop through all regexes maps

	        while (i < arrays.length && !matches) {
	          var regex = arrays[i],
	              // even sequence (0,2,4,..)
	          props = arrays[i + 1]; // odd sequence (1,3,5,..)

	          j = k = 0; // try matching uastring with regexes

	          while (j < regex.length && !matches) {
	            matches = regex[j++].exec(ua);

	            if (!!matches) {
	              for (p = 0; p < props.length; p++) {
	                match = matches[++k];
	                q = props[p]; // check if given property is actually array

	                if (_typeof_1(q) === OBJ_TYPE && q.length > 0) {
	                  if (q.length == 2) {
	                    if (_typeof_1(q[1]) == FUNC_TYPE) {
	                      // assign modified match
	                      this[q[0]] = q[1].call(this, match);
	                    } else {
	                      // assign given value, ignore regex match
	                      this[q[0]] = q[1];
	                    }
	                  } else if (q.length == 3) {
	                    // check whether function or regex
	                    if (_typeof_1(q[1]) === FUNC_TYPE && !(q[1].exec && q[1].test)) {
	                      // call function (usually string mapper)
	                      this[q[0]] = match ? q[1].call(this, match, q[2]) : undefined;
	                    } else {
	                      // sanitize match using given regex
	                      this[q[0]] = match ? match.replace(q[1], q[2]) : undefined;
	                    }
	                  } else if (q.length == 4) {
	                    this[q[0]] = match ? q[3].call(this, match.replace(q[1], q[2])) : undefined;
	                  }
	                } else {
	                  this[q] = match ? match : undefined;
	                }
	              }
	            }
	          }

	          i += 2;
	        }
	      },
	      str: function str(_str, map) {
	        for (var i in map) {
	          // check if array
	          if (_typeof_1(map[i]) === OBJ_TYPE && map[i].length > 0) {
	            for (var j = 0; j < map[i].length; j++) {
	              if (util.has(map[i][j], _str)) {
	                return i === UNKNOWN ? undefined : i;
	              }
	            }
	          } else if (util.has(map[i], _str)) {
	            return i === UNKNOWN ? undefined : i;
	          }
	        }

	        return _str;
	      }
	    }; ///////////////
	    // String map
	    //////////////

	    var maps = {
	      browser: {
	        oldsafari: {
	          version: {
	            '1.0': '/8',
	            '1.2': '/1',
	            '1.3': '/3',
	            '2.0': '/412',
	            '2.0.2': '/416',
	            '2.0.3': '/417',
	            '2.0.4': '/419',
	            '?': '/'
	          }
	        }
	      },
	      device: {
	        amazon: {
	          model: {
	            'Fire Phone': ['SD', 'KF']
	          }
	        },
	        sprint: {
	          model: {
	            'Evo Shift 4G': '7373KT'
	          },
	          vendor: {
	            'HTC': 'APA',
	            'Sprint': 'Sprint'
	          }
	        }
	      },
	      os: {
	        windows: {
	          version: {
	            'ME': '4.90',
	            'NT 3.11': 'NT3.51',
	            'NT 4.0': 'NT4.0',
	            '2000': 'NT 5.0',
	            'XP': ['NT 5.1', 'NT 5.2'],
	            'Vista': 'NT 6.0',
	            '7': 'NT 6.1',
	            '8': 'NT 6.2',
	            '8.1': 'NT 6.3',
	            '10': ['NT 6.4', 'NT 10.0'],
	            'RT': 'ARM'
	          }
	        }
	      }
	    }; //////////////
	    // Regex map
	    /////////////

	    var regexes = {
	      browser: [[// Presto based
	      /(opera\smini)\/([\w\.-]+)/i, // Opera Mini
	      /(opera\s[mobiletab]+).+version\/([\w\.-]+)/i, // Opera Mobi/Tablet
	      /(opera).+version\/([\w\.]+)/i, // Opera > 9.80
	      /(opera)[\/\s]+([\w\.]+)/i // Opera < 9.80
	      ], [NAME, VERSION], [/(opios)[\/\s]+([\w\.]+)/i // Opera mini on iphone >= 8.0
	      ], [[NAME, 'Opera Mini'], VERSION], [/\s(opr)\/([\w\.]+)/i // Opera Webkit
	      ], [[NAME, 'Opera'], VERSION], [// Mixed
	      /(kindle)\/([\w\.]+)/i, // Kindle
	      /(lunascape|maxthon|netfront|jasmine|blazer)[\/\s]?([\w\.]*)/i, // Lunascape/Maxthon/Netfront/Jasmine/Blazer
	      // Trident based
	      /(avant\s|iemobile|slim|baidu)(?:browser)?[\/\s]?([\w\.]*)/i, // Avant/IEMobile/SlimBrowser/Baidu
	      /(?:ms|\()(ie)\s([\w\.]+)/i, // Internet Explorer
	      // Webkit/KHTML based
	      /(rekonq)\/([\w\.]*)/i, // Rekonq
	      /(chromium|flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark|qupzilla|falkon)\/([\w\.-]+)/i // Chromium/Flock/RockMelt/Midori/Epiphany/Silk/Skyfire/Bolt/Iron/Iridium/PhantomJS/Bowser/QupZilla/Falkon
	      ], [NAME, VERSION], [/(konqueror)\/([\w\.]+)/i // Konqueror
	      ], [[NAME, 'Konqueror'], VERSION], [/(trident).+rv[:\s]([\w\.]+).+like\sgecko/i // IE11
	      ], [[NAME, 'IE'], VERSION], [/(edge|edgios|edga|edg)\/((\d+)?[\w\.]+)/i // Microsoft Edge
	      ], [[NAME, 'Edge'], VERSION], [/(yabrowser)\/([\w\.]+)/i // Yandex
	      ], [[NAME, 'Yandex'], VERSION], [/(puffin)\/([\w\.]+)/i // Puffin
	      ], [[NAME, 'Puffin'], VERSION], [/(focus)\/([\w\.]+)/i // Firefox Focus
	      ], [[NAME, 'Firefox Focus'], VERSION], [/(opt)\/([\w\.]+)/i // Opera Touch
	      ], [[NAME, 'Opera Touch'], VERSION], [/((?:[\s\/])uc?\s?browser|(?:juc.+)ucweb)[\/\s]?([\w\.]+)/i // UCBrowser
	      ], [[NAME, 'UCBrowser'], VERSION], [/(comodo_dragon)\/([\w\.]+)/i // Comodo Dragon
	      ], [[NAME, /_/g, ' '], VERSION], [/(windowswechat qbcore)\/([\w\.]+)/i // WeChat Desktop for Windows Built-in Browser
	      ], [[NAME, 'WeChat(Win) Desktop'], VERSION], [/(micromessenger)\/([\w\.]+)/i // WeChat
	      ], [[NAME, 'WeChat'], VERSION], [/(brave)\/([\w\.]+)/i // Brave browser
	      ], [[NAME, 'Brave'], VERSION], [/(qqbrowserlite)\/([\w\.]+)/i // QQBrowserLite
	      ], [NAME, VERSION], [/(QQ)\/([\d\.]+)/i // QQ, aka ShouQ
	      ], [NAME, VERSION], [/m?(qqbrowser)[\/\s]?([\w\.]+)/i // QQBrowser
	      ], [NAME, VERSION], [/(BIDUBrowser)[\/\s]?([\w\.]+)/i // Baidu Browser
	      ], [NAME, VERSION], [/(2345Explorer)[\/\s]?([\w\.]+)/i // 2345 Browser
	      ], [NAME, VERSION], [/(MetaSr)[\/\s]?([\w\.]+)/i // SouGouBrowser
	      ], [NAME], [/(LBBROWSER)/i // LieBao Browser
	      ], [NAME], [/xiaomi\/miuibrowser\/([\w\.]+)/i // MIUI Browser
	      ], [VERSION, [NAME, 'MIUI Browser']], [/;fbav\/([\w\.]+);/i // Facebook App for iOS & Android
	      ], [VERSION, [NAME, 'Facebook']], [/safari\s(line)\/([\w\.]+)/i, // Line App for iOS
	      /android.+(line)\/([\w\.]+)\/iab/i // Line App for Android
	      ], [NAME, VERSION], [/headlesschrome(?:\/([\w\.]+)|\s)/i // Chrome Headless
	      ], [VERSION, [NAME, 'Chrome Headless']], [/\swv\).+(chrome)\/([\w\.]+)/i // Chrome WebView
	      ], [[NAME, /(.+)/, '$1 WebView'], VERSION], [/((?:oculus|samsung)browser)\/([\w\.]+)/i], [[NAME, /(.+(?:g|us))(.+)/, '$1 $2'], VERSION], [// Oculus / Samsung Browser
	      /android.+version\/([\w\.]+)\s+(?:mobile\s?safari|safari)*/i // Android Browser
	      ], [VERSION, [NAME, 'Android Browser']], [/(sailfishbrowser)\/([\w\.]+)/i // Sailfish Browser
	      ], [[NAME, 'Sailfish Browser'], VERSION], [/(chrome|omniweb|arora|[tizenoka]{5}\s?browser)\/v?([\w\.]+)/i // Chrome/OmniWeb/Arora/Tizen/Nokia
	      ], [NAME, VERSION], [/(dolfin)\/([\w\.]+)/i // Dolphin
	      ], [[NAME, 'Dolphin'], VERSION], [/((?:android.+)crmo|crios)\/([\w\.]+)/i // Chrome for Android/iOS
	      ], [[NAME, 'Chrome'], VERSION], [/(coast)\/([\w\.]+)/i // Opera Coast
	      ], [[NAME, 'Opera Coast'], VERSION], [/fxios\/([\w\.-]+)/i // Firefox for iOS
	      ], [VERSION, [NAME, 'Firefox']], [/version\/([\w\.]+).+?mobile\/\w+\s(safari)/i // Mobile Safari
	      ], [VERSION, [NAME, 'Mobile Safari']], [/version\/([\w\.]+).+?(mobile\s?safari|safari)/i // Safari & Safari Mobile
	      ], [VERSION, NAME], [/webkit.+?(gsa)\/([\w\.]+).+?(mobile\s?safari|safari)(\/[\w\.]+)/i // Google Search Appliance on iOS
	      ], [[NAME, 'GSA'], VERSION], [/webkit.+?(mobile\s?safari|safari)(\/[\w\.]+)/i // Safari < 3.0
	      ], [NAME, [VERSION, mapper.str, maps.browser.oldsafari.version]], [/(webkit|khtml)\/([\w\.]+)/i], [NAME, VERSION], [// Gecko based
	      /(navigator|netscape)\/([\w\.-]+)/i // Netscape
	      ], [[NAME, 'Netscape'], VERSION], [/(swiftfox)/i, // Swiftfox
	      /(icedragon|iceweasel|camino|chimera|fennec|maemo\sbrowser|minimo|conkeror)[\/\s]?([\w\.\+]+)/i, // IceDragon/Iceweasel/Camino/Chimera/Fennec/Maemo/Minimo/Conkeror
	      /(firefox|seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\/([\w\.-]+)$/i, // Firefox/SeaMonkey/K-Meleon/IceCat/IceApe/Firebird/Phoenix
	      /(mozilla)\/([\w\.]+).+rv\:.+gecko\/\d+/i, // Mozilla
	      // Other
	      /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir)[\/\s]?([\w\.]+)/i, // Polaris/Lynx/Dillo/iCab/Doris/Amaya/w3m/NetSurf/Sleipnir
	      /(links)\s\(([\w\.]+)/i, // Links
	      /(gobrowser)\/?([\w\.]*)/i, // GoBrowser
	      /(ice\s?browser)\/v?([\w\._]+)/i, // ICE Browser
	      /(mosaic)[\/\s]([\w\.]+)/i // Mosaic
	      ], [NAME, VERSION]],
	      cpu: [[/(?:(amd|x(?:(?:86|64)[_-])?|wow|win)64)[;\)]/i // AMD64
	      ], [[ARCHITECTURE, 'amd64']], [/(ia32(?=;))/i // IA32 (quicktime)
	      ], [[ARCHITECTURE, util.lowerize]], [/((?:i[346]|x)86)[;\)]/i // IA32
	      ], [[ARCHITECTURE, 'ia32']], [// PocketPC mistakenly identified as PowerPC
	      /windows\s(ce|mobile);\sppc;/i], [[ARCHITECTURE, 'arm']], [/((?:ppc|powerpc)(?:64)?)(?:\smac|;|\))/i // PowerPC
	      ], [[ARCHITECTURE, /ower/, '', util.lowerize]], [/(sun4\w)[;\)]/i // SPARC
	      ], [[ARCHITECTURE, 'sparc']], [/((?:avr32|ia64(?=;))|68k(?=\))|arm(?:64|(?=v\d+[;l]))|(?=atmel\s)avr|(?:irix|mips|sparc)(?:64)?(?=;)|pa-risc)/i // IA64, 68K, ARM/64, AVR/32, IRIX/64, MIPS/64, SPARC/64, PA-RISC
	      ], [[ARCHITECTURE, util.lowerize]]],
	      device: [[/\((ipad|playbook);[\w\s\),;-]+(rim|apple)/i // iPad/PlayBook
	      ], [MODEL, VENDOR, [TYPE, TABLET]], [/applecoremedia\/[\w\.]+ \((ipad)/ // iPad
	      ], [MODEL, [VENDOR, 'Apple'], [TYPE, TABLET]], [/(apple\s{0,1}tv)/i // Apple TV
	      ], [[MODEL, 'Apple TV'], [VENDOR, 'Apple']], [/(archos)\s(gamepad2?)/i, // Archos
	      /(hp).+(touchpad)/i, // HP TouchPad
	      /(hp).+(tablet)/i, // HP Tablet
	      /(kindle)\/([\w\.]+)/i, // Kindle
	      /\s(nook)[\w\s]+build\/(\w+)/i, // Nook
	      /(dell)\s(strea[kpr\s\d]*[\dko])/i // Dell Streak
	      ], [VENDOR, MODEL, [TYPE, TABLET]], [/(kf[A-z]+)\sbuild\/.+silk\//i // Kindle Fire HD
	      ], [MODEL, [VENDOR, 'Amazon'], [TYPE, TABLET]], [/(sd|kf)[0349hijorstuw]+\sbuild\/.+silk\//i // Fire Phone
	      ], [[MODEL, mapper.str, maps.device.amazon.model], [VENDOR, 'Amazon'], [TYPE, MOBILE]], [/android.+aft([bms])\sbuild/i // Fire TV
	      ], [MODEL, [VENDOR, 'Amazon'], [TYPE, SMARTTV]], [/\((ip[honed|\s\w*]+);.+(apple)/i // iPod/iPhone
	      ], [MODEL, VENDOR, [TYPE, MOBILE]], [/\((ip[honed|\s\w*]+);/i // iPod/iPhone
	      ], [MODEL, [VENDOR, 'Apple'], [TYPE, MOBILE]], [/(blackberry)[\s-]?(\w+)/i, // BlackBerry
	      /(blackberry|benq|palm(?=\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron)[\s_-]?([\w-]*)/i, // BenQ/Palm/Sony-Ericsson/Acer/Asus/Dell/Meizu/Motorola/Polytron
	      /(hp)\s([\w\s]+\w)/i, // HP iPAQ
	      /(asus)-?(\w+)/i // Asus
	      ], [VENDOR, MODEL, [TYPE, MOBILE]], [/\(bb10;\s(\w+)/i // BlackBerry 10
	      ], [MODEL, [VENDOR, 'BlackBerry'], [TYPE, MOBILE]], [// Asus Tablets
	      /android.+(transfo[prime\s]{4,10}\s\w+|eeepc|slider\s\w+|nexus 7|padfone|p00c)/i], [MODEL, [VENDOR, 'Asus'], [TYPE, TABLET]], [/(sony)\s(tablet\s[ps])\sbuild\//i, // Sony
	      /(sony)?(?:sgp.+)\sbuild\//i], [[VENDOR, 'Sony'], [MODEL, 'Xperia Tablet'], [TYPE, TABLET]], [/android.+\s([c-g]\d{4}|so[-l]\w+)(?=\sbuild\/|\).+chrome\/(?![1-6]{0,1}\d\.))/i], [MODEL, [VENDOR, 'Sony'], [TYPE, MOBILE]], [/\s(ouya)\s/i, // Ouya
	      /(nintendo)\s([wids3u]+)/i // Nintendo
	      ], [VENDOR, MODEL, [TYPE, CONSOLE]], [/android.+;\s(shield)\sbuild/i // Nvidia
	      ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, CONSOLE]], [/(playstation\s[34portablevi]+)/i // Playstation
	      ], [MODEL, [VENDOR, 'Sony'], [TYPE, CONSOLE]], [/(sprint\s(\w+))/i // Sprint Phones
	      ], [[VENDOR, mapper.str, maps.device.sprint.vendor], [MODEL, mapper.str, maps.device.sprint.model], [TYPE, MOBILE]], [/(htc)[;_\s-]+([\w\s]+(?=\)|\sbuild)|\w+)/i, // HTC
	      /(zte)-(\w*)/i, // ZTE
	      /(alcatel|geeksphone|nexian|panasonic|(?=;\s)sony)[_\s-]?([\w-]*)/i // Alcatel/GeeksPhone/Nexian/Panasonic/Sony
	      ], [VENDOR, [MODEL, /_/g, ' '], [TYPE, MOBILE]], [/(nexus\s9)/i // HTC Nexus 9
	      ], [MODEL, [VENDOR, 'HTC'], [TYPE, TABLET]], [/d\/huawei([\w\s-]+)[;\)]/i, /(nexus\s6p)/i // Huawei
	      ], [MODEL, [VENDOR, 'Huawei'], [TYPE, MOBILE]], [/(microsoft);\s(lumia[\s\w]+)/i // Microsoft Lumia
	      ], [VENDOR, MODEL, [TYPE, MOBILE]], [/[\s\(;](xbox(?:\sone)?)[\s\);]/i // Microsoft Xbox
	      ], [MODEL, [VENDOR, 'Microsoft'], [TYPE, CONSOLE]], [/(kin\.[onetw]{3})/i // Microsoft Kin
	      ], [[MODEL, /\./g, ' '], [VENDOR, 'Microsoft'], [TYPE, MOBILE]], [// Motorola
	      /\s(milestone|droid(?:[2-4x]|\s(?:bionic|x2|pro|razr))?:?(\s4g)?)[\w\s]+build\//i, /mot[\s-]?(\w*)/i, /(XT\d{3,4}) build\//i, /(nexus\s6)/i], [MODEL, [VENDOR, 'Motorola'], [TYPE, MOBILE]], [/android.+\s(mz60\d|xoom[\s2]{0,2})\sbuild\//i], [MODEL, [VENDOR, 'Motorola'], [TYPE, TABLET]], [/hbbtv\/\d+\.\d+\.\d+\s+\([\w\s]*;\s*(\w[^;]*);([^;]*)/i // HbbTV devices
	      ], [[VENDOR, util.trim], [MODEL, util.trim], [TYPE, SMARTTV]], [/hbbtv.+maple;(\d+)/i], [[MODEL, /^/, 'SmartTV'], [VENDOR, 'Samsung'], [TYPE, SMARTTV]], [/\(dtv[\);].+(aquos)/i // Sharp
	      ], [MODEL, [VENDOR, 'Sharp'], [TYPE, SMARTTV]], [/android.+((sch-i[89]0\d|shw-m380s|gt-p\d{4}|gt-n\d+|sgh-t8[56]9|nexus 10))/i, /((SM-T\w+))/i], [[VENDOR, 'Samsung'], MODEL, [TYPE, TABLET]], [// Samsung
	      /smart-tv.+(samsung)/i], [VENDOR, [TYPE, SMARTTV], MODEL], [/((s[cgp]h-\w+|gt-\w+|galaxy\snexus|sm-\w[\w\d]+))/i, /(sam[sung]*)[\s-]*(\w+-?[\w-]*)/i, /sec-((sgh\w+))/i], [[VENDOR, 'Samsung'], MODEL, [TYPE, MOBILE]], [/sie-(\w*)/i // Siemens
	      ], [MODEL, [VENDOR, 'Siemens'], [TYPE, MOBILE]], [/(maemo|nokia).*(n900|lumia\s\d+)/i, // Nokia
	      /(nokia)[\s_-]?([\w-]*)/i], [[VENDOR, 'Nokia'], MODEL, [TYPE, MOBILE]], [/android[x\d\.\s;]+\s([ab][1-7]\-?[0178a]\d\d?)/i // Acer
	      ], [MODEL, [VENDOR, 'Acer'], [TYPE, TABLET]], [/android.+([vl]k\-?\d{3})\s+build/i // LG Tablet
	      ], [MODEL, [VENDOR, 'LG'], [TYPE, TABLET]], [/android\s3\.[\s\w;-]{10}(lg?)-([06cv9]{3,4})/i // LG Tablet
	      ], [[VENDOR, 'LG'], MODEL, [TYPE, TABLET]], [/(lg) netcast\.tv/i // LG SmartTV
	      ], [VENDOR, MODEL, [TYPE, SMARTTV]], [/(nexus\s[45])/i, // LG
	      /lg[e;\s\/-]+(\w*)/i, /android.+lg(\-?[\d\w]+)\s+build/i], [MODEL, [VENDOR, 'LG'], [TYPE, MOBILE]], [/(lenovo)\s?(s(?:5000|6000)(?:[\w-]+)|tab(?:[\s\w]+))/i // Lenovo tablets
	      ], [VENDOR, MODEL, [TYPE, TABLET]], [/android.+(ideatab[a-z0-9\-\s]+)/i // Lenovo
	      ], [MODEL, [VENDOR, 'Lenovo'], [TYPE, TABLET]], [/(lenovo)[_\s-]?([\w-]+)/i], [VENDOR, MODEL, [TYPE, MOBILE]], [/linux;.+((jolla));/i // Jolla
	      ], [VENDOR, MODEL, [TYPE, MOBILE]], [/((pebble))app\/[\d\.]+\s/i // Pebble
	      ], [VENDOR, MODEL, [TYPE, WEARABLE]], [/android.+;\s(oppo)\s?([\w\s]+)\sbuild/i // OPPO
	      ], [VENDOR, MODEL, [TYPE, MOBILE]], [/crkey/i // Google Chromecast
	      ], [[MODEL, 'Chromecast'], [VENDOR, 'Google']], [/android.+;\s(glass)\s\d/i // Google Glass
	      ], [MODEL, [VENDOR, 'Google'], [TYPE, WEARABLE]], [/android.+;\s(pixel c)[\s)]/i // Google Pixel C
	      ], [MODEL, [VENDOR, 'Google'], [TYPE, TABLET]], [/android.+;\s(pixel( [23])?( xl)?)[\s)]/i // Google Pixel
	      ], [MODEL, [VENDOR, 'Google'], [TYPE, MOBILE]], [/android.+;\s(\w+)\s+build\/hm\1/i, // Xiaomi Hongmi 'numeric' models
	      /android.+(hm[\s\-_]*note?[\s_]*(?:\d\w)?)\s+build/i, // Xiaomi Hongmi
	      /android.+(mi[\s\-_]*(?:a\d|one|one[\s_]plus|note lte)?[\s_]*(?:\d?\w?)[\s_]*(?:plus)?)\s+build/i, // Xiaomi Mi
	      /android.+(redmi[\s\-_]*(?:note)?(?:[\s_]*[\w\s]+))\s+build/i // Redmi Phones
	      ], [[MODEL, /_/g, ' '], [VENDOR, 'Xiaomi'], [TYPE, MOBILE]], [/android.+(mi[\s\-_]*(?:pad)(?:[\s_]*[\w\s]+))\s+build/i // Mi Pad tablets
	      ], [[MODEL, /_/g, ' '], [VENDOR, 'Xiaomi'], [TYPE, TABLET]], [/android.+;\s(m[1-5]\snote)\sbuild/i // Meizu
	      ], [MODEL, [VENDOR, 'Meizu'], [TYPE, MOBILE]], [/(mz)-([\w-]{2,})/i], [[VENDOR, 'Meizu'], MODEL, [TYPE, MOBILE]], [/android.+a000(1)\s+build/i, // OnePlus
	      /android.+oneplus\s(a\d{4})\s+build/i], [MODEL, [VENDOR, 'OnePlus'], [TYPE, MOBILE]], [/android.+[;\/]\s*(RCT[\d\w]+)\s+build/i // RCA Tablets
	      ], [MODEL, [VENDOR, 'RCA'], [TYPE, TABLET]], [/android.+[;\/\s]+(Venue[\d\s]{2,7})\s+build/i // Dell Venue Tablets
	      ], [MODEL, [VENDOR, 'Dell'], [TYPE, TABLET]], [/android.+[;\/]\s*(Q[T|M][\d\w]+)\s+build/i // Verizon Tablet
	      ], [MODEL, [VENDOR, 'Verizon'], [TYPE, TABLET]], [/android.+[;\/]\s+(Barnes[&\s]+Noble\s+|BN[RT])(V?.*)\s+build/i // Barnes & Noble Tablet
	      ], [[VENDOR, 'Barnes & Noble'], MODEL, [TYPE, TABLET]], [/android.+[;\/]\s+(TM\d{3}.*\b)\s+build/i // Barnes & Noble Tablet
	      ], [MODEL, [VENDOR, 'NuVision'], [TYPE, TABLET]], [/android.+;\s(k88)\sbuild/i // ZTE K Series Tablet
	      ], [MODEL, [VENDOR, 'ZTE'], [TYPE, TABLET]], [/android.+[;\/]\s*(gen\d{3})\s+build.*49h/i // Swiss GEN Mobile
	      ], [MODEL, [VENDOR, 'Swiss'], [TYPE, MOBILE]], [/android.+[;\/]\s*(zur\d{3})\s+build/i // Swiss ZUR Tablet
	      ], [MODEL, [VENDOR, 'Swiss'], [TYPE, TABLET]], [/android.+[;\/]\s*((Zeki)?TB.*\b)\s+build/i // Zeki Tablets
	      ], [MODEL, [VENDOR, 'Zeki'], [TYPE, TABLET]], [/(android).+[;\/]\s+([YR]\d{2})\s+build/i, /android.+[;\/]\s+(Dragon[\-\s]+Touch\s+|DT)(\w{5})\sbuild/i // Dragon Touch Tablet
	      ], [[VENDOR, 'Dragon Touch'], MODEL, [TYPE, TABLET]], [/android.+[;\/]\s*(NS-?\w{0,9})\sbuild/i // Insignia Tablets
	      ], [MODEL, [VENDOR, 'Insignia'], [TYPE, TABLET]], [/android.+[;\/]\s*((NX|Next)-?\w{0,9})\s+build/i // NextBook Tablets
	      ], [MODEL, [VENDOR, 'NextBook'], [TYPE, TABLET]], [/android.+[;\/]\s*(Xtreme\_)?(V(1[045]|2[015]|30|40|60|7[05]|90))\s+build/i], [[VENDOR, 'Voice'], MODEL, [TYPE, MOBILE]], [// Voice Xtreme Phones
	      /android.+[;\/]\s*(LVTEL\-)?(V1[12])\s+build/i // LvTel Phones
	      ], [[VENDOR, 'LvTel'], MODEL, [TYPE, MOBILE]], [/android.+;\s(PH-1)\s/i], [MODEL, [VENDOR, 'Essential'], [TYPE, MOBILE]], [// Essential PH-1
	      /android.+[;\/]\s*(V(100MD|700NA|7011|917G).*\b)\s+build/i // Envizen Tablets
	      ], [MODEL, [VENDOR, 'Envizen'], [TYPE, TABLET]], [/android.+[;\/]\s*(Le[\s\-]+Pan)[\s\-]+(\w{1,9})\s+build/i // Le Pan Tablets
	      ], [VENDOR, MODEL, [TYPE, TABLET]], [/android.+[;\/]\s*(Trio[\s\-]*.*)\s+build/i // MachSpeed Tablets
	      ], [MODEL, [VENDOR, 'MachSpeed'], [TYPE, TABLET]], [/android.+[;\/]\s*(Trinity)[\-\s]*(T\d{3})\s+build/i // Trinity Tablets
	      ], [VENDOR, MODEL, [TYPE, TABLET]], [/android.+[;\/]\s*TU_(1491)\s+build/i // Rotor Tablets
	      ], [MODEL, [VENDOR, 'Rotor'], [TYPE, TABLET]], [/android.+(KS(.+))\s+build/i // Amazon Kindle Tablets
	      ], [MODEL, [VENDOR, 'Amazon'], [TYPE, TABLET]], [/android.+(Gigaset)[\s\-]+(Q\w{1,9})\s+build/i // Gigaset Tablets
	      ], [VENDOR, MODEL, [TYPE, TABLET]], [/\s(tablet|tab)[;\/]/i, // Unidentifiable Tablet
	      /\s(mobile)(?:[;\/]|\ssafari)/i // Unidentifiable Mobile
	      ], [[TYPE, util.lowerize], VENDOR, MODEL], [/[\s\/\(](smart-?tv)[;\)]/i // SmartTV
	      ], [[TYPE, SMARTTV]], [/(android[\w\.\s\-]{0,9});.+build/i // Generic Android Device
	      ], [MODEL, [VENDOR, 'Generic']]],
	      engine: [[/windows.+\sedge\/([\w\.]+)/i // EdgeHTML
	      ], [VERSION, [NAME, 'EdgeHTML']], [/webkit\/537\.36.+chrome\/(?!27)/i // Blink
	      ], [[NAME, 'Blink']], [/(presto)\/([\w\.]+)/i, // Presto
	      /(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\/([\w\.]+)/i, // WebKit/Trident/NetFront/NetSurf/Amaya/Lynx/w3m/Goanna
	      /(khtml|tasman|links)[\/\s]\(?([\w\.]+)/i, // KHTML/Tasman/Links
	      /(icab)[\/\s]([23]\.[\d\.]+)/i // iCab
	      ], [NAME, VERSION], [/rv\:([\w\.]{1,9}).+(gecko)/i // Gecko
	      ], [VERSION, NAME]],
	      os: [[// Windows based
	      /microsoft\s(windows)\s(vista|xp)/i // Windows (iTunes)
	      ], [NAME, VERSION], [/(windows)\snt\s6\.2;\s(arm)/i, // Windows RT
	      /(windows\sphone(?:\sos)*)[\s\/]?([\d\.\s\w]*)/i, // Windows Phone
	      /(windows\smobile|windows)[\s\/]?([ntce\d\.\s]+\w)/i], [NAME, [VERSION, mapper.str, maps.os.windows.version]], [/(win(?=3|9|n)|win\s9x\s)([nt\d\.]+)/i], [[NAME, 'Windows'], [VERSION, mapper.str, maps.os.windows.version]], [// Mobile/Embedded OS
	      /\((bb)(10);/i // BlackBerry 10
	      ], [[NAME, 'BlackBerry'], VERSION], [/(blackberry)\w*\/?([\w\.]*)/i, // Blackberry
	      /(tizen)[\/\s]([\w\.]+)/i, // Tizen
	      /(android|webos|palm\sos|qnx|bada|rim\stablet\sos|meego|sailfish|contiki)[\/\s-]?([\w\.]*)/i // Android/WebOS/Palm/QNX/Bada/RIM/MeeGo/Contiki/Sailfish OS
	      ], [NAME, VERSION], [/(symbian\s?os|symbos|s60(?=;))[\/\s-]?([\w\.]*)/i // Symbian
	      ], [[NAME, 'Symbian'], VERSION], [/\((series40);/i // Series 40
	      ], [NAME], [/mozilla.+\(mobile;.+gecko.+firefox/i // Firefox OS
	      ], [[NAME, 'Firefox OS'], VERSION], [// Console
	      /(nintendo|playstation)\s([wids34portablevu]+)/i, // Nintendo/Playstation
	      // GNU/Linux based
	      /(mint)[\/\s\(]?(\w*)/i, // Mint
	      /(mageia|vectorlinux)[;\s]/i, // Mageia/VectorLinux
	      /(joli|[kxln]?ubuntu|debian|suse|opensuse|gentoo|(?=\s)arch|slackware|fedora|mandriva|centos|pclinuxos|redhat|zenwalk|linpus)[\/\s-]?(?!chrom)([\w\.-]*)/i, // Joli/Ubuntu/Debian/SUSE/Gentoo/Arch/Slackware
	      // Fedora/Mandriva/CentOS/PCLinuxOS/RedHat/Zenwalk/Linpus
	      /(hurd|linux)\s?([\w\.]*)/i, // Hurd/Linux
	      /(gnu)\s?([\w\.]*)/i // GNU
	      ], [NAME, VERSION], [/(cros)\s[\w]+\s([\w\.]+\w)/i // Chromium OS
	      ], [[NAME, 'Chromium OS'], VERSION], [// Solaris
	      /(sunos)\s?([\w\.\d]*)/i // Solaris
	      ], [[NAME, 'Solaris'], VERSION], [// BSD based
	      /\s([frentopc-]{0,4}bsd|dragonfly)\s?([\w\.]*)/i // FreeBSD/NetBSD/OpenBSD/PC-BSD/DragonFly
	      ], [NAME, VERSION], [/(haiku)\s(\w+)/i // Haiku
	      ], [NAME, VERSION], [/cfnetwork\/.+darwin/i, /ip[honead]{2,4}(?:.*os\s([\w]+)\slike\smac|;\sopera)/i // iOS
	      ], [[VERSION, /_/g, '.'], [NAME, 'iOS']], [/(mac\sos\sx)\s?([\w\s\.]*)/i, /(macintosh|mac(?=_powerpc)\s)/i // Mac OS
	      ], [[NAME, 'Mac OS'], [VERSION, /_/g, '.']], [// Other
	      /((?:open)?solaris)[\/\s-]?([\w\.]*)/i, // Solaris
	      /(aix)\s((\d)(?=\.|\)|\s)[\w\.])*/i, // AIX
	      /(plan\s9|minix|beos|os\/2|amigaos|morphos|risc\sos|openvms|fuchsia)/i, // Plan9/Minix/BeOS/OS2/AmigaOS/MorphOS/RISCOS/OpenVMS/Fuchsia
	      /(unix)\s?([\w\.]*)/i // UNIX
	      ], [NAME, VERSION]]
	    }; /////////////////
	    // Constructor
	    ////////////////

	    var UAParser = function UAParser(uastring, extensions) {
	      if (_typeof_1(uastring) === 'object') {
	        extensions = uastring;
	        uastring = undefined;
	      }

	      if (!(this instanceof UAParser)) {
	        return new UAParser(uastring, extensions).getResult();
	      }

	      var ua = uastring || (window && window.navigator && window.navigator.userAgent ? window.navigator.userAgent : EMPTY);
	      var rgxmap = extensions ? util.extend(regexes, extensions) : regexes;

	      this.getBrowser = function () {
	        var browser = {
	          name: undefined,
	          version: undefined
	        };
	        mapper.rgx.call(browser, ua, rgxmap.browser);
	        browser.major = util.major(browser.version); // deprecated

	        return browser;
	      };

	      this.getCPU = function () {
	        var cpu = {
	          architecture: undefined
	        };
	        mapper.rgx.call(cpu, ua, rgxmap.cpu);
	        return cpu;
	      };

	      this.getDevice = function () {
	        var device = {
	          vendor: undefined,
	          model: undefined,
	          type: undefined
	        };
	        mapper.rgx.call(device, ua, rgxmap.device);
	        return device;
	      };

	      this.getEngine = function () {
	        var engine = {
	          name: undefined,
	          version: undefined
	        };
	        mapper.rgx.call(engine, ua, rgxmap.engine);
	        return engine;
	      };

	      this.getOS = function () {
	        var os = {
	          name: undefined,
	          version: undefined
	        };
	        mapper.rgx.call(os, ua, rgxmap.os);
	        return os;
	      };

	      this.getResult = function () {
	        return {
	          ua: this.getUA(),
	          browser: this.getBrowser(),
	          engine: this.getEngine(),
	          os: this.getOS(),
	          device: this.getDevice(),
	          cpu: this.getCPU()
	        };
	      };

	      this.getUA = function () {
	        return ua;
	      };

	      this.setUA = function (uastring) {
	        ua = uastring;
	        return this;
	      };

	      return this;
	    };

	    UAParser.VERSION = LIBVERSION;
	    UAParser.BROWSER = {
	      NAME: NAME,
	      MAJOR: MAJOR,
	      // deprecated
	      VERSION: VERSION
	    };
	    UAParser.CPU = {
	      ARCHITECTURE: ARCHITECTURE
	    };
	    UAParser.DEVICE = {
	      MODEL: MODEL,
	      VENDOR: VENDOR,
	      TYPE: TYPE,
	      CONSOLE: CONSOLE,
	      MOBILE: MOBILE,
	      SMARTTV: SMARTTV,
	      TABLET: TABLET,
	      WEARABLE: WEARABLE,
	      EMBEDDED: EMBEDDED
	    };
	    UAParser.ENGINE = {
	      NAME: NAME,
	      VERSION: VERSION
	    };
	    UAParser.OS = {
	      NAME: NAME,
	      VERSION: VERSION
	    }; ///////////
	    // Export
	    //////////
	    // check js environment

	    {
	      // nodejs env
	      if (module.exports) {
	        exports = module.exports = UAParser;
	      }

	      exports.UAParser = UAParser;
	    } // jQuery/Zepto specific (optional)
	    // Note:
	    //   In AMD env the global scope should be kept clean, but jQuery is an exception.
	    //   jQuery always exports to global scope, unless jQuery.noConflict(true) is used,
	    //   and we should catch that.


	    var $ = window && (window.jQuery || window.Zepto);

	    if (_typeof_1($) !== UNDEF_TYPE && !$.ua) {
	      var parser = new UAParser();
	      $.ua = parser.getResult();

	      $.ua.get = function () {
	        return parser.getUA();
	      };

	      $.ua.set = function (uastring) {
	        parser.setUA(uastring);
	        var result = parser.getResult();

	        for (var prop in result) {
	          $.ua[prop] = result[prop];
	        }
	      };
	    }
	  })((typeof window === "undefined" ? "undefined" : _typeof_1(window)) === 'object' ? window : commonjsGlobal);
	});
	var uaParser_1 = uaParser.UAParser;

	/**
	 * Used to evaluate whether or not to render a component
	 * @param {Object} options
	 * @param {Object} options.jsonx - Valid JSONX JSON
	 * @param {Object} options.props - Props to test comparison values against, usually Object.assign(jsonx.props,jsonx.asyncprops,jsonx.thisprops,jsonx.windowprops)
	 * @returns {Boolean} returns true if all comparisons are true or if using or comparisons, at least one condition is true
	 * @example
	 const sampleJSONX = {
	  component: 'div',
	  props: {
	    id: 'generatedJSONX',
	    className: 'jsonx',
	    bigNum: 1430931039,
	    smallNum: 0.425,
	    falsey: false,
	    truthy: true,
	  },
	  children: 'some div',
	};
	const testJSONX = Object.assign({}, sampleJSONX, {
	  comparisonprops: [{
	    left: ['truthy',],
	    operation:'==',
	    right:['falsey',],
	  }],
	});
	displayComponent({ jsonx: testJSONX, props: testJSONX2.props, }) // => false
	 */
	function displayComponent(options = {}) {
	    const { jsonx = {}, props, } = options;
	    const propsToCompare = jsonx.comparisonprops;
	    const comparisons = Array.isArray(propsToCompare) ? propsToCompare.map(comp => {
	        const compares = {};
	        if (Array.isArray(comp.left)) {
	            compares.left = comp.left;
	        }
	        if (Array.isArray(comp.right)) {
	            compares.right = comp.right;
	        }
	        const propcompares = traverse(compares, props || jsonx.props);
	        const opscompares = Object.assign({}, comp, propcompares);
	        // console.debug({ opscompares, compares, renderedCompProps });
	        switch (opscompares.operation) {
	            case 'eq':
	            case '==':
	                // return opscompares.left == opscompares.right;
	                // eslint-disable-next-line
	                return opscompares.left == opscompares.right;
	            case 'dneq':
	            case '!=':
	            case '!':
	                // return opscompares.left != opscompares.right;
	                return opscompares.left !== opscompares.right;
	            case 'dnseq':
	            case '!==':
	                return opscompares.left !== opscompares.right;
	            case 'seq':
	            case '===':
	                return opscompares.left === opscompares.right;
	            case 'lt':
	            case '<':
	                return opscompares.left < opscompares.right;
	            case 'lte':
	            case '<=':
	                return opscompares.left <= opscompares.right;
	            case 'gt':
	            case '>':
	                return opscompares.left > opscompares.right;
	            case 'gte':
	            case '>=':
	                return opscompares.left >= opscompares.right;
	            case 'dne':
	            case 'undefined':
	            case 'null':
	                return opscompares.left === undefined || opscompares.left === null;
	            case '!null':
	            case '!undefined':
	            case 'exists':
	            default: //'exists'
	                return opscompares.left !== undefined && opscompares.left !== null;
	        }
	        // }
	        // if (opscompares.operation === 'eq') {
	        //   // return opscompares.left == opscompares.right;
	        //   // eslint-disable-next-line
	        //   return opscompares.left == opscompares.right;
	        // } else if (opscompares.operation === 'dneq') {
	        //   // return opscompares.left != opscompares.right;
	        //   return opscompares.left !== opscompares.right;
	        // } else if (opscompares.operation === 'dnseq') {
	        //   return opscompares.left !== opscompares.right;
	        // } else if (opscompares.operation === 'seq') {
	        //   return opscompares.left === opscompares.right;
	        // } else if (opscompares.operation === 'lt') {
	        //   return opscompares.left < opscompares.right;
	        // } else if (opscompares.operation === 'lte') {
	        //   return opscompares.left <= opscompares.right;
	        // } else if (opscompares.operation === 'gt') {
	        //   return opscompares.left > opscompares.right;
	        // } else if (opscompares.operation === 'gte') {
	        //   return opscompares.left >= opscompares.right;
	        // } else if (opscompares.operation === 'dne') {
	        //   return opscompares.left === undefined || opscompares.left === null;
	        // } else { //'exists'
	        //   return opscompares.left !== undefined && opscompares.left !== null;
	        // }
	    }) : [];
	    const validProps = comparisons.filter(comp => comp === true);
	    if (!jsonx.comparisonprops) {
	        return true;
	    }
	    else if (jsonx.comparisonorprops && validProps.length < 1) {
	        return false;
	    }
	    else if (validProps.length !== comparisons.length && !jsonx.comparisonorprops) {
	        return false;
	    }
	    else {
	        return true;
	    }
	}
	/**
	 * Use to test if can bind components this context for react-redux-router
	 * @returns {Boolean} true if browser is not IE or old android / chrome
	 */
	function getAdvancedBinding() {
	    if (typeof window === 'undefined') {
	        var window = (this && this.window)
	            ? this.window
	            : {};
	        if (!window.navigator)
	            return false;
	    }
	    try {
	        if (window && window.navigator && window.navigator.userAgent && typeof window.navigator.userAgent === 'string') {
	            // console.log('window.navigator.userAgent',window.navigator.userAgent)
	            if (window.navigator.userAgent.indexOf('Trident') !== -1) {
	                return false;
	            }
	            const uastring = window.navigator.userAgent;
	            //@ts-ignore
	            const parser = new uaParser();
	            parser.setUA(uastring);
	            const parseUserAgent = parser.getResult();
	            // console.log({ parseUserAgent, });
	            if ((parseUserAgent.browser.name === 'Chrome' || parseUserAgent.browser.name === 'Chrome WebView') && parseUserAgent.os.name === 'Android' && parseInt(parseUserAgent.browser.version, 10) < 50) {
	                return false;
	            }
	            if (parseUserAgent.browser.name === 'Android Browser') {
	                return false;
	            }
	        }
	    }
	    catch (e) {
	        console.error(e);
	        // console.warn('could not detect browser support', e);
	        return false;
	    }
	    return true;
	}
	/**
	 * take an object of array paths to traverse and resolve
	 * @example
	 * const testObj = {
	      user: {
	        name: 'jsonx',
	        description: 'react withouth javascript',
	      },
	      stats: {
	        logins: 102,
	        comments: 3,
	      },
	      authentication: 'OAuth2',
	    };
	const testVals = { auth: ['authentication', ], username: ['user', 'name', ], };

	 traverse(testVals, testObj) // =>{ auth:'OAuth2', username:'jsonx',  }
	 * @param {Object} paths - an object to resolve array property paths
	 * @param {Object} data - object to traverse
	 * @returns {Object} resolved object with traversed properties
	 * @throws {TypeError}
	 */
	function traverse(paths = {}, data = {}) {
	    let keys = Object.keys(paths);
	    if (!keys.length)
	        return paths;
	    return keys.reduce((result, key) => {
	        //@ts-ignore
	        if (typeof paths[key] === 'string')
	            result[key] = data[paths[key]];
	        else if (Array.isArray(paths[key])) {
	            let _path = Object.assign([], paths[key]);
	            let value = data;
	            while (_path.length && value && typeof value === 'object') {
	                let prop = _path.shift();
	                if (prop && value[prop])
	                    value = value[prop];
	            }
	            result[key] = (_path.length) ? undefined : value;
	        }
	        else
	            throw new TypeError('dynamic property paths must be a string or an array of strings or numeric indexes');
	        return result;
	    }, {});
	}
	/**
	 * Validates JSONX JSON Syntax
	 * @example
	 * validateJSONX({component:'p',children:'hello world'})=>true
	 * validateJSONX({children:'hello world'})=>throw SyntaxError('[0001] Missing React Component')
	 * @param {Object} jsonx - JSONX JSON to validate
	 * @param {Boolean} [returnAllErrors=false] - flag to either throw error or to return all errors in an array of errors
	 * @returns {Boolean|Error[]} either returns true if JSONX is valid, or throws validation error or returns list of errors in array
	 * @throws {SyntaxError|TypeError|ReferenceError}
	 */
	function validateJSONX(jsonx = {}, returnAllErrors = false) {
	    const dynamicPropsNames = ['asyncprops', 'resourceprops', 'windowprops', 'thisprops', 'thisstate',];
	    const evalPropNames = ['__dangerouslyEvalProps', '__dangerouslyBindEvalProps',];
	    const validKeys = ['component', 'props', 'children', '__spreadComponent', '__inline', '__functionargs', '__dangerouslyInsertComponents', '__dangerouslyInsertComponentProps', '__dangerouslyInsertJSONXComponents', '__functionProps', '__functionparams', '__windowComponents', '__windowComponentProps', 'comparisonprops', 'comparisonorprops', 'passprops', 'debug'].concat(dynamicPropsNames, evalPropNames);
	    let errors = [];
	    if (!jsonx.component) {
	        errors.push(SyntaxError('[0001] Missing React Component'));
	    }
	    if (jsonx.props) {
	        if (typeof jsonx.props !== 'object' || Array.isArray(jsonx.props)) {
	            errors.push(TypeError('[0002] ' + jsonx.component + ': props must be an Object / valid React props'));
	        }
	        if (jsonx.props.children && (typeof jsonx.props.children !== 'string' || !Array.isArray(jsonx.props.children))) {
	            errors.push(TypeError('[0003] ' + jsonx.component + ': props.children must be an array of JSONX JSON objects or a string'));
	        }
	        if (jsonx.props._children && (typeof jsonx.props._children !== 'string' || !Array.isArray(jsonx.props._children))) {
	            errors.push(TypeError('[0004] ' + jsonx.component + ': props._children must be an array of JSONX JSON objects or a string'));
	        }
	    }
	    if (jsonx.children) {
	        if (typeof jsonx.children !== 'string' && !Array.isArray(jsonx.children)) {
	            errors.push(TypeError('[0005] ' + jsonx.component + ': children must be an array of JSONX JSON objects or a string'));
	        }
	        if (Array.isArray(jsonx.children)) {
	            const childrenErrors = jsonx.children
	                .filter(c => typeof c === 'object')
	                .map(c => validateJSONX(c, returnAllErrors));
	            errors = errors.concat(...childrenErrors);
	        }
	    }
	    dynamicPropsNames.forEach((dynamicprop) => {
	        const jsonxDynamicProps = jsonx[dynamicprop];
	        if (jsonxDynamicProps) {
	            // if (dynamicprop === 'thisprops') {
	            //   console.log({ dynamicprop, jsonxDynamicProps });
	            // }
	            if (typeof jsonxDynamicProps !== 'object') {
	                errors.push(TypeError(`[0006] ${dynamicprop} must be an object`));
	            }
	            Object.keys(jsonxDynamicProps).forEach(resolvedDynamicProp => {
	                if (!Array.isArray(jsonxDynamicProps[resolvedDynamicProp])) {
	                    errors.push(TypeError(`[0007] jsonx.${dynamicprop}.${resolvedDynamicProp} must be an array of strings`));
	                }
	                if (Array.isArray(jsonxDynamicProps[resolvedDynamicProp])) {
	                    //@ts-ignore
	                    const allStringArray = jsonxDynamicProps[resolvedDynamicProp].filter(propArrayItem => typeof propArrayItem === 'string');
	                    if (allStringArray.length !== jsonxDynamicProps[resolvedDynamicProp].length) {
	                        errors.push(TypeError(`[0008] jsonx.${dynamicprop}.${resolvedDynamicProp} must be an array of strings`));
	                    }
	                }
	            });
	        }
	    });
	    const evalProps = jsonx.__dangerouslyEvalProps;
	    const boundEvalProps = jsonx.__dangerouslyBindEvalProps;
	    if (evalProps || boundEvalProps) {
	        if ((evalProps && typeof evalProps !== 'object') || (boundEvalProps && typeof boundEvalProps !== 'object')) {
	            errors.push(TypeError('[0009] __dangerouslyEvalProps must be an object of strings to convert to valid javascript'));
	        }
	        evalPropNames
	            .filter(evalProp => jsonx[evalProp])
	            .forEach(eProps => {
	            const evProp = jsonx[eProps];
	            const scopedEval = eval;
	            Object.keys(evProp).forEach(propToEval => {
	                if (typeof evProp[propToEval] !== 'string') {
	                    errors.push(TypeError(`[0010] jsonx.${eProps}.${evProp} must be a string`));
	                }
	                try {
	                    // console.log({ eProps });
	                    if (eProps === '__dangerouslyBindEvalProps') {
	                        const funcToBind = scopedEval(`(${evProp[propToEval]})`);
	                        funcToBind.call({ bounded: true, });
	                    }
	                    else {
	                        scopedEval(evProp[propToEval]);
	                    }
	                }
	                catch (e) {
	                    errors.push(e);
	                }
	            });
	        });
	    }
	    if (jsonx.__dangerouslyInsertComponents) {
	        Object.keys(jsonx.__dangerouslyInsertComponents).forEach(insertedComponents => {
	            try {
	                if (jsonx.__dangerouslyInsertComponents)
	                    validateJSONX(jsonx.__dangerouslyInsertComponents[insertedComponents]);
	            }
	            catch (e) {
	                errors.push(TypeError(`[0011] jsonx.__dangerouslyInsertComponents.${insertedComponents} must be a valid JSONX JSON Object: ${e.toString()}`));
	            }
	        });
	    }
	    if (jsonx.__functionProps) {
	        if (typeof jsonx.__functionProps !== 'object') {
	            errors.push(TypeError('[0012] jsonx.__functionProps  must be an object'));
	        }
	        else {
	            Object.keys(jsonx.__functionProps)
	                .forEach(fProp => {
	                if (jsonx.__functionProps && jsonx.__functionProps[fProp] && (typeof jsonx.__functionProps[fProp] !== 'string' || jsonx.__functionProps[fProp].indexOf('func:') === -1)) {
	                    errors.push(ReferenceError(`[0013] jsonx.__functionProps.${fProp} must reference a function (i.e. func:this.props.logoutUser())`));
	                }
	            });
	        }
	    }
	    if (jsonx.__windowComponentProps && (typeof jsonx.__windowComponentProps !== 'object' || Array.isArray(jsonx.__windowComponentProps))) {
	        errors.push(TypeError('[0013] jsonx.__windowComponentProps  must be an object'));
	    }
	    if (jsonx.__windowComponents) {
	        if (typeof jsonx.__windowComponents !== 'object') {
	            errors.push(TypeError('[0014] jsonx.__windowComponents must be an object'));
	        }
	        Object.keys(jsonx.__windowComponents)
	            .forEach(cProp => {
	            if (typeof jsonx.__windowComponents[cProp] !== 'string' || jsonx.__windowComponents[cProp].indexOf('func:') === -1) {
	                errors.push(ReferenceError(`[0015] jsonx.__windowComponents.${cProp} must reference a window element on window.__jsonx_custom_elements (i.e. func:window.__jsonx_custom_elements.bootstrapModal)`));
	            }
	        });
	    }
	    if (typeof jsonx.comparisonorprops !== 'undefined' && typeof jsonx.comparisonorprops !== 'boolean') {
	        errors.push(TypeError('[0016] jsonx.comparisonorprops  must be boolean'));
	    }
	    if (jsonx.comparisonprops) {
	        if (!Array.isArray(jsonx.comparisonprops)) {
	            errors.push(TypeError('[0017] jsonx.comparisonprops  must be an array or comparisons'));
	        }
	        else {
	            jsonx.comparisonprops.forEach(c => {
	                if (typeof c !== 'object') {
	                    errors.push(TypeError('[0018] jsonx.comparisonprops  must be an array or comparisons objects'));
	                }
	                else if (typeof c.left === 'undefined') {
	                    errors.push(TypeError('[0019] jsonx.comparisonprops  must be have a left comparison value'));
	                }
	            });
	        }
	    }
	    if (typeof jsonx.passprops !== 'undefined' && typeof jsonx.passprops !== 'boolean') {
	        errors.push(TypeError('[0020] jsonx.passprops  must be boolean'));
	    }
	    const invalidKeys = Object.keys(jsonx).filter(key => validKeys.indexOf(key) === -1);
	    if (errors.length) {
	        if (returnAllErrors)
	            return errors;
	        throw errors[0];
	    }
	    return invalidKeys.length
	        ? `Warning: Invalid Keys [${invalidKeys.join()}]`
	        : true;
	}
	/**
	 * validates simple JSONX Syntax {[component]:{props,children}}
	 * @param {Object} simpleJSONX - Any valid simple JSONX Syntax
	 * @return {Boolean} returns true if simpleJSONX is valid
	 */
	function validSimpleJSONXSyntax(simpleJSONX = {}) {
	    if (Object.keys(simpleJSONX).length !== 1 && !simpleJSONX.component) {
	        return false;
	    }
	    else {
	        const componentName = Object.keys(simpleJSONX)[0];
	        return (Object.keys(simpleJSONX).length === 1 && !simpleJSONX[componentName].component && typeof simpleJSONX[componentName] === 'object')
	            ? true
	            : false;
	    }
	}
	/**
	 * Transforms SimpleJSONX to Valid JSONX JSON {[component]:{props,children}} => {component,props,children}
	 * @param {Object} simpleJSONX JSON Object
	 * @return {Object} - returns a valid JSONX JSON Object from a simple JSONX JSON Object
	 */
	function simpleJSONXSyntax(simpleJSONX = {}) {
	    const component = Object.keys(simpleJSONX)[0];
	    try {
	        return Object.assign({}, {
	            component,
	        }, simpleJSONX[component], {
	            children: (simpleJSONX[component] &&
	                simpleJSONX[component].children &&
	                Array.isArray(simpleJSONX[component].children))
	                //@ts-ignore  
	                ? simpleJSONX[component].children
	                    //@ts-ignore  
	                    .map(simpleJSONXSyntax)
	                : simpleJSONX[component].children,
	        });
	    }
	    catch (e) {
	        throw SyntaxError('Invalid Simple JSONX Syntax');
	    }
	}
	/**
	 * Transforms Valid JSONX JSON to SimpleJSONX  {component,props,children} => {[component]:{props,children}}
	 * @param {Object} jsonx Valid JSONX JSON object
	 * @return {Object} - returns a simple JSONX JSON Object from a valid JSONX JSON Object
	 */
	function getSimplifiedJSONX(jsonx = {}) {
	    try {
	        if (!jsonx.component)
	            return jsonx; //already simple
	        const componentName = jsonx.component;
	        jsonx.children = (Array.isArray(jsonx.children))
	            ? jsonx.children
	                .filter(child => child) //remove empty children
	                .map(getSimplifiedJSONX)
	            : jsonx.children;
	        delete jsonx.component;
	        return {
	            [componentName]: jsonx,
	        };
	    }
	    catch (e) {
	        throw e;
	    }
	}
	/**
	 * Fetches JSON from remote path
	 * @param {String} path - fetch path url
	 * @param {Object} options - fetch options
	 * @return {Object} - returns fetched JSON data
	 */
	async function fetchJSON(path = '', options = {}) {
	    try {
	        const response = await fetch(path, options);
	        return await response.json();
	    }
	    catch (e) {
	        throw e;
	    }
	}

	var jsonxUtils = /*#__PURE__*/Object.freeze({
		displayComponent: displayComponent,
		getAdvancedBinding: getAdvancedBinding,
		traverse: traverse,
		validateJSONX: validateJSONX,
		validSimpleJSONXSyntax: validSimpleJSONXSyntax,
		simpleJSONXSyntax: simpleJSONXSyntax,
		getSimplifiedJSONX: getSimplifiedJSONX,
		fetchJSON: fetchJSON
	});

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	var emptyObject = {};

	var emptyObject_1 = emptyObject;

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	var validateFormat = function validateFormat(format) {};

	function invariant(condition, format, a, b, c, d, e, f) {
	  validateFormat(format);

	  if (!condition) {
	    var error;

	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	      error.name = 'Invariant Violation';
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame

	    throw error;
	  }
	}

	var invariant_1 = invariant;

	var MIXINS_KEY = 'mixins'; // Helper function to allow the creation of anonymous functions which do not
	// have .name set to the name of the variable being assigned to.

	function identity(fn) {
	  return fn;
	}

	function factory(ReactComponent, isValidElement, ReactNoopUpdateQueue) {
	  /**
	   * Policies that describe methods in `ReactClassInterface`.
	   */
	  var injectedMixins = [];
	  /**
	   * Composite components are higher-level components that compose other composite
	   * or host components.
	   *
	   * To create a new type of `ReactClass`, pass a specification of
	   * your new class to `React.createClass`. The only requirement of your class
	   * specification is that you implement a `render` method.
	   *
	   *   var MyComponent = React.createClass({
	   *     render: function() {
	   *       return <div>Hello World</div>;
	   *     }
	   *   });
	   *
	   * The class specification supports a specific protocol of methods that have
	   * special meaning (e.g. `render`). See `ReactClassInterface` for
	   * more the comprehensive protocol. Any other properties and methods in the
	   * class specification will be available on the prototype.
	   *
	   * @interface ReactClassInterface
	   * @internal
	   */

	  var ReactClassInterface = {
	    /**
	     * An array of Mixin objects to include when defining your component.
	     *
	     * @type {array}
	     * @optional
	     */
	    mixins: 'DEFINE_MANY',

	    /**
	     * An object containing properties and methods that should be defined on
	     * the component's constructor instead of its prototype (static methods).
	     *
	     * @type {object}
	     * @optional
	     */
	    statics: 'DEFINE_MANY',

	    /**
	     * Definition of prop types for this component.
	     *
	     * @type {object}
	     * @optional
	     */
	    propTypes: 'DEFINE_MANY',

	    /**
	     * Definition of context types for this component.
	     *
	     * @type {object}
	     * @optional
	     */
	    contextTypes: 'DEFINE_MANY',

	    /**
	     * Definition of context types this component sets for its children.
	     *
	     * @type {object}
	     * @optional
	     */
	    childContextTypes: 'DEFINE_MANY',
	    // ==== Definition methods ====

	    /**
	     * Invoked when the component is mounted. Values in the mapping will be set on
	     * `this.props` if that prop is not specified (i.e. using an `in` check).
	     *
	     * This method is invoked before `getInitialState` and therefore cannot rely
	     * on `this.state` or use `this.setState`.
	     *
	     * @return {object}
	     * @optional
	     */
	    getDefaultProps: 'DEFINE_MANY_MERGED',

	    /**
	     * Invoked once before the component is mounted. The return value will be used
	     * as the initial value of `this.state`.
	     *
	     *   getInitialState: function() {
	     *     return {
	     *       isOn: false,
	     *       fooBaz: new BazFoo()
	     *     }
	     *   }
	     *
	     * @return {object}
	     * @optional
	     */
	    getInitialState: 'DEFINE_MANY_MERGED',

	    /**
	     * @return {object}
	     * @optional
	     */
	    getChildContext: 'DEFINE_MANY_MERGED',

	    /**
	     * Uses props from `this.props` and state from `this.state` to render the
	     * structure of the component.
	     *
	     * No guarantees are made about when or how often this method is invoked, so
	     * it must not have side effects.
	     *
	     *   render: function() {
	     *     var name = this.props.name;
	     *     return <div>Hello, {name}!</div>;
	     *   }
	     *
	     * @return {ReactComponent}
	     * @required
	     */
	    render: 'DEFINE_ONCE',
	    // ==== Delegate methods ====

	    /**
	     * Invoked when the component is initially created and about to be mounted.
	     * This may have side effects, but any external subscriptions or data created
	     * by this method must be cleaned up in `componentWillUnmount`.
	     *
	     * @optional
	     */
	    componentWillMount: 'DEFINE_MANY',

	    /**
	     * Invoked when the component has been mounted and has a DOM representation.
	     * However, there is no guarantee that the DOM node is in the document.
	     *
	     * Use this as an opportunity to operate on the DOM when the component has
	     * been mounted (initialized and rendered) for the first time.
	     *
	     * @param {DOMElement} rootNode DOM element representing the component.
	     * @optional
	     */
	    componentDidMount: 'DEFINE_MANY',

	    /**
	     * Invoked before the component receives new props.
	     *
	     * Use this as an opportunity to react to a prop transition by updating the
	     * state using `this.setState`. Current props are accessed via `this.props`.
	     *
	     *   componentWillReceiveProps: function(nextProps, nextContext) {
	     *     this.setState({
	     *       likesIncreasing: nextProps.likeCount > this.props.likeCount
	     *     });
	     *   }
	     *
	     * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
	     * transition may cause a state change, but the opposite is not true. If you
	     * need it, you are probably looking for `componentWillUpdate`.
	     *
	     * @param {object} nextProps
	     * @optional
	     */
	    componentWillReceiveProps: 'DEFINE_MANY',

	    /**
	     * Invoked while deciding if the component should be updated as a result of
	     * receiving new props, state and/or context.
	     *
	     * Use this as an opportunity to `return false` when you're certain that the
	     * transition to the new props/state/context will not require a component
	     * update.
	     *
	     *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
	     *     return !equal(nextProps, this.props) ||
	     *       !equal(nextState, this.state) ||
	     *       !equal(nextContext, this.context);
	     *   }
	     *
	     * @param {object} nextProps
	     * @param {?object} nextState
	     * @param {?object} nextContext
	     * @return {boolean} True if the component should update.
	     * @optional
	     */
	    shouldComponentUpdate: 'DEFINE_ONCE',

	    /**
	     * Invoked when the component is about to update due to a transition from
	     * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
	     * and `nextContext`.
	     *
	     * Use this as an opportunity to perform preparation before an update occurs.
	     *
	     * NOTE: You **cannot** use `this.setState()` in this method.
	     *
	     * @param {object} nextProps
	     * @param {?object} nextState
	     * @param {?object} nextContext
	     * @param {ReactReconcileTransaction} transaction
	     * @optional
	     */
	    componentWillUpdate: 'DEFINE_MANY',

	    /**
	     * Invoked when the component's DOM representation has been updated.
	     *
	     * Use this as an opportunity to operate on the DOM when the component has
	     * been updated.
	     *
	     * @param {object} prevProps
	     * @param {?object} prevState
	     * @param {?object} prevContext
	     * @param {DOMElement} rootNode DOM element representing the component.
	     * @optional
	     */
	    componentDidUpdate: 'DEFINE_MANY',

	    /**
	     * Invoked when the component is about to be removed from its parent and have
	     * its DOM representation destroyed.
	     *
	     * Use this as an opportunity to deallocate any external resources.
	     *
	     * NOTE: There is no `componentDidUnmount` since your component will have been
	     * destroyed by that point.
	     *
	     * @optional
	     */
	    componentWillUnmount: 'DEFINE_MANY',

	    /**
	     * Replacement for (deprecated) `componentWillMount`.
	     *
	     * @optional
	     */
	    UNSAFE_componentWillMount: 'DEFINE_MANY',

	    /**
	     * Replacement for (deprecated) `componentWillReceiveProps`.
	     *
	     * @optional
	     */
	    UNSAFE_componentWillReceiveProps: 'DEFINE_MANY',

	    /**
	     * Replacement for (deprecated) `componentWillUpdate`.
	     *
	     * @optional
	     */
	    UNSAFE_componentWillUpdate: 'DEFINE_MANY',
	    // ==== Advanced methods ====

	    /**
	     * Updates the component's currently mounted DOM representation.
	     *
	     * By default, this implements React's rendering and reconciliation algorithm.
	     * Sophisticated clients may wish to override this.
	     *
	     * @param {ReactReconcileTransaction} transaction
	     * @internal
	     * @overridable
	     */
	    updateComponent: 'OVERRIDE_BASE'
	  };
	  /**
	   * Similar to ReactClassInterface but for static methods.
	   */

	  var ReactClassStaticInterface = {
	    /**
	     * This method is invoked after a component is instantiated and when it
	     * receives new props. Return an object to update state in response to
	     * prop changes. Return null to indicate no change to state.
	     *
	     * If an object is returned, its keys will be merged into the existing state.
	     *
	     * @return {object || null}
	     * @optional
	     */
	    getDerivedStateFromProps: 'DEFINE_MANY_MERGED'
	  };
	  /**
	   * Mapping from class specification keys to special processing functions.
	   *
	   * Although these are declared like instance properties in the specification
	   * when defining classes using `React.createClass`, they are actually static
	   * and are accessible on the constructor instead of the prototype. Despite
	   * being static, they must be defined outside of the "statics" key under
	   * which all other static methods are defined.
	   */

	  var RESERVED_SPEC_KEYS = {
	    displayName: function displayName(Constructor, _displayName) {
	      Constructor.displayName = _displayName;
	    },
	    mixins: function mixins(Constructor, _mixins) {
	      if (_mixins) {
	        for (var i = 0; i < _mixins.length; i++) {
	          mixSpecIntoComponent(Constructor, _mixins[i]);
	        }
	      }
	    },
	    childContextTypes: function childContextTypes(Constructor, _childContextTypes) {

	      Constructor.childContextTypes = objectAssign({}, Constructor.childContextTypes, _childContextTypes);
	    },
	    contextTypes: function contextTypes(Constructor, _contextTypes) {

	      Constructor.contextTypes = objectAssign({}, Constructor.contextTypes, _contextTypes);
	    },

	    /**
	     * Special case getDefaultProps which should move into statics but requires
	     * automatic merging.
	     */
	    getDefaultProps: function getDefaultProps(Constructor, _getDefaultProps) {
	      if (Constructor.getDefaultProps) {
	        Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, _getDefaultProps);
	      } else {
	        Constructor.getDefaultProps = _getDefaultProps;
	      }
	    },
	    propTypes: function propTypes(Constructor, _propTypes) {

	      Constructor.propTypes = objectAssign({}, Constructor.propTypes, _propTypes);
	    },
	    statics: function statics(Constructor, _statics) {
	      mixStaticSpecIntoComponent(Constructor, _statics);
	    },
	    autobind: function autobind() {}
	  };

	  function validateMethodOverride(isAlreadyDefined, name) {
	    var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null; // Disallow overriding of base class methods unless explicitly allowed.

	    if (ReactClassMixin.hasOwnProperty(name)) {
	      invariant_1(specPolicy === 'OVERRIDE_BASE', 'ReactClassInterface: You are attempting to override ' + '`%s` from your class specification. Ensure that your method names ' + 'do not overlap with React methods.', name);
	    } // Disallow defining methods more than once unless explicitly allowed.


	    if (isAlreadyDefined) {
	      invariant_1(specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED', 'ReactClassInterface: You are attempting to define ' + '`%s` on your component more than once. This conflict may be due ' + 'to a mixin.', name);
	    }
	  }
	  /**
	   * Mixin helper which handles policy validation and reserved
	   * specification keys when building React classes.
	   */


	  function mixSpecIntoComponent(Constructor, spec) {
	    if (!spec) {

	      return;
	    }

	    invariant_1(typeof spec !== 'function', "ReactClass: You're attempting to " + 'use a component class or function as a mixin. Instead, just use a ' + 'regular object.');

	    invariant_1(!isValidElement(spec), "ReactClass: You're attempting to " + 'use a component as a mixin. Instead, just use a regular object.');

	    var proto = Constructor.prototype;
	    var autoBindPairs = proto.__reactAutoBindPairs; // By handling mixins before any other properties, we ensure the same
	    // chaining order is applied to methods with DEFINE_MANY policy, whether
	    // mixins are listed before or after these methods in the spec.

	    if (spec.hasOwnProperty(MIXINS_KEY)) {
	      RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
	    }

	    for (var name in spec) {
	      if (!spec.hasOwnProperty(name)) {
	        continue;
	      }

	      if (name === MIXINS_KEY) {
	        // We have already handled mixins in a special case above.
	        continue;
	      }

	      var property = spec[name];
	      var isAlreadyDefined = proto.hasOwnProperty(name);
	      validateMethodOverride(isAlreadyDefined, name);

	      if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
	        RESERVED_SPEC_KEYS[name](Constructor, property);
	      } else {
	        // Setup methods on prototype:
	        // The following member methods should not be automatically bound:
	        // 1. Expected ReactClass methods (in the "interface").
	        // 2. Overridden methods (that were mixed in).
	        var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
	        var isFunction = typeof property === 'function';
	        var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;

	        if (shouldAutoBind) {
	          autoBindPairs.push(name, property);
	          proto[name] = property;
	        } else {
	          if (isAlreadyDefined) {
	            var specPolicy = ReactClassInterface[name]; // These cases should already be caught by validateMethodOverride.

	            invariant_1(isReactClassMethod && (specPolicy === 'DEFINE_MANY_MERGED' || specPolicy === 'DEFINE_MANY'), 'ReactClass: Unexpected spec policy %s for key %s ' + 'when mixing in component specs.', specPolicy, name); // For methods which are defined more than once, call the existing
	            // methods before calling the new property, merging if appropriate.


	            if (specPolicy === 'DEFINE_MANY_MERGED') {
	              proto[name] = createMergedResultFunction(proto[name], property);
	            } else if (specPolicy === 'DEFINE_MANY') {
	              proto[name] = createChainedFunction(proto[name], property);
	            }
	          } else {
	            proto[name] = property;
	          }
	        }
	      }
	    }
	  }

	  function mixStaticSpecIntoComponent(Constructor, statics) {
	    if (!statics) {
	      return;
	    }

	    for (var name in statics) {
	      var property = statics[name];

	      if (!statics.hasOwnProperty(name)) {
	        continue;
	      }

	      var isReserved = name in RESERVED_SPEC_KEYS;

	      invariant_1(!isReserved, 'ReactClass: You are attempting to define a reserved ' + 'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' + 'as an instance property instead; it will still be accessible on the ' + 'constructor.', name);

	      var isAlreadyDefined = name in Constructor;

	      if (isAlreadyDefined) {
	        var specPolicy = ReactClassStaticInterface.hasOwnProperty(name) ? ReactClassStaticInterface[name] : null;

	        invariant_1(specPolicy === 'DEFINE_MANY_MERGED', 'ReactClass: You are attempting to define ' + '`%s` on your component more than once. This conflict may be ' + 'due to a mixin.', name);

	        Constructor[name] = createMergedResultFunction(Constructor[name], property);
	        return;
	      }

	      Constructor[name] = property;
	    }
	  }
	  /**
	   * Merge two objects, but throw if both contain the same key.
	   *
	   * @param {object} one The first object, which is mutated.
	   * @param {object} two The second object
	   * @return {object} one after it has been mutated to contain everything in two.
	   */


	  function mergeIntoWithNoDuplicateKeys(one, two) {
	    invariant_1(one && two && _typeof_1(one) === 'object' && _typeof_1(two) === 'object', 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.');

	    for (var key in two) {
	      if (two.hasOwnProperty(key)) {
	        invariant_1(one[key] === undefined, 'mergeIntoWithNoDuplicateKeys(): ' + 'Tried to merge two objects with the same key: `%s`. This conflict ' + 'may be due to a mixin; in particular, this may be caused by two ' + 'getInitialState() or getDefaultProps() methods returning objects ' + 'with clashing keys.', key);

	        one[key] = two[key];
	      }
	    }

	    return one;
	  }
	  /**
	   * Creates a function that invokes two functions and merges their return values.
	   *
	   * @param {function} one Function to invoke first.
	   * @param {function} two Function to invoke second.
	   * @return {function} Function that invokes the two argument functions.
	   * @private
	   */


	  function createMergedResultFunction(one, two) {
	    return function mergedResult() {
	      var a = one.apply(this, arguments);
	      var b = two.apply(this, arguments);

	      if (a == null) {
	        return b;
	      } else if (b == null) {
	        return a;
	      }

	      var c = {};
	      mergeIntoWithNoDuplicateKeys(c, a);
	      mergeIntoWithNoDuplicateKeys(c, b);
	      return c;
	    };
	  }
	  /**
	   * Creates a function that invokes two functions and ignores their return vales.
	   *
	   * @param {function} one Function to invoke first.
	   * @param {function} two Function to invoke second.
	   * @return {function} Function that invokes the two argument functions.
	   * @private
	   */


	  function createChainedFunction(one, two) {
	    return function chainedFunction() {
	      one.apply(this, arguments);
	      two.apply(this, arguments);
	    };
	  }
	  /**
	   * Binds a method to the component.
	   *
	   * @param {object} component Component whose method is going to be bound.
	   * @param {function} method Method to be bound.
	   * @return {function} The bound method.
	   */


	  function bindAutoBindMethod(component, method) {
	    var boundMethod = method.bind(component);

	    return boundMethod;
	  }
	  /**
	   * Binds all auto-bound methods in a component.
	   *
	   * @param {object} component Component whose method is going to be bound.
	   */


	  function bindAutoBindMethods(component) {
	    var pairs = component.__reactAutoBindPairs;

	    for (var i = 0; i < pairs.length; i += 2) {
	      var autoBindKey = pairs[i];
	      var method = pairs[i + 1];
	      component[autoBindKey] = bindAutoBindMethod(component, method);
	    }
	  }

	  var IsMountedPreMixin = {
	    componentDidMount: function componentDidMount() {
	      this.__isMounted = true;
	    }
	  };
	  var IsMountedPostMixin = {
	    componentWillUnmount: function componentWillUnmount() {
	      this.__isMounted = false;
	    }
	  };
	  /**
	   * Add more to the ReactClass base class. These are all legacy features and
	   * therefore not already part of the modern ReactComponent.
	   */

	  var ReactClassMixin = {
	    /**
	     * TODO: This will be deprecated because state should always keep a consistent
	     * type signature and the only use case for this, is to avoid that.
	     */
	    replaceState: function replaceState(newState, callback) {
	      this.updater.enqueueReplaceState(this, newState, callback);
	    },

	    /**
	     * Checks whether or not this composite component is mounted.
	     * @return {boolean} True if mounted, false otherwise.
	     * @protected
	     * @final
	     */
	    isMounted: function isMounted() {

	      return !!this.__isMounted;
	    }
	  };

	  var ReactClassComponent = function ReactClassComponent() {};

	  objectAssign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);
	  /**
	   * Creates a composite component class given a class specification.
	   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
	   *
	   * @param {object} spec Class specification (which must define `render`).
	   * @return {function} Component constructor function.
	   * @public
	   */


	  function createClass(spec) {
	    // To keep our warnings more understandable, we'll use a little hack here to
	    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't
	    // unnecessarily identify a class without displayName as 'Constructor'.
	    var Constructor = identity(function (props, context, updater) {


	      if (this.__reactAutoBindPairs.length) {
	        bindAutoBindMethods(this);
	      }

	      this.props = props;
	      this.context = context;
	      this.refs = emptyObject_1;
	      this.updater = updater || ReactNoopUpdateQueue;
	      this.state = null; // ReactClasses doesn't have constructors. Instead, they use the
	      // getInitialState and componentWillMount methods for initialization.

	      var initialState = this.getInitialState ? this.getInitialState() : null;

	      invariant_1(_typeof_1(initialState) === 'object' && !Array.isArray(initialState), '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent');

	      this.state = initialState;
	    });
	    Constructor.prototype = new ReactClassComponent();
	    Constructor.prototype.constructor = Constructor;
	    Constructor.prototype.__reactAutoBindPairs = [];
	    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));
	    mixSpecIntoComponent(Constructor, IsMountedPreMixin);
	    mixSpecIntoComponent(Constructor, spec);
	    mixSpecIntoComponent(Constructor, IsMountedPostMixin); // Initialize the defaultProps property after all mixins have been merged.

	    if (Constructor.getDefaultProps) {
	      Constructor.defaultProps = Constructor.getDefaultProps();
	    }

	    invariant_1(Constructor.prototype.render, 'createClass(...): Class specification must implement a `render` method.');


	    for (var methodName in ReactClassInterface) {
	      if (!Constructor.prototype[methodName]) {
	        Constructor.prototype[methodName] = null;
	      }
	    }

	    return Constructor;
	  }

	  return createClass;
	}

	var factory_1 = factory;

	if (typeof react === 'undefined') {
	  throw Error('create-react-class could not find the React object. If you are using script tags, ' + 'make sure that React is being loaded before create-react-class.');
	} // Hack to grab NoopUpdateQueue from isomorphic React


	var ReactNoopUpdateQueue = new react.Component().updater;
	var createReactClass = factory_1(react.Component, react.isValidElement, ReactNoopUpdateQueue);

	const cache = new Cache_1();
	// if (typeof window === 'undefined') {
	//   var window = window || global.window || {};
	// }
	/**
	 
	 */
	//@ts-ignore
	let advancedBinding = getAdvancedBinding();
	// require;
	/**
	 * object of all react components available for JSONX
	 
	 */
	//@ts-ignore
	let componentMap = Object.assign({ Fragment: react_5, Suspense: react_6, }, reactDomFactories, (typeof window === 'object') ? window.__jsonx_custom_elements : {});
	/**
	 * getBoundedComponents returns reactComponents with certain elements that have this bounded to select components in the boundedComponents list
	 
	 * @param {Object} options - options for getBoundedComponents
	 * @param {Object} options.reactComponents - all react components available for JSONX
	 * @param {string[]} boundedComponents - list of components to bind JSONX this context (usually helpful for navigation and redux-router)
	 * @returns {Object} reactComponents object of all react components available for JSONX
	 */
	function getBoundedComponents(options = {}) {
	    const { reactComponents, boundedComponents = [], } = options;
	    if (advancedBinding || options.advancedBinding) {
	        return Object.assign({}, reactComponents, boundedComponents.reduce((result, componentName) => {
	            result[componentName] = reactComponents[componentName].bind(this);
	            return result;
	        }, {}));
	        // reactComponents.ResponsiveLink = ResponsiveLink.bind(this);
	    }
	    else
	        return reactComponents;
	}
	/**
	 * returns a react component from a component library
	 
	 * @param {Object} options - options for getComponentFromLibrary
	 * @param {Object} [options.componentLibraries={}] - react component library like bootstrap
	 * @param {Object} [options.jsonx={}] - any valid JSONX JSON
	 * @returns {function|undefined} react component from react library like bootstrap, material design or bulma
	 */
	function getComponentFromLibrary(options = { jsonx: {} }) {
	    const { componentLibraries = {}, jsonx = {}, } = options;
	    const libComponent = Object.keys(componentLibraries)
	        .map(libraryName => {
	        //@ts-ignore
	        const cleanLibraryName = jsonx.component.replace(`${libraryName}.`, '');
	        const libraryNameArray = cleanLibraryName.split('.');
	        if (libraryNameArray.length === 2
	            && componentLibraries[libraryName]
	            && componentLibraries[libraryName][libraryNameArray[0]]
	            && typeof componentLibraries[libraryName][libraryNameArray[0]][libraryNameArray[1]] !== 'undefined') {
	            return componentLibraries[libraryName][libraryNameArray[0]][libraryNameArray[1]];
	        }
	        else if (typeof componentLibraries[libraryName][cleanLibraryName] !== 'undefined') {
	            return componentLibraries[libraryName][cleanLibraryName];
	        }
	    })
	        .filter(val => val)[0];
	    return libComponent;
	}
	/**
	 * returns a react element from jsonx.component
	 
	 * @example
	 * // returns react elements
	 * getComponentFromMap({jsonx:{component:'div'}})=>div
	 * getComponentFromMap({jsonx:{component:'MyModal'},reactComponents:{MyModal:MyModal extends React.Component}})=>MyModal
	 * getComponentFromMap({jsonx:{component:'reactBootstap.nav'},componentLibraries:{reactBootstrap,}})=>reactBootstap.nav
	 * @param {Object} options - options for getComponentFromMap
	 * @param {object} [options.jsonx={}] - any valid JSONX JSON object
	 * @param {Object} [options.reactComponents={}] - react components to render
	 * @param {Object} [options.componentLibraries={}] - react components to render from another component library like bootstrap or bulma
	 * @param {function} [options.logError=console.error] - error logging function
	 * @param {boolean} [options.debug=false] - use debug messages
	 * @returns {string|function|class} valid react element
	 */
	function getComponentFromMap(options = {}) {
	    // eslint-disable-next-line
	    const { jsonx = {}, reactComponents = {}, componentLibraries = {}, logError = console.error, debug } = options;
	    try {
	        if (typeof jsonx.component !== 'string' && typeof jsonx.component === 'function') {
	            return jsonx.component;
	            //@ts-ignore
	        }
	        else if (reactDomFactories[jsonx.component]) {
	            return jsonx.component;
	            //@ts-ignore
	        }
	        else if (reactComponents[jsonx.component]) {
	            //@ts-ignore
	            return reactComponents[jsonx.component];
	        }
	        else if (typeof jsonx.component === 'string' && jsonx.component.indexOf('.') > 0 && getComponentFromLibrary({ jsonx, componentLibraries, })) {
	            return getComponentFromLibrary({ jsonx, componentLibraries, });
	        }
	        else {
	            throw new ReferenceError(`Invalid React Component (${jsonx.component})`);
	        }
	    }
	    catch (e) {
	        if (debug)
	            logError(e, (e.stack) ? e.stack : 'no stack');
	        throw e;
	    }
	}
	/**
	 * Returns a new function from an options object
	 
	 * @param {Object} options
	 * @param {String} [options.body=''] - Function string body
	 * @param {String[]} [options.args=[]] - Function arguments
	 * @returns {Function}
	 */
	function getFunctionFromEval(options = {}) {
	    if (typeof options === 'function')
	        return options;
	    const { body = '', args = [], name, } = options;
	    const argus = [].concat(args);
	    argus.push(body);
	    const evalFunction = Function.prototype.constructor.apply({ name, }, argus);
	    if (name) {
	        Object.defineProperty(evalFunction, 'name', { value: name, });
	    }
	    return evalFunction;
	}
	/**
	 * Returns a new React Component
	 
	 * @param {Boolean} [options.returnFactory=true] - returns a React component if true otherwise returns Component Class
	 * @param {Object} [options.resources={}] - asyncprops for component
	 * @param {String} [options.name ] - Component name
	 * @param {Function} [options.lazy ] - function that resolves {reactComponent,options} to lazy load component for code splitting
	 * @param {Boolean} [options.use_getState=true] - define getState prop
	 * @param {Boolean} [options.bindContext=true] - bind class this reference to render function components
	 * @param {Boolean} [options.passprops ] - pass props to rendered component
	 * @param {Boolean} [options.passstate] - pass state as props to rendered component
	 * @param {Object} [reactComponent={}] - an object of functions used for create-react-class
	 * @param {Object} reactComponent.render.body - Valid JSONX JSON
	 * @param {String} reactComponent.getDefaultProps.body - return an object for the default props
	 * @param {String} reactComponent.getInitialState.body - return an object for the default state
	 * @returns {Function}
	 * @see {@link https://reactjs.org/docs/react-without-es6.html}
	 */
	function getReactClassComponent(reactComponent = {}, options = {}) {
	    // const util = require('util');
	    // console.log(util.inspect({ reactComponent },{depth:20}));
	    if (options.lazy) {
	        //@ts-ignore
	        return react_7(() => options.lazy(reactComponent, Object.assign({}, options, { lazy: false, })).then((lazyComponent) => {
	            return {
	                //@ts-ignore
	                default: getReactClassComponent(...lazyComponent),
	            };
	        }));
	    }
	    const context = this || {};
	    const { returnFactory = true, resources = {}, use_getState = true, bindContext = true, disableRenderIndexKey = true, } = options;
	    const rjc = Object.assign({
	        getDefaultProps: {
	            body: 'return {};',
	        },
	        getInitialState: {
	            body: 'return {};',
	        },
	    }, reactComponent);
	    const rjcKeys = Object.keys(rjc);
	    if (rjcKeys.includes('render') === false) {
	        throw new ReferenceError('React components require a render method');
	    }
	    const classOptions = rjcKeys.reduce((result, val) => {
	        if (typeof rjc[val] === 'function')
	            rjc[val] = { body: rjc[val], };
	        const args = rjc[val].arguments;
	        const body = rjc[val].body;
	        if (!body) {
	            console.warn({ rjc, });
	            throw new SyntaxError(`Function(${val}) requires a function body`);
	        }
	        if (args && !Array.isArray(args) && (args.length && (args.length && args.filter((arg) => typeof arg === 'string').length))) {
	            throw new TypeError(`Function(${val}) arguments must be an array or variable names`);
	        }
	        if (val === 'render') {
	            //@ts-ignore
	            result[val] = function () {
	                //@ts-ignore
	                if (options.passprops && this.props)
	                    body.props = Object.assign({}, body.props, this.props);
	                //@ts-ignore
	                if (options.passstate && this.state)
	                    body.props = Object.assign({}, body.props, this.state);
	                return getReactElementFromJSONX.call(Object.assign({}, context, bindContext ? this : {}, { disableRenderIndexKey, }, {
	                    props: use_getState
	                        //@ts-ignore
	                        ? Object.assign({}, this.props, { getState: () => this.state, })
	                        //@ts-ignore
	                        : this.props,
	                }), body, resources);
	            };
	        }
	        else {
	            //@ts-ignore
	            result[val] = typeof body === 'function'
	                ? body
	                : getFunctionFromEval({
	                    body,
	                    args,
	                });
	        }
	        return result;
	    }, {});
	    const reactComponentClass = createReactClass(classOptions);
	    if (options.name) {
	        Object.defineProperty(reactComponentClass, 'name', {
	            value: options.name,
	        });
	    }
	    const reactClass = returnFactory
	        ? react.createFactory(reactComponentClass)
	        : reactComponentClass;
	    return reactClass;
	}
	function DynamicComponent(props = {}) {
	    //@ts-ignore
	    const { useCache = true, cacheTimeout = 60 * 60 * 5, loadingJSONX = { component: 'div', children: '...Loading', }, 
	    //@ts-ignore
	    loadingErrorJSONX = { component: 'div', children: [{ component: 'span', children: 'Error: ' }, { component: 'span', resourceprops: { _children: ['error', 'message'] }, }], }, cacheTimeoutFunction = () => { }, jsonx, transformFunction = data => data, fetchURL, fetchOptions, fetchFunction, } = props;
	    const context = this || {};
	    const [state, setState] = react_9({ hasLoaded: false, hasError: false, resources: {}, error: undefined, });
	    const transformer = react_14(() => getFunctionFromEval(transformFunction), [transformFunction]);
	    const timeoutFunction = react_14(() => getFunctionFromEval(cacheTimeoutFunction), [cacheTimeoutFunction]);
	    const renderJSONX = react_14(() => getReactElementFromJSONX.bind(context), [context]);
	    const loadingComponent = react_14(() => renderJSONX(loadingJSONX), [loadingJSONX]);
	    const loadingError = react_14(() => renderJSONX(loadingErrorJSONX, { error: state.error }), [loadingErrorJSONX, state.error]);
	    react_10(() => {
	        async function getData() {
	            try {
	                //@ts-ignore
	                let transformedData;
	                if (useCache && cache.get(fetchURL)) {
	                    transformedData = cache.get(fetchURL);
	                }
	                else {
	                    let fetchedData;
	                    if (fetchFunction) {
	                        fetchedData = await fetchFunction(fetchURL, fetchOptions);
	                    }
	                    else
	                        fetchedData = await fetchJSON(fetchURL, fetchOptions);
	                    transformedData = await transformer(fetchedData);
	                    if (useCache)
	                        cache.put(fetchURL, transformedData, cacheTimeout, timeoutFunction);
	                }
	                //@ts-ignore
	                setState(prevState => Object.assign({}, prevState, { hasLoaded: true, hasError: false, resources: { DynamicComponentData: transformedData, }, }));
	            }
	            catch (e) {
	                if (context.debug)
	                    console.warn(e);
	                //@ts-ignore
	                setState({ hasError: true, error: e, });
	            }
	        }
	        if (fetchURL)
	            getData();
	    }, [fetchURL, fetchOptions]);
	    if (!fetchURL)
	        return null;
	    else if (state.hasError) {
	        return loadingError;
	    }
	    else if (state.hasLoaded === false) {
	        return loadingComponent;
	    }
	    else
	        return renderJSONX(jsonx, state.resources);
	}
	/**
	 * Returns new React Function Component
	 
	 * @todo set 'functionprops' to set arguments for function
	 * @param {*} reactComponent - Valid JSONX to render
	 * @param {String} functionBody - String of function component body
	 * @param {String} options.name - Function Component name
	 * @returns {Function}
	 * @see {@link https://reactjs.org/docs/hooks-intro.html}
	 * @example
	  const jsonxRender = {
	   component:'div',
	   passprops:'true',
	   children:[
	     {
	      component:'input',
	      thisprops:{
	          value:['count'],
	        },
	     },
	      {
	        component:'button',
	       __dangerouslyBindEvalProps:{
	        onClick:function(count,setCount){
	          setCount(count+1);
	          console.log('this is inline',{count,setCount});
	        },
	        // onClick:`(function(count,setCount){
	        //   setCount(count+1)
	        //   console.log('this is inline',{count,setCount});
	        // })`,
	        children:'Click me'
	      }
	   ]
	  };
	  const functionBody = 'const [count, setCount] = useState(0); const functionprops = {count,setCount};'
	  const options = { name: IntroHook}
	  const MyCustomFunctionComponent = jsonx._jsonxComponents.getReactFunctionComponent({jsonxRender, functionBody, options});
	   */
	function getReactFunctionComponent(reactComponent = {}, functionBody = '', options = {}) {
	    if (options.lazy) {
	        //@ts-ignore
	        return react_7(() => options.lazy(reactComponent, functionBody, Object.assign({}, options, { lazy: false, })).then((lazyComponent) => {
	            return {
	                //@ts-ignore
	                default: getReactFunctionComponent(...lazyComponent),
	            };
	        }));
	    }
	    if (typeof options === 'undefined' || typeof options.bind === 'undefined')
	        options.bind = true;
	    console.log('func', { options }, 'this', this);
	    const { resources = {}, args = [], } = options;
	    //@ts-ignore
	    const props = reactComponent.props;
	    const functionArgs = [react, react_9, react_10, react_11, react_12, react_13, react_14, react_15, react_16, react_17, react_18, getReactElementFromJSONX, reactComponent, resources, props,];
	    //@ts-ignore
	    if (typeof functionBody === 'function')
	        functionBody = functionBody.toString();
	    const functionComponent = Function('React', 'useState', 'useEffect', 'useContext', 'useReducer', 'useCallback', 'useMemo', 'useRef', 'useImperativeHandle', 'useLayoutEffect', 'useDebugValue', 'getReactElementFromJSONX', 'reactComponent', 'resources', 'props', `
    'use strict';
    const self = this;

    return function ${options.name || 'Anonymous'}(props){
      ${functionBody}
      if(typeof exposeProps==='undefined' || exposeProps){
        reactComponent.props = Object.assign({},props,typeof exposeProps==='undefined'?{}:exposeProps);
        // reactComponent.__functionargs = Object.keys(exposeProps);
      } else{
        reactComponent.props =  props;
      }
      // if(!props.children && props) delete props.children;
      console.log('func self',self)
      console.log('func this',this)
      const context = ${options.bind ? 'Object.assign(self,this)' : 'this'};
      console.log({context}) 
      return getReactElementFromJSONX.call(context, reactComponent);
    }
  `);
	    if (options.name) {
	        Object.defineProperty(functionComponent, 'name', {
	            value: options.name,
	        });
	    }
	    return (options.bind) ? functionComponent.call(this, ...functionArgs) : functionComponent(...functionArgs);
	}
	/**
	 *
	 */
	function getReactContext(options = {}) {
	    return react_4(options.value);
	}

	var jsonxComponents = /*#__PURE__*/Object.freeze({
		advancedBinding: advancedBinding,
		componentMap: componentMap,
		getBoundedComponents: getBoundedComponents,
		getComponentFromLibrary: getComponentFromLibrary,
		getComponentFromMap: getComponentFromMap,
		getFunctionFromEval: getFunctionFromEval,
		getReactClassComponent: getReactClassComponent,
		DynamicComponent: DynamicComponent,
		getReactFunctionComponent: getReactFunctionComponent,
		getReactContext: getReactContext
	});

	//https://stackoverflow.com/questions/1007981/how-to-get-function-parameter-names-values-dynamically
	const STRIP_COMMENTS = /((\/\/.*$)|(\/\*[\s\S]*?\*\/))/mg;
	const ARGUMENT_NAMES = /([^\s,]+)/g;
	/**
	 * returns the names of parameters from a function declaration
	 * @example
	 * const arrowFunctionAdd = (a,b)=>a+b;
	 * function regularFunctionAdd(c,d){return c+d;}
	 * getParamNames(arrowFunctionAdd) // => ['a','b']
	 * getParamNames(regularFunctionAdd) // => ['c','d']
	 * @param {Function} func
	 * @todo write tests
	 */
	function getParamNames(func) {
	    var fnStr = func.toString().replace(STRIP_COMMENTS, '');
	    var result = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).match(ARGUMENT_NAMES);
	    if (result === null) {
	        result = [];
	    }
	    return result;
	}
	/**
	 * It uses traverse on a traverseObject to returns a resolved object on propName. So if you're making an ajax call and want to pass properties into a component, you can assign them using asyncprops and reference object properties by an array of property paths
	 * @param {Object} [traverseObject={}] - the object that contains values of propName
	 * @param {Object} options
	 * @param {Object} options.jsonx - Valid JSONX JSON
	 * @param {Object} [options.propName='asyncprops'] - Property on JSONX to resolve values onto, i.e (asyncprops,thisprops,windowprops)
	 * @returns {Object} resolved object
	 * @example
	 const traverseObject = {
	  user: {
	    name: 'jsonx',
	    description: 'react withouth javascript',
	  },
	  stats: {
	    logins: 102,
	    comments: 3,
	  },
	  authentication: 'OAuth2',
	};
	const testJSONX = {
	  component: 'div',
	  props: {
	    id: 'generatedJSONX',
	    className:'jsonx',
	  },
	  asyncprops:{
	    auth: [ 'authentication', ],
	    username: [ 'user', 'name', ],
	  },
	  children: [
	    {
	      component: 'p',
	      props: {
	        style: {
	          color: 'red',
	          fontWeight:'bold',
	        },
	      },
	      children:'hello world',
	    },
	  ],
	};
	const JSONXP = getJSONXProps({ jsonx: testJSONX, traverseObject, });
	// => {
	//   auth: 'OAuth2',
	//   username: 'jsonx'
	// }

	//finally resolves:
	const testJSONX = {
	  component: 'div',
	  props: {
	    id: 'generatedJSONX',
	    className:'jsonx',
	    auth: 'OAuth2',
	    username: 'jsonx',
	  },
	  children: [
	    {
	      component: 'p',
	      props: {
	        style: {
	          color: 'red',
	          fontWeight:'bold',
	        },
	      },
	      children:'hello world',
	    },
	  ],
	};
	 */
	function getJSONXProps(options = {}) {
	    // eslint-disable-next-line
	    let { jsonx = {}, propName = 'asyncprops', traverseObject = {}, } = options;
	    // return (jsonx.asyncprops && typeof jsonx.asyncprops === 'object')
	    // ? utilities.traverse(jsonx.asyncprops, resources)
	    // : {};
	    return (jsonx[propName] && typeof jsonx[propName] === 'object')
	        ? traverse(jsonx[propName], traverseObject)
	        : {};
	}
	/**
	 * returns children jsonx components defined on __spreadComponent spread over an array on props.__spread
	 * @param {*} options
	 */
	function getChildrenComponents(options = {}) {
	    const { allProps = {}, jsonx = {}, } = options;
	    // const asyncprops = getJSONXProps({ jsonx, propName: 'spreadprops', traverseObject: allProps, });
	    if (Array.isArray(allProps.__spread) === false) {
	        if ((this && this.debug) || jsonx.debug) {
	            return {
	                children: new Error('Using __spreadComponent requires an array prop \'__spread\'').toString(),
	            };
	        }
	        else {
	            return { children: undefined, };
	        }
	    }
	    else {
	        return {
	            _children: allProps.__spread.map((__item) => {
	                const clonedChild = Object.assign({}, jsonx.__spreadComponent);
	                const clonedChildProps = Object.assign({}, clonedChild.props);
	                clonedChildProps.__item = __item;
	                clonedChild.props = clonedChildProps;
	                return clonedChild;
	            }),
	        };
	    }
	}
	function boundArgsReducer(jsonx = {}) {
	    return (args, arg) => {
	        let val;
	        if (this && this.state && typeof this.state[arg] !== 'undefined')
	            val = (this.state[arg]);
	        else if (this && this.props && typeof this.props[arg] !== 'undefined')
	            val = (this.props[arg]);
	        else if (jsonx.props && typeof jsonx.props[arg] !== 'undefined')
	            val = (jsonx.props[arg]);
	        if (typeof val !== 'undefined')
	            args.push(val);
	        return args.filter((a) => typeof a !== 'undefined');
	    };
	}
	/**
	 * Used to evalute javascript and set those variables as props. getEvalProps evaluates __dangerouslyEvalProps and __dangerouslyBindEvalProps properties with eval, this is used when component properties are functions, __dangerouslyBindEvalProps is used when those functions require that this is bound to the function. For __dangerouslyBindEvalProps it must resolve an expression, so functions should be wrapped in (). I.e. (function f(x){ return this.minimum+x;})
	 * @param {Object} options
	 * @param {Object} options.jsonx - Valid JSONX JSON
	 * @returns {Object} returns resolved object with evaluated javascript
	 * @example
	 const testVals = {
	    auth: 'true',
	    username: '(user={})=>user.name',
	  };
	  const testJSONX = Object.assign({}, sampleJSONX, {
	    __dangerouslyEvalProps: testVals, __dangerouslyBindEvalProps: {
	      email: '(function getUser(user={}){ return this.testBound(); })',
	    },
	  });
	  const JSONXP = getEvalProps.call({ testBound: () => 'bounded', }, { jsonx: testJSONX, });
	  const evalutedComputedFunc = JSONXP.username({ name: 'bob', });
	  const evalutedComputedBoundFunc = JSONXP.email({ email:'test@email.domain', });
	  // expect(JSONXP.auth).to.be.true;
	  // expect(evalutedComputedFunc).to.eql('bob');
	  // expect(evalutedComputedBoundFunc).to.eql('bounded');
	 */
	function getEvalProps(options = { jsonx: {} }) {
	    const { jsonx, } = options;
	    const scopedEval = eval; //https://github.com/rollup/rollup/wiki/Troubleshooting#avoiding-eval
	    let evAllProps = {};
	    if (jsonx.__dangerouslyEvalAllProps) {
	        let evVal;
	        try {
	            // eslint-disable-next-line
	            evVal = (typeof evVal === 'function')
	                ? jsonx.__dangerouslyEvalAllProps
	                : scopedEval(jsonx.__dangerouslyEvalAllProps);
	        }
	        catch (e) {
	            if (this.debug || jsonx.debug)
	                evVal = e;
	        }
	        evAllProps = evVal.call(this, { jsonx, });
	    }
	    const evProps = Object.keys(jsonx.__dangerouslyEvalProps || {}).reduce((eprops, epropName) => {
	        let evVal;
	        let evValString;
	        try {
	            // eslint-disable-next-line
	            //@ts-ignore
	            evVal = scopedEval(jsonx.__dangerouslyEvalProps[epropName]);
	            evValString = evVal.toString();
	        }
	        catch (e) {
	            if (this.debug || jsonx.debug)
	                evVal = e;
	        }
	        //@ts-ignore
	        eprops[epropName] = (typeof evVal === 'function')
	            ? evVal.call(this, { jsonx, })
	            : evVal;
	        //@ts-ignore
	        if (this.exposeEval)
	            eprops[`__eval_${epropName}`] = evValString;
	        return eprops;
	    }, {});
	    const evBindProps = Object.keys(jsonx.__dangerouslyBindEvalProps || {}).reduce((eprops, epropName) => {
	        let evVal;
	        let evValString;
	        try {
	            let args;
	            //@ts-ignore
	            const functionBody = jsonx.__dangerouslyBindEvalProps[epropName];
	            // InlineFunction = Function.prototype.constructor.apply({}, args);
	            let functionDefinition;
	            if (typeof functionBody === 'function') {
	                functionDefinition = functionBody;
	            }
	            else {
	                //@ts-ignore
	                functionDefinition = scopedEval(jsonx.__dangerouslyBindEvalProps[epropName]);
	                evValString = functionDefinition.toString();
	            } // eslint-disable-next-line
	            if (jsonx.__functionargs && jsonx.__functionargs[epropName]) {
	                args = [this,].concat(jsonx.__functionargs[epropName].reduce(boundArgsReducer.call(this, jsonx), []));
	            }
	            else if (jsonx.__functionparams === false) {
	                args = [this,];
	            }
	            else {
	                const functionDefArgs = getParamNames(functionDefinition);
	                args = [this,].concat(functionDefArgs.reduce(boundArgsReducer.call(this, jsonx), []));
	            }
	            // eslint-disable-next-line
	            evVal = functionDefinition.bind(...args);
	        }
	        catch (e) {
	            if (this.debug || jsonx.debug)
	                evVal = e;
	        }
	        // eslint-disable-next-line 
	        //@ts-ignore
	        eprops[epropName] = evVal;
	        //@ts-ignore
	        if (this.exposeEval)
	            eprops[`__eval_${epropName}`] = evValString;
	        return eprops;
	    }, {});
	    return Object.assign({}, evProps, evBindProps, evAllProps);
	}
	/**
	 * Resolves jsonx.__dangerouslyInsertComponents into an object that turns each value into a React components. This is typically used in a library like Recharts where you pass custom components for chart ticks or plot points.
	 * @param {Object} options
	 * @param {Object} options.jsonx - Valid JSONX JSON
	 * @param {Object} [options.resources={}] - object to use for resourceprops(asyncprops), usually a result of an asynchronous call
	 * @returns {Object} resolved object of React Components
	 */
	function getComponentProps(options = { jsonx: {} }) {
	    const { jsonx, resources, } = options;
	    //@ts-ignore
	    return Object.keys(jsonx.__dangerouslyInsertComponents).reduce((cprops, cpropName) => {
	        let componentVal;
	        try {
	            // eslint-disable-next-line
	            //@ts-ignore
	            componentVal = getRenderedJSON.call(this, jsonx.__dangerouslyInsertComponents[cpropName], resources);
	        }
	        catch (e) {
	            if (this.debug || jsonx.debug)
	                componentVal = e;
	        }
	        cprops[cpropName] = componentVal;
	        return cprops;
	    }, {});
	}
	function getReactComponents(options) {
	    const { jsonx, resources, } = options;
	    const functionComponents = (!jsonx.__dangerouslyInsertFunctionComponents)
	        ? {}
	        : Object.keys(jsonx.__dangerouslyInsertFunctionComponents).reduce((cprops, cpropName) => {
	            let componentVal;
	            try {
	                const args = jsonx.__dangerouslyInsertFunctionComponents[cpropName];
	                args.options = Object.assign({}, args.options, { resources });
	                // eslint-disable-next-line
	                componentVal = getReactFunctionComponent.call(this, args.reactComponent, args.functionBody, args.options);
	            }
	            catch (e) {
	                if (this.debug || jsonx.debug)
	                    componentVal = e;
	            }
	            cprops[cpropName] = cpropName === '_children' ? [componentVal]
	                : componentVal;
	            return cprops;
	        }, {});
	    const classComponents = (!jsonx.__dangerouslyInsertClassComponents)
	        ? {}
	        : Object.keys(jsonx.__dangerouslyInsertClassComponents).reduce((cprops, cpropName) => {
	            let componentVal;
	            try {
	                const args = jsonx.__dangerouslyInsertClassComponents[cpropName];
	                args.options = Object.assign({}, args.options, { resources });
	                // eslint-disable-next-line
	                componentVal = getReactFunctionComponent.call(this, args.reactComponent, args.options);
	            }
	            catch (e) {
	                if (this.debug || jsonx.debug)
	                    componentVal = e;
	            }
	            cprops[cpropName] = cpropName === '_children' ? [componentVal] : componentVal;
	            return cprops;
	        }, {});
	    return Object.assign({}, functionComponents, classComponents);
	}
	/**
	 * Resolves jsonx.__dangerouslyInsertReactComponents into an object that turns each value into a React components. This is typically used in a library like Recharts where you pass custom components for chart ticks or plot points.
	 * @param {Object} options
	 * @param {Object} options.jsonx - Valid JSONX JSON
	//  * @param {Object} [options.resources={}] - object to use for asyncprops, usually a result of an asynchronous call
	 * @returns {Object} resolved object of React Components
	 */
	function getReactComponentProps(options = { jsonx: {} }) {
	    const { jsonx, } = options;
	    if (jsonx.__dangerouslyInsertJSONXComponents && Object.keys(jsonx.__dangerouslyInsertJSONXComponents).length) {
	        return Object.keys(jsonx.__dangerouslyInsertJSONXComponents).reduce((cprops, cpropName) => {
	            let componentVal;
	            try {
	                componentVal = getComponentFromMap({
	                    jsonx: jsonx.__dangerouslyInsertJSONXComponents[cpropName],
	                    reactComponents: this.reactComponents,
	                    componentLibraries: this.componentLibraries,
	                });
	            }
	            catch (e) {
	                if (this.debug || jsonx.debug)
	                    componentVal = e;
	            }
	            // eslint-disable-next-line
	            cprops[cpropName] = componentVal;
	            return cprops;
	        }, {});
	    }
	    else {
	        return Object.keys(jsonx.__dangerouslyInsertReactComponents).reduce((cprops, cpropName) => {
	            let componentVal;
	            try {
	                componentVal = getComponentFromMap({
	                    jsonx: {
	                        component: jsonx.__dangerouslyInsertReactComponents[cpropName],
	                        props: jsonx.__dangerouslyInsertComponentProps
	                            ? jsonx.__dangerouslyInsertComponentProps[cpropName]
	                            : {},
	                    },
	                    reactComponents: this.reactComponents,
	                    componentLibraries: this.componentLibraries,
	                });
	            }
	            catch (e) {
	                if (this.debug || jsonx.debug)
	                    componentVal = e;
	            }
	            // eslint-disable-next-line
	            cprops[cpropName] = componentVal;
	            return cprops;
	        }, {});
	    }
	}
	/**
	 * Takes a function string and returns a function on either this.props or window. The function can only be 2 levels deep
	 * @param {Object} options
	 * @param {String} [options.propFunc='func:'] - function string, like func:window.LocalStorage.getItem or func:this.props.onClick  or func:inline.myInlineFunction
	 * @param {Object} [options.allProps={}] - merged computed props, Object.assign({ key: renderIndex, }, thisprops, jsonx.props, resourceprops, asyncprops, windowprops, evalProps, insertedComponents);
	 * @returns {Function} returns a function from this.props or window functions
	 * @example
	 * getFunctionFromProps({ propFunc='func:this.props.onClick', }) // => this.props.onClick
	 */
	function getFunctionFromProps(options = { jsonx: {}, propBody: '' }) {
	    const { propFunc = 'func:', propBody, jsonx, functionProperty = '', } = options;
	    // eslint-disable-next-line
	    const { logError = console.error, debug, } = this;
	    let windowObject = {};
	    if (this.window)
	        windowObject = this.window;
	    //@ts-ignore
	    else if (typeof global !== 'undefined' && global.window)
	        windowObject = global.window;
	    try {
	        const functionNameString = propFunc.split(':')[1] || '';
	        const functionNameArray = functionNameString.split('.');
	        const functionName = (functionNameArray.length) ? functionNameArray[functionNameArray.length - 1] : '';
	        if (propFunc.includes('func:inline')) {
	            // eslint-disable-next-line
	            let InlineFunction;
	            if (jsonx.__functionargs) {
	                const args = [].concat(jsonx.__functionargs[functionProperty]);
	                args.push(propBody);
	                InlineFunction = Function.prototype.constructor.apply({}, args);
	            }
	            else {
	                InlineFunction = Function('param1', 'param2', '"use strict";' + propBody);
	            }
	            const [propFuncName, funcName,] = propFunc.split('.');
	            Object.defineProperty(InlineFunction, 'name', {
	                value: funcName,
	            });
	            if (jsonx.__functionargs) {
	                const boundArgs = [this,].concat(jsonx.__functionargs[functionProperty].map((arg) => jsonx.props[arg]));
	                return InlineFunction.bind(...boundArgs);
	            }
	            else {
	                return InlineFunction.bind(this);
	            }
	        }
	        else if (propFunc.indexOf('func:window') !== -1) {
	            if (functionNameArray.length === 3) {
	                try {
	                    return windowObject[functionNameArray[1]][functionName].bind(this);
	                }
	                catch (e) {
	                    if (debug) {
	                        logError(e);
	                    }
	                    return windowObject[functionNameArray[1]][functionName];
	                }
	            }
	            else {
	                try {
	                    return windowObject[functionName].bind(this);
	                }
	                catch (e) {
	                    if (debug) {
	                        logError(e);
	                    }
	                    return windowObject[functionName];
	                }
	            }
	        }
	        else if (functionNameArray.length === 4) {
	            return (this.props)
	                ? this.props[functionNameArray[2]][functionName]
	                : jsonx.props[functionNameArray[2]][functionName];
	        }
	        else if (functionNameArray.length === 3) {
	            return (this.props)
	                ? this.props[functionName].bind(this)
	                : jsonx.props[functionName].bind(this);
	        }
	        else {
	            return function () { };
	        }
	    }
	    catch (e) {
	        if (this.debug) {
	            logError(e);
	            if (jsonx && jsonx.debug)
	                return e;
	        }
	        return function () { };
	    }
	}
	/**
	 * Returns a resolved object from function strings that has functions pulled from jsonx.__functionProps
	 * @param {Object} options
	 * @param {Object} options.jsonx - Valid JSONX JSON
	 * @param {Object} [options.allProps={}] - merged computed props, Object.assign({ key: renderIndex, }, thisprops, jsonx.props, asyncprops, windowprops, evalProps, insertedComponents);
	 * @returns {Object} resolved object of functions from function strings
	 */
	function getFunctionProps(options = { jsonx: {} }) {
	    const { allProps = {}, jsonx = {}, } = options;
	    const getFunction = getFunctionFromProps.bind(this);
	    const funcProps = jsonx.__functionProps;
	    //Allowing for window functions
	    if (funcProps) {
	        Object.keys(funcProps).forEach(key => {
	            if (typeof funcProps[key] === 'string' && funcProps[key].indexOf('func:') !== -1) {
	                allProps[key] = getFunction({
	                    propFunc: funcProps[key],
	                    propBody: (jsonx.__inline) ? jsonx.__inline[key] : '',
	                    jsonx,
	                    functionProperty: key,
	                });
	            }
	        });
	    }
	    return allProps;
	}
	/**
	 * Returns a resolved object that has React Components pulled from window.__jsonx_custom_elements
	 * @param {Object} options
	 * @param {Object} options.jsonx - Valid JSONX JSON
	 * @param {Object} [options.allProps={}] - merged computed props, Object.assign({ key: renderIndex, }, thisprops, jsonx.props, asyncprops, windowprops, evalProps, insertedComponents);
	 * @returns {Object} resolved object of with React Components from a window property window.__jsonx_custom_elements
	 */
	function getWindowComponents(options = { jsonx: {} }) {
	    const { allProps, jsonx, } = options;
	    const windowComponents = jsonx.__windowComponents;
	    //@ts-ignore
	    const window = this.window || global.window || {};
	    const windowFuncPrefix = 'func:window.__jsonx_custom_elements';
	    // if (jsonx.hasWindowComponent && window.__jsonx_custom_elements) {
	    Object.keys(windowComponents).forEach(key => {
	        const windowKEY = (typeof windowComponents[key] === 'string')
	            ? windowComponents[key].replace(`${windowFuncPrefix}.`, '')
	            : '';
	        if (typeof windowComponents[key] === 'string' && windowComponents[key].indexOf(windowFuncPrefix) !== -1 && typeof window.__jsonx_custom_elements[windowKEY] === 'function') {
	            const windowComponentElement = window.__jsonx_custom_elements[windowKEY];
	            const windowComponentProps = (allProps['__windowComponentProps']) ? allProps['__windowComponentProps']
	                : this.props;
	            allProps[key] = react.createElement(windowComponentElement, windowComponentProps, null);
	        }
	    });
	    return allProps;
	}
	/**
	 * Returns computed properties for React Components and any property that's prefixed with __ is a computedProperty
	 * @param {Object} options
	 * @param {Object} options.jsonx - Valid JSONX JSON
	 * @param {Object} [options.resources={}] - object to use for asyncprops, usually a result of an asynchronous call
	 * @param {Number} options.renderIndex - number used for React key prop
	 * @param {function} [options.logError=console.error] - error logging function
	 * @param {Object} [options.componentLibraries] - react components to render with JSONX
	 * @param {Boolean} [options.useReduxState=true] - use redux props in this.props
	 * @param {Boolean} [options.ignoreReduxPropsInComponentLibraries=true] - ignore redux props in this.props for component libraries, this is helpful incase these properties collide with component library element properties
	 * @param {boolean} [options.debug=false] - use debug messages
	 * @example
	const testJSONX = { component: 'div',
	  props: { id: 'generatedJSONX', className: 'jsonx' },
	  children: [ [Object] ],
	  asyncprops: { auth: [Array], username: [Array] },
	  __dangerouslyEvalProps: { getUsername: '(user={})=>user.name' },
	  __dangerouslyInsertComponents: { myComponent: [Object] }
	const resources = {
	  user: {
	    name: 'jsonx',
	    description: 'react withouth javascript',
	  },
	  stats: {
	    logins: 102,
	    comments: 3,
	  },
	  authentication: 'OAuth2',
	};
	const renderIndex = 1;
	getComputedProps.call({}, {
	        jsonx: testJSONX,
	        resources,
	        renderIndex,
	      });
	computedProps = { key: 1,
	     id: 'generatedJSONX',
	     className: 'jsonx',
	     auth: 'OAuth2',
	     username: 'jsonx',
	     getUsername: [Function],
	     myComponent:
	      { '$$typeof': Symbol(react.element),
	        type: 'p',
	        key: '8',
	        ref: null,
	        props: [Object],
	        _owner: null,
	        _store: {} } } }
	 *
	 */
	function getComputedProps(options = {}) {
	    // eslint-disable-next-line
	    const { jsonx = {}, resources = {}, renderIndex, logError = console.error, useReduxState = true, ignoreReduxPropsInComponentLibraries = true, disableRenderIndexKey = true, debug, componentLibraries = {} } = options;
	    try {
	        const componentThisProp = (jsonx.thisprops)
	            ? Object.assign({
	                __jsonx: {
	                    _component: jsonx,
	                    _resources: resources,
	                },
	            }, this.props, jsonx.props, 
	            //@ts-ignore
	            (useReduxState && !jsonx.ignoreReduxProps && (ignoreReduxPropsInComponentLibraries && !componentLibraries[jsonx.component]))
	                ? (this.props && this.props.getState) ? this.props.getState() : {}
	                : {})
	            : undefined;
	        const windowTraverse = typeof window !== 'undefined' ? window : {};
	        const asyncprops = jsonx.asyncprops ? getJSONXProps({ jsonx, propName: 'asyncprops', traverseObject: resources, }) : {};
	        const resourceprops = jsonx.resourceprops ? getJSONXProps({ jsonx, propName: 'resourceprops', traverseObject: resources, }) : {};
	        const windowprops = jsonx.windowprops ? getJSONXProps({ jsonx, propName: 'windowprops', traverseObject: windowTraverse, }) : {};
	        const thisprops = jsonx.thisprops ? getJSONXProps({ jsonx, propName: 'thisprops', traverseObject: componentThisProp, }) : {};
	        const thisstate = jsonx.thisstate ? getJSONXProps({ jsonx, propName: 'thisstate', traverseObject: this.state, }) : {};
	        //allowing javascript injections
	        const evalProps = (jsonx.__dangerouslyEvalProps || jsonx.__dangerouslyBindEvalProps)
	            ? getEvalProps.call(this, { jsonx, })
	            : {};
	        const insertedComponents = (jsonx.__dangerouslyInsertComponents)
	            ? getComponentProps.call(this, { jsonx, resources, debug, })
	            : {};
	        const insertedReactComponents = (jsonx.__dangerouslyInsertReactComponents || jsonx.__dangerouslyInsertJSONXComponents)
	            ? getReactComponentProps.call(this, { jsonx, debug, })
	            : {};
	        const insertedComputedComponents = (jsonx.__dangerouslyInsertFunctionComponents || jsonx.__dangerouslyInsertClassComponents)
	            ? getReactComponents.call(this, { jsonx, debug, })
	            : {};
	        const evalAllProps = (jsonx.__dangerouslyEvalAllProps)
	            ? getEvalProps.call(this, { jsonx, })
	            : {};
	        const allProps = Object.assign({}, this.disableRenderIndexKey || disableRenderIndexKey ? {} : { key: renderIndex, }, jsonx.props, thisprops, thisstate, resourceprops, asyncprops, windowprops, evalProps, insertedComponents, insertedReactComponents, insertedComputedComponents);
	        const computedProps = Object.assign({}, allProps, jsonx.__functionProps ? getFunctionProps.call(this, { allProps, jsonx, }) : {}, jsonx.__windowComponents ? getWindowComponents.call(this, { allProps, jsonx, }) : {}, jsonx.__spreadComponent ? getChildrenComponents.call(this, { allProps, jsonx, }) : {}, evalAllProps);
	        if (jsonx.debug)
	            console.debug({ jsonx, computedProps, });
	        return computedProps;
	    }
	    catch (e) {
	        debug && logError(e, (e.stack) ? e.stack : 'no stack');
	        return null;
	    }
	}

	var jsonxProps = /*#__PURE__*/Object.freeze({
		STRIP_COMMENTS: STRIP_COMMENTS,
		ARGUMENT_NAMES: ARGUMENT_NAMES,
		getParamNames: getParamNames,
		getJSONXProps: getJSONXProps,
		getChildrenComponents: getChildrenComponents,
		boundArgsReducer: boundArgsReducer,
		getEvalProps: getEvalProps,
		getComponentProps: getComponentProps,
		getReactComponents: getReactComponents,
		getReactComponentProps: getReactComponentProps,
		getFunctionFromProps: getFunctionFromProps,
		getFunctionProps: getFunctionProps,
		getWindowComponents: getWindowComponents,
		getComputedProps: getComputedProps
	});

	/**
	 * returns a valid jsonx.children property
	 * @param {Object} options
	 * @param {Object} [options.jsonx ={}]- Valid JSONX JSON
	 * @param {Object} [options.props=options.jsonx.children] - Props to pull children  Object.assign(jsonx.props,jsonx.asyncprops,jsonx.thisprops,jsonx.windowprops)
	 * @returns {Object[]|String} returns a valid jsonx.children property that's either an array of JSONX objects or a string
	 * @example
	 * const sampleJSONX = {
	  component: 'div',
	  props: {
	    id: 'generatedJSONX',
	    className:'jsonx',
	  },
	  children: [
	    {
	      component: 'p',
	      props: {
	        style: {
	          color: 'red',
	        },
	      },
	      children:'hello world',
	    },
	    {
	      component: 'div',
	      children: [
	        {
	          component: 'ul',
	          children: [
	            {
	              component: 'li',
	              children:'list',
	            },
	          ],
	        },
	      ],
	    },
	  ],
	};
	const JSONXChildren = getChildrenProperty({ jsonx: sampleJSONX, }); //=> [ [jsonx Object],[jsonx Object]]
	const JSONXChildrenPTag = getChildrenProperty({ jsonx: sampleJSONX.children[ 0 ], }); //=>hello world
	 */
	function getChildrenProperty(options = {}) {
	    const { jsonx = {}, } = options;
	    const props = options.props || jsonx.props || {};
	    if (typeof props._children !== 'undefined' /* && !jsonx.children */) {
	        if (Array.isArray(props._children) || typeof props._children === 'string' || typeof props._children === 'number') {
	            return props._children;
	        }
	        else {
	            return jsonx.children;
	        }
	    }
	    else if (typeof jsonx.children === 'undefined') {
	        if (props && props.children && (typeof props.children !== 'undefined' || Array.isArray(props.children))) {
	            return props.children;
	        }
	        else {
	            return null;
	        }
	    }
	    else {
	        return jsonx.children;
	    }
	}
	/**
	 * Used to pass properties down to child components if passprops is set to true
	 * @param {Object} options
	 * @param {Object} [options.jsonx ={}] - Valid JSONX JSON
	 * @param {Object} [options.childjsonx ={}] - Valid JSONX JSON
	 * @param {Number} options.renderIndex - React key property
	 * @param {Object} [options.props=options.jsonx.props] - Props to pull children  Object.assign(jsonx.props,jsonx.asyncprops,jsonx.thisprops,jsonx.windowprops)
	 * @returns {Object|String} returns a valid  Valid JSONX Child object or a string
	 */
	function getChildrenProps(options = {}) {
	    const { jsonx = {}, childjsonx, renderIndex, } = options;
	    const props = options.props || jsonx.props || {};
	    return (jsonx.passprops && typeof childjsonx === 'object')
	        ? Object.assign({}, childjsonx, {
	            props: Object.assign({}, props, ((childjsonx.thisprops && childjsonx.thisprops.style) // this is to make sure when you bind props, if you've defined props in a dynamic property, to not use bind props to  remove passing down styles
	                || (childjsonx.asyncprops && childjsonx.asyncprops.style)
	                || (childjsonx.windowprops && childjsonx.windowprops.style))
	                ? {}
	                : {
	                    style: {},
	                }, childjsonx.props, { key: renderIndex || '' + Math.random(), }),
	        })
	        : childjsonx;
	}
	/**
	 * returns React Child Elements via JSONX
	 * @param {*} options
	 * @property {object} this - options for getReactElementFromJSONX
	 * @property {Object} [this.componentLibraries] - react components to render with JSONX
	 * @property {boolean} [this.debug=false] - use debug messages
	 * @property {function} [this.logError=console.error] - error logging function
	 * @property {string[]} [this.boundedComponents=[]] - list of components that require a bound this context (usefult for redux router)
	 */
	function getJSONXChildren(options = {}) {
	    // eslint-disable-next-line
	    const { jsonx, resources, renderIndex, logError = console.error, } = options;
	    try {
	        const props = options.props || jsonx.props || {};
	        jsonx.children = getChildrenProperty({ jsonx, props, });
	        props._children = undefined;
	        delete props._children;
	        return (jsonx.children && Array.isArray(jsonx.children) && typeof jsonx.children !== 'string')
	            //@ts-ignore
	            ? jsonx.children.map(childjsonx => getReactElementFromJSONX.call(this, getChildrenProps({ jsonx, childjsonx, props, renderIndex, }), resources))
	            : jsonx.children;
	    }
	    catch (e) {
	        this && this.debug && logError(e, (e.stack) ? e.stack : 'no stack');
	        return null;
	    }
	}

	var jsonxChildren = /*#__PURE__*/Object.freeze({
		getChildrenProperty: getChildrenProperty,
		getChildrenProps: getChildrenProps,
		getJSONXChildren: getJSONXChildren
	});

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	// resolves . and .. elements in a path array with directory names there
	// must be no slashes, empty elements, or device names (c:\) in the array
	// (so also no leading and trailing slashes - it does not distinguish
	// relative and absolute paths)
	function normalizeArray(parts, allowAboveRoot) {
	  // if the path tries to go above the root, `up` ends up > 0
	  var up = 0;

	  for (var i = parts.length - 1; i >= 0; i--) {
	    var last = parts[i];

	    if (last === '.') {
	      parts.splice(i, 1);
	    } else if (last === '..') {
	      parts.splice(i, 1);
	      up++;
	    } else if (up) {
	      parts.splice(i, 1);
	      up--;
	    }
	  } // if the path is allowed to go above the root, restore leading ..s


	  if (allowAboveRoot) {
	    for (; up--; up) {
	      parts.unshift('..');
	    }
	  }

	  return parts;
	} // Split a filename into [root, dir, basename, ext], unix version
	// 'root' is just a slash, or nothing.


	var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;

	var splitPath = function splitPath(filename) {
	  return splitPathRe.exec(filename).slice(1);
	}; // path.resolve([from ...], to)
	// posix version


	function resolve() {
	  var resolvedPath = '',
	      resolvedAbsolute = false;

	  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
	    var path = i >= 0 ? arguments[i] : '/'; // Skip empty and invalid entries

	    if (typeof path !== 'string') {
	      throw new TypeError('Arguments to path.resolve must be strings');
	    } else if (!path) {
	      continue;
	    }

	    resolvedPath = path + '/' + resolvedPath;
	    resolvedAbsolute = path.charAt(0) === '/';
	  } // At this point the path should be resolved to a full absolute path, but
	  // handle relative paths to be safe (might happen when process.cwd() fails)
	  // Normalize the path


	  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function (p) {
	    return !!p;
	  }), !resolvedAbsolute).join('/');
	  return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';
	}
	// posix version

	function normalize(path) {
	  var isPathAbsolute = isAbsolute(path),
	      trailingSlash = substr(path, -1) === '/'; // Normalize the path

	  path = normalizeArray(filter(path.split('/'), function (p) {
	    return !!p;
	  }), !isPathAbsolute).join('/');

	  if (!path && !isPathAbsolute) {
	    path = '.';
	  }

	  if (path && trailingSlash) {
	    path += '/';
	  }

	  return (isPathAbsolute ? '/' : '') + path;
	}

	function isAbsolute(path) {
	  return path.charAt(0) === '/';
	} // posix version

	function join() {
	  var paths = Array.prototype.slice.call(arguments, 0);
	  return normalize(filter(paths, function (p, index) {
	    if (typeof p !== 'string') {
	      throw new TypeError('Arguments to path.join must be strings');
	    }

	    return p;
	  }).join('/'));
	} // path.relative(from, to)
	// posix version

	function relative(from, to) {
	  from = resolve(from).substr(1);
	  to = resolve(to).substr(1);

	  function trim(arr) {
	    var start = 0;

	    for (; start < arr.length; start++) {
	      if (arr[start] !== '') break;
	    }

	    var end = arr.length - 1;

	    for (; end >= 0; end--) {
	      if (arr[end] !== '') break;
	    }

	    if (start > end) return [];
	    return arr.slice(start, end - start + 1);
	  }

	  var fromParts = trim(from.split('/'));
	  var toParts = trim(to.split('/'));
	  var length = Math.min(fromParts.length, toParts.length);
	  var samePartsLength = length;

	  for (var i = 0; i < length; i++) {
	    if (fromParts[i] !== toParts[i]) {
	      samePartsLength = i;
	      break;
	    }
	  }

	  var outputParts = [];

	  for (var i = samePartsLength; i < fromParts.length; i++) {
	    outputParts.push('..');
	  }

	  outputParts = outputParts.concat(toParts.slice(samePartsLength));
	  return outputParts.join('/');
	}
	var sep = '/';
	var delimiter = ':';
	function dirname(path) {
	  var result = splitPath(path),
	      root = result[0],
	      dir = result[1];

	  if (!root && !dir) {
	    // No dirname whatsoever
	    return '.';
	  }

	  if (dir) {
	    // It has a dirname, strip trailing slash
	    dir = dir.substr(0, dir.length - 1);
	  }

	  return root + dir;
	}
	function basename(path, ext) {
	  var f = splitPath(path)[2]; // TODO: make this comparison case-insensitive on windows?

	  if (ext && f.substr(-1 * ext.length) === ext) {
	    f = f.substr(0, f.length - ext.length);
	  }

	  return f;
	}
	function extname(path) {
	  return splitPath(path)[3];
	}
	var path = {
	  extname: extname,
	  basename: basename,
	  dirname: dirname,
	  sep: sep,
	  delimiter: delimiter,
	  relative: relative,
	  join: join,
	  isAbsolute: isAbsolute,
	  normalize: normalize,
	  resolve: resolve
	};

	function filter(xs, f) {
	  if (xs.filter) return xs.filter(f);
	  var res = [];

	  for (var i = 0; i < xs.length; i++) {
	    if (f(xs[i], i, xs)) res.push(xs[i]);
	  }

	  return res;
	} // String.prototype.substr - negative index don't work in IE8


	var substr = 'ab'.substr(-1) === 'b' ? function (str, start, len) {
	  return str.substr(start, len);
	} : function (str, start, len) {
	  if (start < 0) start = str.length + start;
	  return str.substr(start, len);
	};

	var fs = {};

	const scopedEval = eval;
	/**
	 * Use JSONX for express view rendering
	 * @param {string} filePath - path to jsonx express view
	 * @param {object} options - property used for express view {locals}
	 * @param {object} options.__boundConfig - property used to bind this object for JSONX, can be used to add custom components
	 * @param {string} [options.__DOCTYPE="<!DOCTYPE html>"] - html doctype string
	 * @param {*} callback
	 */
	function __express$$1(filePath, options, callback) {
	    try {
	        let jsonxModule = options.__jsonx;
	        if (filePath) {
	            const jsFile = fs.readFileSync(filePath).toString();
	            jsonxModule = scopedEval(jsFile.toString());
	        }
	        const resources = Object.assign({}, options);
	        delete resources.__boundConfig;
	        delete resources.__DOCTYPE;
	        delete resources.__jsonx;
	        const context = Object.assign({}, options.__boundConfig);
	        if (path.extname('.json'))
	            context.useJSON = true;
	        const jsonxRenderedString = outputHTML.call(context, {
	            jsonx: jsonxModule,
	            resources,
	        });
	        const template = `${options.__DOCTYPE || '<!DOCTYPE html>'}
${jsonxRenderedString}`;
	        if (typeof callback === 'function')
	            callback(null, template);
	        else
	            return template;
	    }
	    catch (e) {
	        if (typeof callback === 'function')
	            callback(e);
	        else
	            throw e;
	    }
	}

	// import React, { createElement, } from 'react';
	const createElement = react.createElement;
	const { componentMap: componentMap$1, getComponentFromMap: getComponentFromMap$1, getBoundedComponents: getBoundedComponents$1, DynamicComponent: DynamicComponent$1, } = jsonxComponents;
	const { getComputedProps: getComputedProps$1 } = jsonxProps;
	const { getJSONXChildren: getJSONXChildren$1 } = jsonxChildren;
	const { displayComponent: displayComponent$1 } = jsonxUtils;
	exports.renderIndex = 0;
	/**
	 * Use JSONX without any configuration to render JSONX JSON to HTML and insert JSONX into querySelector using ReactDOM.render
	 * @example
	 * // Uses react to create <!DOCTYPE html><body><div id="myApp"><div class="jsonx-generated"><p style="color:red;">hello world</p></div></div></body>
	 * jsonx.jsonxRender({ jsonx: { component: 'div', props:{className:'jsonx-generated',children:[{ component:'p',props:{style:{color:'red'}}, children:'hello world' }]}}, querySelector:'#myApp', });
	 * @param {object} config - options used to inject html via ReactDOM.render
	 * @param {object} config.jsonx - any valid JSONX JSON object
	 * @param {object} config.resources - any additional resource used for asynchronous properties
	 * @param {string} config.querySelector - selector for document.querySelector
	 * @property {object} this - options for getReactElementFromJSONX
	 */
	function jsonxRender(config = { jsonx: { component: "" }, querySelector: "" }) {
	    const { jsonx, resources, querySelector, DOM, portal } = config;
	    const Render = portal ? reactDom.createPortal : reactDom.render;
	    const RenderDOM = DOM || document.querySelector(querySelector);
	    const JSONXReactElement = getReactElementFromJSONX.call(this || {}, jsonx, resources);
	    if (!JSONXReactElement)
	        throw ReferenceError("Invalid React Element");
	    else if (!RenderDOM)
	        throw ReferenceError("Invalid Render DOM Element");
	    Render(JSONXReactElement, RenderDOM);
	}
	/**
	 * Use ReactDOMServer.renderToString to render html from JSONX
	 * @example
	 * // Uses react to create <div class="jsonx-generated"><p style="color:red;">hello world</p></div>
	 * jsonx.outputHTML({ jsonx: { component: 'div', props:{className:'jsonx-generated',children:[{ component:'p',props:{style:{color:'red'}}, children:'hello world' }]}}, });
	 * @param {object} config - options used to inject html via ReactDOM.render
	 * @param {object} config.jsonx - any valid JSONX JSON object
	 * @param {object} config.resources - any additional resource used for asynchronous properties
	 * @property {object} this - options for getReactElementFromJSONX
	 * @returns {string} React genereated html via JSONX JSON
	 */
	function outputHTML(config = { jsonx: { component: "" } }) {
	    const { jsonx, resources, type = "Fragment", props, children } = config;
	    return this && this.useJSON
	        ? server.renderToString(getReactElementFromJSON.call(this || {}, { type, props, children }))
	        : server.renderToString(getReactElementFromJSONX.call(this || {}, jsonx, resources));
	}
	/**
	 * Use React.createElement and JSONX JSON to create React elements
	 * @example
	 * // Uses react to create the equivalent JSX <myComponent style={{color:blue}}>hello world</myComponent>
	 * jsonx.getReactElementFromJSONX({component:'myCompnent',props:{style:{color:'blue'}},children:'hello world'})
	 * @param {object} jsonx - any valid JSONX JSON object
	 * @param {object} resources - any additional resource used for asynchronous properties
	 * @property {object} this - options for getReactElementFromJSONX
	 * @property {Object} [this.componentLibraries] - react components to render with JSONX
	 * @property {boolean} [this.debug=false] - use debug messages
	 * @property {boolean} [this.returnJSON=false] - return json object of {type,props,children} instead of react element
	 * @property {boolean} [this.disableRenderIndexKey=false] - disables auto assign a key prop
	 * @property {function} [this.logError=console.error] - error logging function
	 * @property {string[]} [this.boundedComponents=[]] - list of components that require a bound this context (usefult for redux router)
	 * @returns {function} React element via React.createElement
	 */
	function getReactElementFromJSONX(jsonx, resources = {}) {
	    // eslint-disable-next-line
	    const { componentLibraries = {}, debug = false, returnJSON = false, logError = console.error, boundedComponents = [], disableRenderIndexKey = true, } = this || {};
	    // const componentLibraries = this.componentLibraries;
	    if (!jsonx)
	        return null;
	    if (jsonx.type)
	        jsonx.component = jsonx.type;
	    if (validSimpleJSONXSyntax(jsonx))
	        jsonx = simpleJSONXSyntax(jsonx);
	    if (!jsonx.component)
	        return createElement("span", {}, debug ? "Error: Missing Component Object" : "");
	    try {
	        const components = Object.assign({ DynamicComponent: DynamicComponent$1.bind(this) }, componentMap$1, this.reactComponents);
	        const reactComponents = boundedComponents.length
	            ? getBoundedComponents$1.call(this, {
	                boundedComponents,
	                reactComponents: components,
	            })
	            : components;
	        exports.renderIndex++;
	        const element = getComponentFromMap$1({
	            jsonx,
	            reactComponents,
	            componentLibraries,
	            debug,
	            logError,
	        });
	        const props = getComputedProps$1.call(this, {
	            jsonx,
	            resources,
	            renderIndex: exports.renderIndex,
	            componentLibraries,
	            debug,
	            logError,
	            disableRenderIndexKey,
	        });
	        const displayElement = jsonx.comparisonprops
	            ? displayComponent$1.call(this, {
	                jsonx,
	                props,
	                renderIndex: exports.renderIndex,
	                componentLibraries,
	                debug,
	            })
	            : true;
	        if (displayElement) {
	            const children = getJSONXChildren$1.call(this, {
	                jsonx,
	                props,
	                resources,
	                renderIndex: exports.renderIndex,
	            });
	            if (returnJSON)
	                return { type: element, props, children };
	            return createElement(element, props, children);
	        }
	        else {
	            return null;
	        }
	    }
	    catch (e) {
	        if (debug) {
	            logError({ jsonx, resources }, "this", this);
	            logError(e, e.stack ? e.stack : "no stack");
	        }
	        throw e;
	    }
	}
	const getRenderedJSON = getReactElementFromJSONX;
	const getReactElement = getReactElementFromJSONX;
	/** converts a json object {type,props,children} into a react element
	 * @example
	 * jsonx.getReactElementFromJSON({type:'div',props:{title:'some title attribute'},children:'inner html text'})
	 * @param {Object|String} options.type - 'div' or react component
	 * @param {Object} options.props - props for react element
	 * @param {String|[Object]} options.children - children elements
	 * @returns {function} React element via React.createElement
	 */
	function getReactElementFromJSON({ type, props, children }) {
	    return createElement(type, props, Array.isArray(children) ? children.map(getReactElementFromJSON) : children);
	}
	/** converts a jsonx json object into a react function component
	 * @example
	 * jsonx.compile({jsonx:{component:'div',props:{title:'some title attribute'},children:'inner html text'}}) //=>React Function Component
	 * @param {Object} jsonx - valid JSONX JSON
	 * @param {Object} resources - props for react element
	 * @returns {function} React element via React.createElement
	 */
	function compile(jsonx, resources = {}) {
	    const context = Object.assign({}, this, { returnJSON: true });
	    const json = getReactElementFromJSONX.call(context, jsonx, resources);
	    const func = function compiledJSONX(props) {
	        json.props = Object.assign({}, json.props, props);
	        return getReactElementFromJSON(json);
	    };
	    Object.defineProperty(func, "name", { value: this.name });
	    return func;
	}
	/**
	 * converts JSONX JSON IR to JSX
	 * @example
	 * jsonx.jsonToJSX({ type: 'div', props: { key: 5, title: 'test' }, children: 'hello' }) // => '<div key={5} title="test">hello</div>'
	 * @param {Object} json - {type,props,children}
	 * @returns {String} jsx string
	 */
	function outputJSX(jsonx, resources = {}) {
	    const context = Object.assign({}, this, { returnJSON: true });
	    const json = getReactElementFromJSONX.call(context, jsonx, resources);
	    return jsonToJSX(json);
	}
	/**
	 * Compiles JSONX into JSON IR format for react create element
	 * @example
	 * jsonx.outputJSON({ component: 'div', props: { title: 'test', }, children: 'hello', }); //=> { type: 'div',
	 props: { key: 5, title: 'test' },
	 children: 'hello' }
	 * @property {object} this - options for getReactElementFromJSONX
	 * @param {object} jsonx - any valid JSONX JSON object
	 * @param {object} resources - any additional resource used for asynchronous properties
	 * @returns {Object} json - {type,props,children}
	 */
	function outputJSON(jsonx, resources = {}) {
	    //@ts-ignore
	    const context = Object.assign({}, this, { returnJSON: true });
	    return getReactElementFromJSONX.call(context, jsonx, resources);
	}
	const jsonxHTMLString = outputHTML;
	/**
	 * converts JSONX JSON IR to JSX
	 * @example
	 * jsonx.jsonToJSX({ type: 'div', props: { key: 5, title: 'test' }, children: 'hello' }) // => '<div key={5} title="test">hello</div>'
	 * @param {Object} json - {type,props,children}
	 * @returns {String} jsx string
	 */
	function jsonToJSX(json) {
	    const propsString = json.props
	        ? Object.keys(json.props)
	            .filter(prop => prop.includes("__eval_") === false)
	            .reduce((propString, prop) => {
	            propString += ` ${prop.toString()}=${typeof json.props[prop] === "string"
                ? `"${json.props[prop].toString()}"`
                : `{${(json.props[`__eval_${prop}`] || json.props[prop]).toString()}}`}`;
	            return propString;
	        }, "")
	        : "";
	    return Array.isArray(json.children)
	        ? `<${json.type} ${propsString}>
  ${json.children.map(jsonToJSX)}
</${json.type}>`
	        : `<${json.type}${propsString}>${json.children}</${json.type}>`;
	}
	/**
	 * Exposes react module used in JSONX
	 * @returns {Object} React
	 */
	function __getReact() {
	    return react;
	}
	/**
	 * Exposes react dom module used in JSONX
	 * @returns {Object} ReactDOM
	 */
	function __getReactDOM() {
	    return reactDom;
	}
	const _jsonxChildren = jsonxChildren;
	const _jsonxComponents = jsonxComponents;
	const _jsonxProps = jsonxProps;
	const _jsonxUtils = jsonxUtils;

	exports.jsonxRender = jsonxRender;
	exports.outputHTML = outputHTML;
	exports.getReactElementFromJSONX = getReactElementFromJSONX;
	exports.getRenderedJSON = getRenderedJSON;
	exports.getReactElement = getReactElement;
	exports.getReactElementFromJSON = getReactElementFromJSON;
	exports.compile = compile;
	exports.outputJSX = outputJSX;
	exports.outputJSON = outputJSON;
	exports.jsonxHTMLString = jsonxHTMLString;
	exports.jsonToJSX = jsonToJSX;
	exports.__getReact = __getReact;
	exports.__getReactDOM = __getReactDOM;
	exports._jsonxChildren = _jsonxChildren;
	exports._jsonxComponents = _jsonxComponents;
	exports._jsonxProps = _jsonxProps;
	exports._jsonxUtils = _jsonxUtils;
	exports.default = getReactElementFromJSONX;
	exports.__express = __express$$1;
	exports.renderFile = __express$$1;

	Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=jsonx.umd.min.js.map
